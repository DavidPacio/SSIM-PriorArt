<?xml version="1.0" encoding="utf-8"?>
<report version="12" watermark-text="Draft" watermark-font="" watermark-colour="-4144960" use-default-theme="False" report-display-type="95" report-guid="962fd35d-aa26-4706-b2e9-afae564e44dd" timestamp="31/12/2010 00:00:00" template-version="13">
	<theme version="4" name="XBRL Limited Company Full Accounts (UK GAAP)" template-version="0">
		<template><theme-definition><style-definition name="Table Text" para-spacing-before="0.5mm" date-format="d MMMM yyyy" inner-top-border-clearance="0mm" para-alignment="Left" currency-format="#,#;(#,#);-" para-spacing-after="0.5mm" inner-bottom-border-clearance="0mm" outer-top-border-clearance="0mm" keep-with-next="0" outer-bottom-border-clearance="0mm" /><style-definition name="Negative as Credit" currency-format="#,#;(#,#);-" base-style="Table Text" /><style-definition name="Table Row Heading" currency-format="{cur}#,#;({cur}#,#);-" outer-top-border-clearance="2mm" base-style="Table Text" font-style="+bold" /><style-definition name="Table Value Underline" para-alignment="Right" bottom-border-style="Solid" base-style="Table Text" bottom-border-size="0.5pt" outer-bottom-border-clearance="-0.5pt" /><style-definition name="Table Column Heading" date-format="yyyy" para-alignment="Centre" inner-right-border-clearance="2pt" currency-format="{cur}##;({cur}##);{cur}" inner-left-border-clearance="2pt" base-style="Table Text" font-style="+bold" keep-with-next="2" /><style-definition name="Total" para-spacing-before="0.5mm" para-alignment="Right" outer-right-border-clearance="0mm" outer-top-border-clearance="2mm" base-style="Table Text" bottom-border-size="0pt" outer-left-border-clearance="0mm" outer-bottom-border-clearance="0mm" /><style-definition name="Table Text Percentage" currency-format="#0.00;(#0.00);0.00" base-style="Table Text" /><style-definition name="Table Text Percentage Final Value" bottom-border-style="DoubleLine" base-style="Table Text Percentage" bottom-border-size="2pt" outer-bottom-border-clearance="-0.7mm" /><style-definition name="Number" currency-format="#,#;#,#;-" base-style="Table Text" /><style-definition name="Normal" para-spacing-before="0pt" date-format="d MMMM yyyy" para-alignment="Full" currency-format="{cur}#,#0;({cur}#,#0);{cur}nil" para-spacing-after="5pt" font-size="10pt" font-family="Times New Roman" font-capitalisation="None" default="1" /><style-definition name="Link To Data" font-size="10pt" font-color="Blue" base-style="Normal" font-style="+underline" font-family="Microsoft Sans Serif" /><style-definition name="Title" para-spacing-before="5mm" date-format="yyyy" para-alignment="Left" currency-format="{cur}#,#;({cur}#,#);{cur}" para-spacing-after="0.5mm" font-style="+bold" keep-with-next="2" /><style-definition name="Page Header" date-format="d MMMM yyyy" para-alignment="Centre" para-spacing-after="5mm" para-line-spacing="2mm" font-size="12pt" font-style="+bold" /><style-definition name="Page Footer" date-format="d MMMM yyyy" para-alignment="Centre" font-size="10pt" /><style-definition name="Note Heading" outer-top-border-clearance="18pt" font-style="+bold" keep-with-next="2" outer-bottom-border-clearance="5pt" /><style-definition name="Warning" currency-format="N" font-color="Red" keep-with-next="0" /><style-definition name="Negative as Debit" currency-format="(#,#);#,#;-" base-style="Table Text" /><style-definition name="Grand Total Overline" top-border-size="0.5pt" top-border-style="Solid" bottom-border-style="DoubleLine" base-style="Total" bottom-border-size="2pt" /><style-definition name="Inline Currency" currency-format="{cur}#,#0;({cur}#,#0);{cur}nil" base-style="Normal" /><style-definition name="Total Underline" para-spacing-after="0.5mm" inner-bottom-border-clearance="0mm" outer-top-border-clearance="2mm" bottom-border-style="Solid" base-style="Total" bottom-border-size="0.5pt" outer-bottom-border-clearance="-0.2mm" /><style-definition name="Grand Total" outer-top-border-clearance="2mm" bottom-border-style="DoubleLine" base-style="Total" bottom-border-size="2pt" outer-bottom-border-clearance="-2pt" /><style-definition name="Note Number Indent" para-alignment="Left" inner-left-border-clearance="-5mm" outer-top-border-clearance="0mm" base-style="Note Heading" outer-bottom-border-clearance="0mm" /><style-definition name="Percentage" currency-format="0.##;(0.##);0;%" /><style-definition name="Final Value In List" bottom-border-style="DoubleLine" base-style="Table Text" bottom-border-size="2pt" outer-bottom-border-clearance="-0.7mm" /><style-definition name="Total Overline" top-border-size="0.5pt" top-border-style="Solid" base-style="Total" /><style-definition name="Inline Number" currency-format="#,#;#,#;-" base-style="Normal" /></theme-definition></template>
	</theme>
	<report-template version="12" name="XBRL Limited Company Full Accounts (UK GAAP)" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Conditional" section-name="root" page-break-before="False" keep-with-next-strength="0" template-guid="75820aa6-7084-4428-9e6d-46a59ddddef1">
		<variables>
			<variable name="CompanySize">if reporting.queries.client.lookupaccountingperioddata("Disclosure|CompanyStatus|CompanyStatus|CompanyStatus|CYFilingEntitlement|Current Period")[0].Value!= 'Calculated entitlement' then reporting.queries.client.lookupaccountingperioddata("Disclosure|CompanyStatus|CompanyStatus|CompanyStatus|CYFilingEntitlement|Current Period")[0].Value else
          reporting.queries.client.lookupaccountingperioddata("Disclosure|CompanyStatus|CompanyStatus|CompanyStatus|CalculatedEntitlement|Current Period")[0].Value</variable>
			<variable name="PBT">if 

reportHelper.HasPriorPeriod = false and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCategory('PBT').Totals[0].Value &lt; 0

then

'profit'

else

if

reportHelper.HasPriorPeriod = false and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCategory('PBT').Totals[0].Value &gt; 0

then 

'loss'

else

if

reportHelper.HasPriorPeriod and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCategory('PBT').Totals[0].Value &lt; 0 and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCategory('PBT').Totals[1].Value &lt; 0

then

'profit'

else

if

reportHelper.HasPriorPeriod and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCategory('PBT').Totals[0].Value &gt; 0 and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCategory('PBT').Totals[1].Value &gt; 0

then

'loss'

else

if

reportHelper.HasPriorPeriod and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCategory('PBT').Totals[0].Value &lt; 0 and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCategory('PBT').Totals[1].Value &gt; 0

then

'profit/loss'

else

if

reportHelper.HasPriorPeriod and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCategory('PBT').Totals[0].Value &gt; 0 and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCategory('PBT').Totals[1].Value &lt; 0

then

'loss/profit'

else

'profit/loss'
</variable>
			<variable name="DirectorsDuringPeriod">reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Officers|Officers|Officers|*:filter[*|General|Type|Current Period!=Company secretary]:filter[*|General|Cessation|Current Period&gt; '"+ reportHelper.Currentperiod.StartDate +"',*|General|Cessation|Current Period=null]",null,true)</variable>
			<variable name="SingleActiveDirectorGender">if DirectorsActiveAtFinalisationCount!=1 then 'not applicable'



else if DirectorsActiveAtFinalisationCount=1

then

if reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Officers|Officers|*|*:filter[New/EditOfficer|General|Type|Current Period!=Company secretary]:filter[*|General|Cessation|Current Period=null]|New/EditOfficer|General|Gender|Current Period")[0].HasValue

then reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Officers|Officers|*|*:filter[New/EditOfficer|General|Type|Current Period!=Company secretary]:filter[*|General|Cessation|Current Period=null]|New/EditOfficer|General|Gender|Current Period")[0].Value

else 'not applicable'
</variable>
			<variable name="DirectorsActiveAtFinalisationCount">reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Officers|Officers|Officers|*:filter[*|General|Type|Current Period!=Company secretary]:filter[*|General|Cessation|Current Period=null]", null , true).Count
</variable>
			<variable name="HasFinalisation">reporting.queries.client.lookupaccountingperioddata('Disclosure|General|FinalisationDates|FinalisationDates|Directors|Current Period')[0].HasValue</variable>
			<variable name="Finalisation">reporting.queries.client.lookupaccountingperioddata('Disclosure|General|FinalisationDates|FinalisationDates|Directors|Current Period')[0].Value</variable>
			<variable name="FRSSE">reporting.queries.client.lookupaccountingperioddata("Disclosure|CompanyStatus|CompanyStatus|CompanyStatus|FRSSE|Current Period")[0].Value</variable>
			<variable name="OtherGainsAndLosses">reportHelper.Computation(reportHelper.PrimaryStatementRounding, reportHelper.PrimaryStatementScaling).GetPrimaryCode('953').HasTransactions
or
reportHelper.Computation(reportHelper.PrimaryStatementRounding, reportHelper.PrimaryStatementScaling).GetPrimaryCode('985').HasTransactions
or
reportHelper.Computation(reportHelper.PrimaryStatementRounding, reportHelper.PrimaryStatementScaling).GetPrimaryCode('956').HasTransactions
or
reportHelper.Computation(reportHelper.PrimaryStatementRounding, reportHelper.PrimaryStatementScaling).GetPrimaryCode('957').HasTransactions
or
reportHelper.Computation(reportHelper.PrimaryStatementRounding, reportHelper.PrimaryStatementScaling).GetPrimaryCode('987').HasTransactions
or
reportHelper.Computation(reportHelper.PrimaryStatementRounding, reportHelper.PrimaryStatementScaling).GetPrimaryCode('981').HasTransactions</variable>
			<variable name="OfficersList">reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|Officers|Officers|Officers|*|*')</variable>
		</variables>
		<template><page-layout>
  <xbrl-taxonomy xbrl-taxonomy-namespace="http://www.xbrl.org/uk/gaap/core-all/2009-09-01" xbrl-taxonomy-href="http://www.xbrl.org/uk/gaap/core/2009-09-01/uk-gaap-full-2009-09-01.xsd" xbrl-entity-identifier-scheme="http://www.companieshouse.gov.uk/" xbrl-restatement-dimension="uk-gaap:RestatementsDimension=uk-gaap:RestatedAmount">
    <xbrl-entity xbrl-entity-identifier="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|Registrationnumber|Current Period')[0].Value" xbrl-entity-identifier-description="Company Registration Number" xbrl-entity-name="Company" xbrl-entity-description="Company" />
    <xbrl-mandatory-tag xbrl-concept="uk-bus:EntityCurrentLegalOrRegisteredName" xbrl-period="CurrentPeriod" />
    <xbrl-mandatory-tag xbrl-concept="uk-bus:UKCompaniesHouseRegisteredNumber" xbrl-period="CurrentPeriod" />
    <xbrl-mandatory-tag xbrl-concept="uk-bus:EntityDormant" xbrl-period="CurrentPeriod" />
    <xbrl-mandatory-tag xbrl-concept="uk-bus:EntityTrading" xbrl-period="CurrentPeriod" />
    <xbrl-mandatory-tag xbrl-concept="uk-bus:StartDateForPeriodCoveredByReport" xbrl-period="StartCurrentPeriod" />
    <xbrl-mandatory-tag xbrl-concept="uk-bus:EndDateForPeriodCoveredByReport" xbrl-period="EndCurrentPeriod" />
    <xbrl-mandatory-tag xbrl-concept="uk-direp:DateSigningDirectorsReport" xbrl-period="EndCurrentPeriod" />
    <xbrl-mandatory-tag xbrl-concept="uk-direp:DirectorSigningReport" xbrl-period="CurrentPeriod" />
    <xbrl-mandatory-tag xbrl-concept="uk-bus:BalanceSheetDate" xbrl-period="EndCurrentPeriod" />
    <xbrl-mandatory-tag xbrl-concept="uk-gaap:DateApprovalAccounts" xbrl-period="EndCurrentPeriod" />
    <xbrl-mandatory-tag xbrl-concept="uk-gaap:NameDirectorSigningAccounts" xbrl-period="CurrentPeriod" />
  </xbrl-taxonomy>
  <!-- XBRL UK mandatory tags -->
  <segmented-table name="CompanyInformation">
    <column-details column-number="1" width="35mm" />
  </segmented-table>
</page-layout></template>
		<report-template version="12" name="Cover page" include-in-numbering="False" include-in-contents="False" include-in-report-map="True" isdir="True" condition="true" enabled="Always" section-name="CoverPage" page-break-before="True" keep-with-next-strength="0" template-guid="8436eb82-d244-4a46-a2e0-185c7693ed63">
			<template><page-layout contents-page="true">
  <xbrl-fact xbrl-concept="uk-bus:EntityCurrentLegalOrRegisteredName" xbrl-period="CurrentPeriod">
    <data>reporting.CurrentPeriod.ClientDetails.Name</data>
  </xbrl-fact>
  <xbrl-fact xbrl-concept="uk-bus:UKCompaniesHouseRegisteredNumber" xbrl-period="CurrentPeriod">
    <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|General|General|Registrationnumber|Current Period")[0].Value</data>
  </xbrl-fact>
  <xbrl-fact xbrl-concept="uk-bus:EntityDormant" xbrl-period="CurrentPeriod">
    <text>false</text>
  </xbrl-fact>
  <xbrl-fact xbrl-concept="uk-bus:EntityTrading" xbrl-period="CurrentPeriod">
    <text>true</text>
  </xbrl-fact>
  <xbrl-fact xbrl-concept="uk-bus:StartDateForPeriodCoveredByReport" xbrl-period="StartCurrentPeriod">
    <data date-format="yyyy-MM-dd">reporting.CurrentPeriod.Start</data>
  </xbrl-fact>
  <xbrl-fact xbrl-concept="uk-bus:EndDateForPeriodCoveredByReport" xbrl-period="EndCurrentPeriod">
    <data date-format="yyyy-MM-dd">reporting.CurrentPeriod.End</data>
  </xbrl-fact>
  <xbrl-fact xbrl-concept="uk-bus:BalanceSheetDate" xbrl-period="EndCurrentPeriod">
    <data date-format="yyyy-MM-dd">reporting.CurrentPeriod.End</data>
  </xbrl-fact>
  <!-- XBRL UK recommended tags -->
  <xbrl-fact-tuple xbrl-concept="uk-bus:XBRLDocumentAuthorGrouping">
    <xbrl-fact xbrl-concept="uk-bus:NameAuthor" xbrl-period="CurrentPeriod">
      <data>reporting.Application.NameAndVersion</data>
    </xbrl-fact>
    <xbrl-fact xbrl-concept="uk-bus:DescriptionOrTitleAuthor" xbrl-period="CurrentPeriod">
      <text>Software</text>
    </xbrl-fact>
  </xbrl-fact-tuple>
</page-layout></template>
			<report-template version="12" name="Registration number" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="RegistrationNumber" page-break-before="False" keep-with-next-strength="0" template-guid="79b325a0-caf2-4a2c-a661-81d08918146a">
				<template><add-to-body>
  <para para-alignment="right" base-style="Link To Data" condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|Registrationnumber|Current Period')[0].HasValue=false" toggle-expand-on-click="true" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|General')">
    Company registration number
	</para>
  <para para-alignment="Right" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|General')" condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|Registrationnumber|Current Period')[0].HasValue" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline>Registration number: <ws /></inline>
    <inline xbrl-concept="uk-bus:UKCompaniesHouseRegisteredNumber" xbrl-period="CurrentPeriod">
      <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|General|General|Registrationnumber|Current Period")[0].Value</data>
      <inline>
      </inline>
      <inline>
      </inline>
    </inline>
  </para>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Cover page space" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="CoverPageSpace" page-break-before="False" keep-with-next-strength="0" template-guid="8970ea97-05ae-4461-a36e-4b3690ef6744">
				<template><add-to-body>
  <section smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditVerticalSpace, uiHooks.SmartTagFactory.DeleteVerticalSpace }" width="100%" outer-top-border-clearance="50mm" keep-with-next="1">
    <para>
    </para>
  </section>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Report title" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="ReportTitle" page-break-before="False" keep-with-next-strength="0" template-guid="49cd4354-e7d4-4387-aaee-f19802b7685b">
				<template><add-to-body>
  <para para-alignment="Centre" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|General')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline font-size="20pt" xbrl-concept="uk-bus:EntityCurrentLegalOrRegisteredName" xbrl-period="CurrentPeriod">
      <data>reportHelper.Business.Name</data>
      <inline>
      </inline>
      <inline font-size="20pt">
      </inline>
    </inline>
    <inline condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].HasValue and&#xD;&#xA;&#xD;&#xA;reportHelper.Business.Name !=&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].Value">
      <br />
      <br />
      <inline>trading as <ws /></inline>
      <inline xbrl-concept="uk-bus:EntityTradingName" xbrl-period="CurrentPeriod">
        <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|General|General|Tradingname|Current Period")[0]</data>
        <inline>
        </inline>
        <inline>
        </inline>
      </inline>
      <inline>
        <ws />
      </inline>
    </inline>
    <inline condition="((String)reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|CompanyStatus|CompanyStatus|CompanyStatus|CompanyType|Current Period&quot;)[0].Value)  =  &quot;Limited by guarantee&quot;">
      <br />
      <br />
      <inline>(A company limited by guarantee)</inline>
    </inline>
    <br />
    <br />
    <inline xbrl-concept="uk-bus:BusinessReportName" xbrl-period="CurrentPeriod">
      <inline condition="report.GetSection('DirectorsReport') != null">
        <data>reportHelper.Text.TitleSentence(report.GetSection('DirectorsReport').Description)</data>
        <inline>
        </inline>
        <inline>
        </inline>
      </inline>
      <inline>
        <ws /> and <ws /></inline>
      <inline condition="report.GetSection('IndependentAuditorsReport')=null">
        <inline>Unaudited <ws /></inline>
      </inline>
      <inline condition="report.GetSection('FinancialStatements') != null">
        <data>report.GetSection('FinancialStatements').Description</data>
        <inline>
        </inline>
        <inline>
        </inline>
      </inline>
      <inline>
      </inline>
    </inline>
    <br />
    <br />for the <ws /><inline condition="reportHelper.CurrentPeriod.IsYear"><inline>Year Ended <ws /></inline><inline xbrl-concept="uk-bus:EndDateForPeriodCoveredByReport" xbrl-period="EndCurrentPeriod"><data>reportHelper.CurrentPeriod.EndDate.Value</data><inline></inline><inline></inline></inline><inline></inline></inline><ws /><inline condition="reportHelper.CurrentPeriod.IsYear=false"><inline>Period from <ws /></inline><inline xbrl-concept="uk-bus:StartDateForPeriodCoveredByReport" xbrl-period="StartCurrentPeriod"><data>reportHelper.CurrentPeriod.StartDate.Value</data><inline></inline><inline></inline></inline><inline><ws /> to <ws /></inline><inline xbrl-concept="uk-bus:EndDateForPeriodCoveredByReport" xbrl-period="EndCurrentPeriod"><data>reportHelper.CurrentPeriod.EndDate.Value</data><inline></inline><inline></inline></inline><br /><inline></inline></inline><br /></para>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Cover page footer" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="CoverPageFooter" page-break-before="False" keep-with-next-strength="0" template-guid="3d4d1fbc-e4e9-4b1f-8ea7-e4386899ed2a">
				<template><add-to-body>
  <page-footer>
    <para para-alignment="Full" condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|CompanyStatus|CompanyStatus|CompanyStatus|Audited|Current Period')[0].Value = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|Accountant')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
      <inline xbrl-concept="uk-bus:NameThirdPartyAgent" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
        <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Accountant|Accountant|Name|Current Period")[0]</data>
      </inline>
      <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|Description|Current Period&quot;)[0].HasValue">
        <br />
        <inline xbrl-concept="uk-bus:DescriptionOrOtherInformationOnThirdPartyAgent" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
          <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Accountant|Accountant|Description|Current Period")[0]</data>
        </inline>
      </inline>
      <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|AddressLine1|Current Period&quot;)[0].HasValue">
        <br />
        <inline xbrl-concept="uk-bus:AddressLine1" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
          <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Accountant|Accountant|AddressLine1|Current Period")[0]</data>
        </inline>
      </inline>
      <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|AddressLine2|Current Period&quot;)[0].HasValue">
        <br />
        <inline xbrl-concept="uk-bus:AddressLine2" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
          <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Accountant|Accountant|AddressLine2|Current Period")[0]</data>
        </inline>
      </inline>
      <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|AddressLine3|Current Period&quot;)[0].HasValue">
        <br />
        <inline xbrl-concept="uk-bus:AddressLine3" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
          <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Accountant|Accountant|AddressLine3|Current Period")[0]</data>
        </inline>
      </inline>
      <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|CityTown|Current Period&quot;)[0].HasValue">
        <br />
        <inline xbrl-concept="uk-bus:PrincipalLocation-CityOrTown" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
          <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Accountant|Accountant|CityTown|Current Period")[0]</data>
        </inline>
      </inline>
      <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|CountyRegion|Current Period&quot;)[0].HasValue">
        <br />
        <inline xbrl-concept="uk-bus:CountyRegion" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
          <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Accountant|Accountant|CountyRegion|Current Period")[0]</data>
        </inline>
      </inline>
      <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|Postcode|Current Period&quot;)[0].HasValue">
        <br />
        <inline xbrl-concept="uk-bus:PostalCodeZip" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
          <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Accountant|Accountant|Postcode|Current Period")[0]</data>
        </inline>
      </inline>
    </para>
    <para para-alignment="Full" condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|CompanyStatus|CompanyStatus|CompanyStatus|Audited|Current Period')[0].Value = true" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|Auditor')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
      <inline xbrl-concept="uk-bus:NameThirdPartyAgent" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
        <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|Name|Current Period")[0]</data>
      </inline>
      <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Auditor|Auditor|Description|Current Period&quot;)[0].HasValue">
        <br />
        <inline xbrl-concept="uk-bus:DescriptionOrOtherInformationOnThirdPartyAgent" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
          <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|Description|Current Period")[0]</data>
        </inline>
      </inline>
      <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Auditor|Auditor|AddressLine1|Current Period&quot;)[0].HasValue">
        <br />
        <inline xbrl-concept="uk-bus:AddressLine1" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
          <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|AddressLine1|Current Period")[0]</data>
        </inline>
      </inline>
      <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Auditor|Auditor|AddressLine2|Current Period&quot;)[0].HasValue">
        <br />
        <inline xbrl-concept="uk-bus:AddressLine2" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
          <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|AddressLine2|Current Period")[0]</data>
        </inline>
      </inline>
      <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Auditor|Auditor|AddressLine3|Current Period&quot;)[0].HasValue">
        <br />
        <inline xbrl-concept="uk-bus:AddressLine3" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
          <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|AddressLine3|Current Period")[0]</data>
        </inline>
      </inline>
      <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Auditor|Auditor|CityTown|Current Period&quot;)[0].HasValue">
        <br />
        <inline xbrl-concept="uk-bus:PrincipalLocation-CityOrTown" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
          <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|CityTown|Current Period")[0]</data>
        </inline>
      </inline>
      <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Auditor|Auditor|CountyRegion|Current Period&quot;)[0].HasValue">
        <br />
        <inline xbrl-concept="uk-bus:CountyRegion" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
          <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|CountyRegion|Current Period")[0]</data>
        </inline>
      </inline>
      <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Auditor|Auditor|Postcode|Current Period&quot;)[0].HasValue">
        <br />
        <inline xbrl-concept="uk-bus:PostalCodeZip" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
          <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|Postcode|Current Period")[0]</data>
        </inline>
      </inline>
    </para>
  </page-footer>
</add-to-body></template>
			</report-template>
		</report-template>
		<report-template version="12" name="Contents" include-in-numbering="False" include-in-contents="False" include-in-report-map="True" isdir="True" condition="true" enabled="Always" section-name="ContentsPage" page-break-before="True" keep-with-next-strength="0" template-guid="e0e7e42b-2f6e-4c71-8086-2cf3541e1096">
			<template><page-layout contents-page="true">
</page-layout></template>
			<report-template version="12" name="Contents page header" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="ContentsPageHeader" page-break-before="False" keep-with-next-strength="0" template-guid="8bcb48d0-5a12-4590-9942-16ea636590ec">
				<template><add-to-body>
  <page-header>
    <para base-style="Page Header" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
      <data>reportHelper.Business.Name</data>
      <inline condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].HasValue and&#xD;&#xA;&#xD;&#xA;reportHelper.Business.Name !=&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].Value">
        <br />
        trading as <ws /><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|General|General|Tradingname|Current Period")[0]</data><ws /></inline>
      <br />
      <data condition="report.GetSection('ContentsPage') != null">report.GetSection('ContentsPage').Description</data>
      <inline para-alignment="left" condition="header.IsContinued" font-style="+Italic">
        <br />......... continued</inline>
    </para>
  </page-header>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Contents" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="Contents" page-break-before="False" keep-with-next-strength="0" template-guid="36c89f7d-f401-440b-86de-d9b681113111">
				<template><add-to-body>
  <table width="100%">
    <table-row-iterator iterate-over="report.ReportContents.Sections" instance-name="section" as="Section">
      <table-row condition="section.ContentTreeDepth = 0">
        <table-cell>
          <table width="100%">
            <column-details column-number="2" free-space="1" />
            <table-row condition="report.GetSection('NonStatutoryPages') = null  or section.Name != report.GetSection('NonStatutoryPages').Name">
              <table-cell>
                <para para-spacing-before="5mm" para-spacing-after="0mm" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
                  <data para-alignment="Left">(section.Description)</data>
                </para>
              </table-cell>
              <table-cell>
                <para para-spacing-before="3mm" para-alignment="Full" inner-bottom-border-clearance="-5pt" outer-right-border-clearance="1mm" bottom-border-style="Dashed" bottom-border-size="0.5pt" outer-left-border-clearance="1mm" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
                  <br />
                </para>
              </table-cell>
              <table-cell>
                <para para-spacing-before="5mm" para-spacing-after="0mm" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph}">
                  <data para-alignment="Left">section.PageNumberFrom</data>
                  <inline condition="(section.PageCount &gt; 1)" para-alignment="Left">
                    <inline para-alignment="Left">
                      <ws /> to <ws /></inline>
                    <data para-alignment="Left">section.PageNumberTo</data>
                  </inline>
                </para>
              </table-cell>
            </table-row>
          </table>
        </table-cell>
      </table-row>
      <table-row condition="section.ContentTreeDepth = 1">
        <table-cell>
          <table width="100%">
            <column-details column-number="3" free-space="1" />
            <table-row>
              <table-cell width="5%" />
              <table-cell>
                <para para-spacing-before="5mm" para-spacing-after="0mm" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
                  <data para-alignment="Left">(section.Description)</data>
                </para>
              </table-cell>
              <table-cell>
                <para para-alignment="Full" inner-bottom-border-clearance="4pt" outer-right-border-clearance="1mm" bottom-border-style="Dashed" bottom-border-size="0.5pt" outer-left-border-clearance="1mm" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
                  <br />
                </para>
              </table-cell>
              <table-cell>
                <para para-spacing-before="5mm" para-spacing-after="0mm" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph}">
                  <data para-alignment="Left">section.PageNumberFrom</data>
                </para>
              </table-cell>
            </table-row>
          </table>
        </table-cell>
      </table-row>
      <table-row condition="section.ContentTreeDepth = 2">
        <table-cell>
          <table width="100%">
            <column-details column-number="4" free-space="1" />
            <table-row>
              <table-cell width="10%" />
              <table-cell>
                <para smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
                  <data>(section.Description)</data>
                </para>
              </table-cell>
              <table-cell>
                <para smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
                  <ws />
                </para>
              </table-cell>
              <table-cell>
                <para smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph}">
                  <data>section.PageNumberFrom</data>
                </para>
              </table-cell>
            </table-row>
          </table>
        </table-cell>
      </table-row>
      <table-row condition="report.GetSection('NonStatutoryPages') != null and section.Name = report.GetSection('NonStatutoryPages').Name">
        <table-cell>
          <para inner-top-border-clearance="10mm" para-alignment="Full" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">The following pages do not form part of the statutory financial statements:</para>
        </table-cell>
      </table-row>
    </table-row-iterator>
  </table>
</add-to-body></template>
			</report-template>
		</report-template>
		<report-template version="12" name="Footer" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="Footer" page-break-before="False" keep-with-next-strength="0" template-guid="61605caa-54f8-4ef4-9217-76804f2a4ba9">
			<template><add-to-body>
  <page-footer>
    <para base-style="Page Footer" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
      Page <ws /><data>
		footer.CurrentPage
	</data></para>
  </page-footer>
</add-to-body></template>
		</report-template>
		<report-template version="12" name="Company Information" include-in-numbering="False" include-in-contents="True" include-in-report-map="True" isdir="True" condition="true" enabled="Always" section-name="CompanyInformation" page-break-before="True" keep-with-next-strength="0" template-guid="668c5f01-0236-4c31-875d-302b14005975">
			<template><page-layout>
</page-layout></template>
			<report-template version="12" name="Company information header" include-in-numbering="True" include-in-contents="True" include-in-report-map="True" isdir="False" condition="true" enabled="Always" section-name="CompanyInformationHeader" page-break-before="False" keep-with-next-strength="0" template-guid="133b4008-5f1e-4fd2-88ae-f59bc510b133">
				<template><add-to-body>
  <page-header>
    <para base-style="Page Header" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
      <data>reportHelper.Business.Name</data>
      <inline condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].HasValue and&#xD;&#xA;&#xD;&#xA;reportHelper.Business.Name !=&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].Value">
        <br />
        trading as <ws /><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|General|General|Tradingname|Current Period")[0]</data><ws /></inline>
      <br />
      <data condition="report.GetSection('CompanyInformation') != null">report.GetSection('CompanyInformation').Description</data>
      <inline para-alignment="left" condition="header.IsContinued" font-style="+Italic">
        <br />......... continued</inline>
    </para>
  </page-header>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Chairman" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|Officers|Officers|Officers|*:filter[*|General|Type|Current Period=Chairman,*|General|Type|Current Period=Chairman and chief executive]:filter[*|General|Cessation|Current Period=null]')[0].HasValue" enabled="Conditional" section-name="Chairman" page-break-before="False" keep-with-next-strength="0" template-guid="908f5990-1a1a-4ed1-80ff-c5d5a658aa99">
				<template><add-to-body>
  <table segment-of-table="CompanyInformation">
    <var name="OfficerType" init="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|Officers|Officers|Officers|*:filter[*|General|Type|Current Period=Chairman,*|General|Type|Current Period=Chairman and chief executive]:filter[*|General|Cessation|Current Period=null]|*|General|Type|Current Period')[0].Value" />
    <var name="XBRLOfficerType" pre="if OfficerType = 'Chairman' then 'uk-bus:Chairman' else&#xD;&#xA;&#xD;&#xA;if OfficerType = 'Chairman and chief executive' then 'uk-bus:ChairmanChiefExecutive' else&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'uk-bus:AllEntityOfficers'" />
    <table-row>
      <table-cell align="top-left">
        <para para-spacing-before="0mm" para-alignment="Left" para-spacing-after="5mm" base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data>report.sections.ActiveSection.Description</data>
        </para>
      </table-cell>
      <table-cell align="top-left">
        <para condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|Officers|Officers|Officers|*:filter[*|General|Type|Current Period=Chairman,*|General|Type|Current Period=Chairman and chief executive]:filter[*|General|Cessation|Current Period=null]')[0].HasValue=false" toggle-expand-on-click="true" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|Officers')" base-style="Link To Data">
    		Chairman
	</para>
        <section tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|Officers')">
          <para para-alignment="Full" para-spacing-after="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-bus:NameEntityOfficer" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:EntityOfficersHypercube" xbrl-dimensions="uk-bus:EntityOfficersDimension=XBRLOfficerType">
            <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Officers|Officers|Officers|*:filter[*|General|Type|Current Period='Chairman',*|General|Type|Current Period='Chairman and chief executive']:filter[*|General|Cessation|Current Period=null]|New/EditOfficer|General|Displayedas|Current Period")[0].Value</data>
          </para>
        </section>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Chief executive" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|Officers|Officers|Officers|*:filter[*|General|Type|Current Period=Chief executive,*|General|Type|Current Period=Chairman and chief executive]:filter[*|General|Cessation|Current Period=null]')[0].HasValue" enabled="Conditional" section-name="ChiefExecutive" page-break-before="False" keep-with-next-strength="0" template-guid="2723a6da-ab7c-423c-9623-bf68c54c0c7e">
				<template><add-to-body>
  <table segment-of-table="CompanyInformation">
    <var name="OfficerType" init="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|Officers|Officers|Officers|*:filter[*|General|Type|Current Period=Chief executive,*|General|Type|Current Period=Chairman and chief executive]:filter[*|General|Cessation|Current Period=null]|*|General|Type|Current Period')[0].Value" />
    <var name="XBRLOfficerType" pre="if OfficerType = 'Chief executive' then 'uk-bus:ChiefExecutive' else&#xD;&#xA;&#xD;&#xA;if OfficerType = 'Chairman and chief executive' then 'uk-bus:ChairmanChiefExecutive' else&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'uk-bus:AllEntityOfficers'" />
    <table-row>
      <table-cell align="top-left">
        <para para-spacing-before="0mm" para-alignment="Left" para-spacing-after="5mm" base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data>report.sections.ActiveSection.Description</data>
        </para>
      </table-cell>
      <table-cell align="top-left">
        <para condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|Officers|Officers|Officers|*:filter[*|General|Type|Current Period=Chief executive,*|General|Type|Current Period=Chairman and chief executive]:filter[*|General|Cessation|Current Period=null]')[0].HasValue=false" toggle-expand-on-click="true" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|Officers')" base-style="Link To Data">
		Chief executive
	</para>
        <section tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|Officers')">
          <para para-alignment="Full" para-spacing-after="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-bus:NameEntityOfficer" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:EntityOfficersHypercube" xbrl-dimensions="uk-bus:EntityOfficersDimension=XBRLOfficerType">
            <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Officers|Officers|Officers|*:filter[*|General|Type|Current Period='Chief executive',*|General|Type|Current Period='Chairman and chief executive']:filter[*|General|Cessation|Current Period=null]|New/EditOfficer|General|Displayedas|Current Period")[0].Value</data>
          </para>
        </section>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Directors" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|Officers|Officers|Officers|*:filter[*|General|Type|Current Period=Director,*|General|Type|Current Period=Company secretary and director]:filter[*|General|Cessation|Current Period=null]')[0].HasValue" enabled="Conditional" section-name="DirectorsCompanyInformation" page-break-before="False" keep-with-next-strength="0" template-guid="e953168f-ef07-44ff-b9bd-6019cdc56dfc" contents-name-expression="if  GenericDirectors.Count  =  1  then  &amp;quot;Director&amp;quot;  else  &amp;quot;Directors&amp;quot;">
				<variables>
					<variable name="GenericDirectors">reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|Officers|Officers|Officers|*:filter[*|General|Type|Current Period=Company secretary and director,*|General|Type|Current Period=Director]:filter[*|General|Cessation|Current Period=null]', null , true)</variable>
				</variables>
				<template><add-to-body>
  <table segment-of-table="CompanyInformation">
    <table-row>
      <table-cell align="top-left">
        <para para-spacing-before="0mm" para-alignment="Left" para-spacing-after="5mm" outer-bottom-border-clearance="5mm" base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data>report.sections.ActiveSection.Description</data>
        </para>
      </table-cell>
      <table-cell align="top-left">
        <var name="list" init="GenericDirectors" />
        <para condition="GenericDirectors.Count =0" toggle-expand-on-click="true" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|Officers')" base-style="Link To Data">
		Directors
	</para>
        <iterator iterate-over="list" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
          <section tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|Officers')">
            <var name="OfficerType" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer|General|Type|Current Period')[0].Value" />
            <var name="XBRLOfficerType" pre="if OfficerType = 'Chairman' then 'uk-bus:Chairman' else&#xD;&#xA;if OfficerType = 'Chief executive' then 'uk-bus:ChiefExecutive' else&#xD;&#xA;if OfficerType = 'Chairman and chief executive' then 'uk-bus:ChairmanChiefExecutive' else&#xD;&#xA;if OfficerType = 'Company secretary' then 'uk-bus:CompanySecretary' else&#xD;&#xA;if OfficerType = 'Company secretary and director' then 'uk-bus:CompanySecretaryDirector' else&#xD;&#xA;if OfficerType = 'Director' then 'uk-bus:Director'+(OfficersList.IndexOf(reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer')[0])+1)&#xD;&#xA;else 'uk-bus:AllEntityOfficers'" />
            <para para-alignment="Full" para-spacing-after="0mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-bus:NameEntityOfficer" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:EntityOfficersHypercube" xbrl-dimensions="uk-bus:EntityOfficersDimension=XBRLOfficerType">
              <data>reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer|General|Displayedas|Current Period')[0].Value</data>
            </para>
          </section>
        </iterator>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Company secretary" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Officers|Officers|Officers|*:filter[*|General|Type|Current Period='Company secretary',*|General|Type|Current Period='Company secretary and director']:filter[*|General|Cessation|Current Period=null]&quot;,null, true).Count &gt;0" enabled="Conditional" section-name="CompanySecretary" page-break-before="False" keep-with-next-strength="0" template-guid="93e6bb09-912a-4b55-a034-3ca52f2b5e92">
				<template><add-to-body>
  <table segment-of-table="CompanyInformation">
    <var name="OfficerType" pre="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|Officers|Officers|Officers|*:filter[*|General|Type|Current Period=Company secretary,*|General|Type|Current Period=Company secretary and director]:filter[*|General|Cessation|Current Period=null]|New/EditOfficer|General|Type|Current Period')[0].Value" />
    <var name="XBRLOfficerType" pre="&#xD;&#xA;&#xD;&#xA;if OfficerType = 'Company secretary' then 'uk-bus:CompanySecretary' else&#xD;&#xA;if OfficerType = 'Company secretary and director' then 'uk-bus:CompanySecretaryDirector' else&#xD;&#xA;'uk-bus:AllEntityOfficers'" />
    <table-row>
      <table-cell align="top-left">
        <para para-spacing-before="0mm" para-alignment="Left" para-spacing-after="5mm" base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data>report.sections.ActiveSection.Description</data>
        </para>
      </table-cell>
      <table-cell align="top-left">
        <para condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|Officers|Officers|Officers|*:filter[*|General|Type|Current Period=Company secretary,*|General|Type|Current Period=Company secretary and director]:filter[*|General|Cessation|Current Period=null]')[0].HasValue = false" toggle-expand-on-click="true" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|Officers')" base-style="Link To Data">
		Company secretary
	</para>
        <section tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|Officers')">
          <para para-alignment="Full" para-spacing-after="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-bus:NameEntityOfficer" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:EntityOfficersHypercube" xbrl-dimensions="uk-bus:EntityOfficersDimension=XBRLOfficerType">
            <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Officers|Officers|Officers|*:filter[*|General|Type|Current Period='Company secretary',*|General|Type|Current Period='Company secretary and director']:filter[*|General|Cessation|Current Period=null]|New/EditOfficer|General|Displayedas|Current Period")[0].Value</data>
          </para>
        </section>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Registered office" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="RegisteredOffice" page-break-before="False" keep-with-next-strength="0" template-guid="7796a022-e276-451f-9a85-b0e6d1b8ff6f">
				<template><add-to-body>
  <table segment-of-table="CompanyInformation">
    <table-row>
      <table-cell align="top-left">
        <para para-spacing-before="0mm" para-alignment="Left" para-spacing-after="5mm" base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data>report.sections.ActiveSection.Description</data>
        </para>
      </table-cell>
      <table-cell>
        <para condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|General|Addresses|RegisteredOfficeAddressLine1|Current Period&quot;)[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|General')" toggle-expand-on-click="true" base-style="Link To Data">
	Registered office
	</para>
        <section tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|General')">
          <para para-alignment="Full" para-spacing-after="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|General|Addresses|RegisteredOfficeAddressLine1|Current Period&quot;)[0].HasValue">
              <inline xbrl-concept="uk-bus:AddressLine1" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:EntityContactInfoHypercube" xbrl-dimensions="uk-bus:EntityContactTypeDimension=uk-bus:RegisteredOffice">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|General|Addresses|RegisteredOfficeAddressLine1|Current Period")[0].Value</data>
              </inline>
            </inline>
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|General|Addresses|RegisteredOfficeAddressLine2|Current Period&quot;)[0].HasValue">
              <br />
              <inline xbrl-concept="uk-bus:AddressLine2" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:EntityContactInfoHypercube" xbrl-dimensions="uk-bus:EntityContactTypeDimension=uk-bus:RegisteredOffice">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|General|Addresses|RegisteredOfficeAddressLine2|Current Period")[0].Value</data>
              </inline>
            </inline>
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|General|Addresses|RegisteredOfficeAddressLine3|Current Period&quot;)[0].HasValue">
              <br />
              <inline xbrl-concept="uk-bus:AddressLine3" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:EntityContactInfoHypercube" xbrl-dimensions="uk-bus:EntityContactTypeDimension=uk-bus:RegisteredOffice">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|General|Addresses|RegisteredOfficeAddressLine3|Current Period")[0].Value</data>
              </inline>
            </inline>
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|General|Addresses|RegisteredOfficeCityTown|Current Period&quot;)[0].HasValue">
              <br />
              <inline xbrl-concept="uk-bus:PrincipalLocation-CityOrTown" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:EntityContactInfoHypercube" xbrl-dimensions="uk-bus:EntityContactTypeDimension=uk-bus:RegisteredOffice">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|General|Addresses|RegisteredOfficeCityTown|Current Period")[0].Value</data>
              </inline>
            </inline>
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|General|Addresses|RegisteredOfficeCountyRegion|Current Period&quot;)[0].HasValue">
              <br />
              <inline xbrl-concept="uk-bus:CountyRegion" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:EntityContactInfoHypercube" xbrl-dimensions="uk-bus:EntityContactTypeDimension=uk-bus:RegisteredOffice">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|General|Addresses|RegisteredOfficeCountyRegion|Current Period")[0].Value</data>
              </inline>
            </inline>
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|General|Addresses|RegisteredOfficePostcode|Current Period&quot;)[0].HasValue">
              <br />
              <inline xbrl-concept="uk-bus:PostalCodeZip" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:EntityContactInfoHypercube" xbrl-dimensions="uk-bus:EntityContactTypeDimension=uk-bus:RegisteredOffice">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|General|Addresses|RegisteredOfficePostcode|Current Period")[0].Value</data>
              </inline>
            </inline>
          </para>
        </section>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Solicitors" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Solicitor|Solicitor|Name|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="Solicitors" page-break-before="False" keep-with-next-strength="0" template-guid="96638b45-7f85-4b88-9b1e-886117d27d53">
				<template><add-to-body>
  <table segment-of-table="CompanyInformation">
    <table-row>
      <table-cell align="top-left">
        <para para-spacing-before="0mm" para-alignment="Left" para-spacing-after="5mm" base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data>report.sections.ActiveSection.Description</data>
        </para>
      </table-cell>
      <table-cell>
        <para condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|Solicitor|Solicitor|Name|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|Solicitor')" toggle-expand-on-click="true" base-style="Link To Data">
	Solicitors information
	</para>
        <section tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|Solicitor')">
          <para para-alignment="Full" para-spacing-after="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
            <inline xbrl-concept="uk-bus:NameThirdPartyAgent" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityLawyersOrLegalAdvisers">
              <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Solicitor|Solicitor|Name|Current Period")[0].Value</data>
            </inline>
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Solicitor|Solicitor|AddressLine1|Current Period&quot;)[0].HasValue">
              <br />
              <inline xbrl-concept="uk-bus:AddressLine1" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityLawyersOrLegalAdvisers">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Solicitor|Solicitor|AddressLine1|Current Period")[0].Value</data>
              </inline>
            </inline>
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Solicitor|Solicitor|AddressLine2|Current Period&quot;)[0].HasValue">
              <br />
              <inline xbrl-concept="uk-bus:AddressLine2" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityLawyersOrLegalAdvisers">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Solicitor|Solicitor|AddressLine2|Current Period")[0].Value</data>
              </inline>
            </inline>
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Solicitor|Solicitor|AddressLine3|Current Period&quot;)[0].HasValue">
              <br />
              <inline xbrl-concept="uk-bus:AddressLine3" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityLawyersOrLegalAdvisers">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Solicitor|Solicitor|AddressLine3|Current Period")[0].Value</data>
              </inline>
            </inline>
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Solicitor|Solicitor|CityTown|Current Period&quot;)[0].HasValue">
              <br />
              <inline xbrl-concept="uk-bus:PrincipalLocation-CityOrTown" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityLawyersOrLegalAdvisers">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Solicitor|Solicitor|CityTown|Current Period")[0].Value</data>
              </inline>
            </inline>
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Solicitor|Solicitor|CountyRegion|Current Period&quot;)[0].HasValue">
              <br />
              <inline xbrl-concept="uk-bus:CountyRegion" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityLawyersOrLegalAdvisers">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Solicitor|Solicitor|CountyRegion|Current Period")[0].Value</data>
              </inline>
            </inline>
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Solicitor|Solicitor|Postcode|Current Period&quot;)[0].HasValue">
              <br />
              <inline xbrl-concept="uk-bus:PostalCodeZip" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityLawyersOrLegalAdvisers">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Solicitor|Solicitor|Postcode|Current Period")[0].Value</data>
              </inline>
            </inline>
          </para>
        </section>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Bankers" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="Banks.Count &gt; 0" enabled="Conditional" section-name="Bankers" page-break-before="False" keep-with-next-strength="0" template-guid="061725e5-d475-4ec2-98ba-338597d88f7f">
				<variables>
					<variable name="Banks">reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|BanksBuildingSocieties|BanksBuildingSocieties|BanksBuildingSocieties|*:filter[*|New/EditBank/BuildingSociety|UseInReports|Current Period=true]", null, true)</variable>
				</variables>
				<template><add-to-body>
  <table segment-of-table="CompanyInformation">
    <table-row>
      <table-cell align="top-left">
        <para para-spacing-before="0mm" para-alignment="Left" para-spacing-after="5mm" base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data>report.sections.ActiveSection.Description</data>
        </para>
      </table-cell>
      <table-cell align="top-left">
        <para condition="Banks.Count =0" toggle-expand-on-click="true" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|BanksBuildingSocieties')" base-style="Link To Data">
		Banks information
	</para>
        <iterator iterate-over="Banks" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
          <section tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|BanksBuildingSocieties')">
            <para xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentStatusDimension='uk-bus:JointAgent'+(item.index+1),uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityBankers" para-alignment="Full" para-spacing-after="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
              <inline xbrl-concept="uk-bus:NameThirdPartyAgent" xbrl-period="CurrentPeriod">
                <data>reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditBank/BuildingSociety|New/EditBank/BuildingSociety|Name|Current Period')[0].Value</data>
              </inline>
              <inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditBank/BuildingSociety|New/EditBank/BuildingSociety|Branch|Current Period')[0].HasValue">
                <br />
                <inline xbrl-concept="uk-bus:DescriptionOrOtherInformationOnThirdPartyAgent" xbrl-period="CurrentPeriod">
                  <data>reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditBank/BuildingSociety|New/EditBank/BuildingSociety|Branch|Current Period')[0].Value</data>
                </inline>
              </inline>
              <inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditBank/BuildingSociety|New/EditBank/BuildingSociety|AddressLine1|Current Period')[0].HasValue">
                <br />
                <inline xbrl-concept="uk-bus:AddressLine1" xbrl-period="CurrentPeriod">
                  <data>reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditBank/BuildingSociety|New/EditBank/BuildingSociety|AddressLine1|Current Period')[0].Value</data>
                </inline>
              </inline>
              <inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditBank/BuildingSociety|New/EditBank/BuildingSociety|AddressLine2|Current Period')[0].HasValue">
                <br />
                <inline xbrl-concept="uk-bus:AddressLine2" xbrl-period="CurrentPeriod">
                  <data>reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditBank/BuildingSociety|New/EditBank/BuildingSociety|AddressLine2|Current Period')[0].Value</data>
                </inline>
              </inline>
              <inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditBank/BuildingSociety|New/EditBank/BuildingSociety|AddressLine3|Current Period')[0].HasValue">
                <br />
                <inline xbrl-concept="uk-bus:AddressLine3" xbrl-period="CurrentPeriod">
                  <data>reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditBank/BuildingSociety|New/EditBank/BuildingSociety|AddressLine3|Current Period')[0].Value</data>
                </inline>
              </inline>
              <inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditBank/BuildingSociety|New/EditBank/BuildingSociety|CityTown|Current Period')[0].HasValue">
                <br />
                <inline xbrl-concept="uk-bus:PrincipalLocation-CityOrTown" xbrl-period="CurrentPeriod">
                  <data>reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditBank/BuildingSociety|New/EditBank/BuildingSociety|CityTown|Current Period')[0].Value</data>
                </inline>
              </inline>
              <inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditBank/BuildingSociety|New/EditBank/BuildingSociety|CountyRegion|Current Period')[0].HasValue">
                <br />
                <inline xbrl-concept="uk-bus:CountyRegion" xbrl-period="CurrentPeriod">
                  <data>reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditBank/BuildingSociety|New/EditBank/BuildingSociety|CountyRegion|Current Period')[0].Value</data>
                </inline>
              </inline>
              <inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditBank/BuildingSociety|New/EditBank/BuildingSociety|PostCode|Current Period')[0].HasValue">
                <br />
                <inline xbrl-concept="uk-bus:PostalCodeZip" xbrl-period="CurrentPeriod">
                  <data>reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditBank/BuildingSociety|New/EditBank/BuildingSociety|PostCode|Current Period')[0].Value</data>
                </inline>
              </inline>
            </para>
          </section>
        </iterator>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Accountants" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|CompanyStatus|CompanyStatus|CompanyStatus|Audited|Current Period&quot;)[0].Value=  false " enabled="Conditional" section-name="Accountants" page-break-before="False" keep-with-next-strength="0" template-guid="655ad98f-ffbd-4f17-a9ba-b88435d6e931">
				<template><add-to-body>
  <table segment-of-table="CompanyInformation">
    <table-row>
      <table-cell align="top-left">
        <para para-spacing-before="0mm" para-alignment="Left" para-spacing-after="5mm" base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data>report.sections.ActiveSection.Description</data>
        </para>
      </table-cell>
      <table-cell>
        <para condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|Accountant|Accountant|Name|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|Accountant')" toggle-expand-on-click="true" base-style="Link To Data">
	Accountant details
	</para>
        <section tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|Accountant')">
          <para para-alignment="Full" para-spacing-after="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
            <inline xbrl-concept="uk-bus:NameThirdPartyAgent" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
              <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Accountant|Accountant|Name|Current Period")[0]</data>
            </inline>
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|Description|Current Period&quot;)[0].HasValue">
              <br />
              <inline xbrl-concept="uk-bus:DescriptionOrOtherInformationOnThirdPartyAgent" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Accountant|Accountant|Description|Current Period")[0]</data>
              </inline>
            </inline>
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|AddressLine1|Current Period&quot;)[0].HasValue">
              <br />
              <inline xbrl-concept="uk-bus:AddressLine1" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Accountant|Accountant|AddressLine1|Current Period")[0]</data>
              </inline>
            </inline>
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|AddressLine2|Current Period&quot;)[0].HasValue">
              <br />
              <inline xbrl-concept="uk-bus:AddressLine2" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Accountant|Accountant|AddressLine2|Current Period")[0]</data>
              </inline>
            </inline>
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|AddressLine3|Current Period&quot;)[0].HasValue">
              <br />
              <inline xbrl-concept="uk-bus:AddressLine3" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Accountant|Accountant|AddressLine3|Current Period")[0]</data>
              </inline>
            </inline>
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|CityTown|Current Period&quot;)[0].HasValue">
              <br />
              <inline xbrl-concept="uk-bus:PrincipalLocation-CityOrTown" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Accountant|Accountant|CityTown|Current Period")[0]</data>
              </inline>
            </inline>
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|CountyRegion|Current Period&quot;)[0].HasValue">
              <br />
              <inline xbrl-concept="uk-bus:CountyRegion" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Accountant|Accountant|CountyRegion|Current Period")[0]</data>
              </inline>
            </inline>
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|Postcode|Current Period&quot;)[0].HasValue">
              <br />
              <inline xbrl-concept="uk-bus:PostalCodeZip" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Accountant|Accountant|Postcode|Current Period")[0]</data>
              </inline>
            </inline>
          </para>
        </section>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Auditors" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|CompanyStatus|CompanyStatus|CompanyStatus|Audited|Current Period&quot;)[0].Value = true" enabled="Conditional" section-name="Auditors" page-break-before="False" keep-with-next-strength="0" template-guid="350b56a3-d3b0-43ac-88ec-d0c651b1822b">
				<template><add-to-body>
  <table segment-of-table="CompanyInformation">
    <table-row>
      <table-cell align="top-left">
        <para para-spacing-before="0mm" para-alignment="Left" para-spacing-after="5mm" base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data>report.sections.ActiveSection.Description</data>
        </para>
      </table-cell>
      <table-cell>
        <para condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|Auditor|Auditor|Name|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|Auditor')" toggle-expand-on-click="true" base-style="Link To Data">
	Auditor details
	</para>
        <section tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|Auditor')">
          <para para-alignment="Full" para-spacing-after="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
            <inline xbrl-concept="uk-bus:NameThirdPartyAgent" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
              <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|Name|Current Period")[0]</data>
            </inline>
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Auditor|Auditor|Description|Current Period&quot;)[0].HasValue">
              <br />
              <inline xbrl-concept="uk-bus:DescriptionOrOtherInformationOnThirdPartyAgent" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|Description|Current Period")[0]</data>
              </inline>
            </inline>
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Auditor|Auditor|AddressLine1|Current Period&quot;)[0].HasValue">
              <br />
              <inline xbrl-concept="uk-bus:AddressLine1" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|AddressLine1|Current Period")[0]</data>
              </inline>
            </inline>
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Auditor|Auditor|AddressLine2|Current Period&quot;)[0].HasValue">
              <br />
              <inline xbrl-concept="uk-bus:AddressLine2" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|AddressLine2|Current Period")[0]</data>
              </inline>
            </inline>
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Auditor|Auditor|AddressLine3|Current Period&quot;)[0].HasValue">
              <br />
              <inline xbrl-concept="uk-bus:AddressLine3" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|AddressLine3|Current Period")[0]</data>
              </inline>
            </inline>
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Auditor|Auditor|CityTown|Current Period&quot;)[0].HasValue">
              <br />
              <inline xbrl-concept="uk-bus:PrincipalLocation-CityOrTown" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|CityTown|Current Period")[0]</data>
              </inline>
            </inline>
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Auditor|Auditor|CountyRegion|Current Period&quot;)[0].HasValue">
              <br />
              <inline xbrl-concept="uk-bus:CountyRegion" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|CountyRegion|Current Period")[0]</data>
              </inline>
            </inline>
            <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Auditor|Auditor|Postcode|Current Period&quot;)[0].HasValue">
              <br />
              <inline xbrl-concept="uk-bus:PostalCodeZip" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
                <data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|Postcode|Current Period")[0]</data>
              </inline>
            </inline>
          </para>
        </section>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
			</report-template>
		</report-template>
		<report-template version="12" name="Directors Report" include-in-numbering="False" include-in-contents="True" include-in-report-map="True" isdir="True" condition="true" enabled="Conditional" section-name="DirectorsReport" page-break-before="True" keep-with-next-strength="0" template-guid="e17d88e4-5016-4721-a304-2ee59c549f0a" contents-name-expression="if  DirectorsActiveAtFinalisationCount  =  1  then  &amp;quot;Director's Report&amp;quot;  else  &amp;quot;Directors' Report&amp;quot;">
			<template><page-layout>
</page-layout></template>
			<report-template version="12" name="Directors report header" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="DirectorsReportHeader" page-break-before="False" keep-with-next-strength="0" template-guid="74bb2d69-e312-455e-9d5d-006ebcadf27e">
				<template><add-to-body>
  <page-header>
    <para para-alignment="Centre" base-style="Page Header" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
      <data>reportHelper.Business.Name</data>
      <inline condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].HasValue and&#xD;&#xA;&#xD;&#xA;reportHelper.Business.Name !=&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].Value">
        <br />trading as <ws /><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|General|General|Tradingname|Current Period")[0]</data><ws /></inline>
      <br />
      <inline condition="report.GetSection('DirectorsReport') != null">
        <data>report.GetSection('DirectorsReport').Description</data>
      </inline>
      <ws /> for the <ws /><inline condition="reportHelper.CurrentPeriod.IsYear">Year Ended <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data></inline><inline condition="reportHelper.CurrentPeriod.IsYear=false">Period from <ws /><data>reportHelper.CurrentPeriod.StartDate.Value</data><ws /> to <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data><br /><inline para-alignment="Left"></inline></inline><inline condition="header.IsContinued" font-style="+italic"><br /><inline para-alignment="Left" font-style="+italic">......... continued</inline></inline></para>
  </page-header>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Introduction" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="Introduction" page-break-before="False" keep-with-next-strength="0" template-guid="db3b3774-1c1b-4204-9ba7-6fb37c18f44d">
				<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The <ws /><inline condition="DirectorsActiveAtFinalisationCount != 1">directors present their</inline><inline condition="DirectorsActiveAtFinalisationCount = 1&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;SingleActiveDirectorGender  =  'Female'">director presents her</inline><inline condition="DirectorsActiveAtFinalisationCount = 1&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;SingleActiveDirectorGender  =  'Male'">director presents his</inline><ws /> report and the <ws /><inline condition="report.GetSection('IndependentAuditorsReport')=null">unaudited <ws /></inline><inline condition="report.GetSection('FinancialStatements')!=null"><data>report.GetSection('FinancialStatements').Description.ToLower()</data></inline><ws /> for the <ws /><inline condition="reportHelper.CurrentPeriod.IsYear">year ended <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data>
.</inline><ws /><inline condition="reportHelper.CurrentPeriod.IsYear=false">Period from <ws /><data>reportHelper.CurrentPeriod.StartDate.Value</data><ws /> to <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data>
.</inline></para>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Incorporation" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|General|General|DateOfIncorporation|Current Period&quot;)[0].HasValue and (reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|General|General|DateOfIncorporation|Current Period&quot;)[0].Value  &gt;= reportHelper.CurrentPeriod.StartDate)" enabled="Conditional" section-name="IncorporationDetails" page-break-before="False" keep-with-next-strength="0" template-guid="25fd0d2c-ce7c-473b-bf1c-b2af9a0d1b2e">
				<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|General')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
    <inline condition="(reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|General|General|Tradingstartdate|Current Period&quot;)[0].HasValue) and (reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|General|General|Dateofincorporation|Current Period&quot;)[0].Value)  !=  (reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|General|General|Tradingstartdate|Current Period&quot;)[0])" para-alignment="Left">
      <inline para-alignment="Left">The company was incorporated on <ws /></inline>
      <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|General|General|Dateofincorporation|Current Period")[0].Value</data>
      <inline para-alignment="Left">
        <ws /> and commenced trading on <ws /></inline>
      <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|General|General|Tradingstartdate|Current Period")[0].Value</data>
    </inline>
    <inline condition="(reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|General|General|Tradingstartdate|Current Period&quot;)[0].HasValue) and (reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|General|General|Dateofincorporation|Current Period&quot;)[0].Value)  =  (reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|General|General|Tradingstartdate|Current Period&quot;)[0])" para-alignment="Left">
      <inline para-alignment="Left">The company was incorporated and commenced trading on <ws /></inline>
      <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|General|General|Dateofincorporation|Current Period")[0].Value</data>
    </inline>
    <ws />
    <inline condition="(reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|General|General|Tradingstartdate|Current Period&quot;)[0].HasValue)  =  false" para-alignment="Left">
      <inline para-alignment="Left">The company was incorporated on <ws /></inline>
      <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|General|General|Dateofincorporation|Current Period")[0].Value</data>
    </inline>.</para>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Directors of the company" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="DirectorsOfTheCompany" page-break-before="False" keep-with-next-strength="0" template-guid="dcd53ef2-043e-4754-a7ad-7273ed7de143" contents-name-expression="if DirectorsDuringPeriod.Count = 1 then &amp;quot;Director of the company&amp;quot; else &amp;quot;Directors of the company&amp;quot;">
				<template><add-to-body>
  <!--Title-->
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <!--Directors list table-->
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">The <ws /><inline condition="DirectorsDuringPeriod.Count != 1">directors</inline><inline condition="DirectorsDuringPeriod.Count = 1">director</inline><ws /> who held office during the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /><inline condition="DirectorsDuringPeriod.Count != 1">were</inline><inline condition="DirectorsDuringPeriod.Count = 1">was</inline><ws /> as follows:</para>
  <section>
    <iterator iterate-over="DirectorsDuringPeriod" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
      <var name="OfficerType" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer|General|Type|Current Period')[0].Value" />
      <var name="XBRLOfficerType" pre="if OfficerType = 'Chairman' then 'uk-bus:Chairman' else&#xD;&#xA;if OfficerType = 'Chief executive' then 'uk-bus:ChiefExecutive' else&#xD;&#xA;if OfficerType = 'Chairman and chief executive' then 'uk-bus:ChairmanChiefExecutive' else&#xD;&#xA;if OfficerType = 'Company secretary' then 'uk-bus:CompanySecretary' else&#xD;&#xA;if OfficerType = 'Company secretary and director' then 'uk-bus:CompanySecretaryDirector' else&#xD;&#xA;if OfficerType = 'Director' then 'uk-bus:Director'+(OfficersList.IndexOf(reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer')[0])+1)&#xD;&#xA;else 'uk-bus:AllEntityOfficers'" />
      <var name="Cessation" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer|General|Cessation|Current Period')[0].Value" />
      <var name="HasCessation" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer|General|Cessation|Current Period')[0].HasValue" />
      <var name="Commencement" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer|General|Commencement|Current Period')[0].Value" />
      <var name="HasCommencement" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer|General|Commencement|Current Period')[0].HasValue" />
      <var name="PeriodStart" init="reportHelper.CurrentPeriod.StartDate.Value" />
      <para xbrl-hypercube="uk-bus:EntityOfficersHypercube" xbrl-dimensions="uk-bus:EntityOfficersDimension=XBRLOfficerType" toggle-expand-on-click="false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|Officers')" para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
        <inline xbrl-concept="uk-bus:NameEntityOfficer" xbrl-period="CurrentPeriod">
          <data>reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer|General|Displayedas|Current Period')[0].Value</data>
        </inline>
        <inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer|General|Type|Current Period')[0].Value != 'Director'">
          <ws />-<ws /><data>
	reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer|General|Type|Current Period')[0].Value</data></inline>
        <inline condition="HasCommencement and (Commencement &gt;= PeriodStart) and (HasCessation = false)">
          <ws />(appointed <ws /><inline xbrl-concept="uk-direp:DateAssumedPosition" xbrl-period="EndCurrentPeriod"><data>Commencement</data></inline>)
						</inline>
        <inline condition="HasCessation and (HasCommencement = false or Commencement &lt; PeriodStart)">
          <ws />(<data condition="reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer|General|Reason|Current Period')[0].HasValue">reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer|General|Reason|Current Period')[0].Value</data><inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer|General|Reason|Current Period')[0].HasValue = false">resigned</inline><ws /><inline xbrl-concept="uk-direp:DateResignation" xbrl-period="EndCurrentPeriod"><data>Cessation</data></inline>)
						</inline>
        <inline condition="HasCommencement and HasCessation and (Commencement &gt;= PeriodStart)">
          <ws />(appointed<ws /><inline xbrl-concept="uk-direp:DateAssumedPosition" xbrl-period="EndCurrentPeriod"><data>Commencement</data></inline><ws />and <ws /><data condition="reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer|General|Reason|Current Period')[0].HasValue">reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer|General|Reason|Current Period')[0].Value</data><inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer|General|Reason|Current Period')[0].HasValue = false">resigned</inline><ws /><inline xbrl-concept="uk-direp:DateResignation" xbrl-period="EndCurrentPeriod"><data>Cessation</data></inline>)
						</inline>
      </para>
    </iterator>
  </section>
  <para condition="DirectorsDuringPeriod.Count = 0" toggle-expand-on-click="true" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|Officers')" base-style="Link To Data">
		Directors
	</para>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Principal activity" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="PrincipalActivity" page-break-before="False" keep-with-next-strength="0" template-guid="593176fd-9de9-4141-9273-cc08b59b415e">
				<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|PrincipalActivity|PrincipalActivity|PrincipalActivity|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|PrincipalActivity')" toggle-expand-on-click="true" base-style="Link To Data">
	Principal activity
	</para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|PrincipalActivity|PrincipalActivity|PrincipalActivity|Current Period')[0].HasValue" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|PrincipalActivity')" para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-bus:DescriptionPrincipalActivities" xbrl-period="CurrentPeriod">The principal activity of the company is <ws /><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|DirectorsReport|PrincipalActivity|PrincipalActivity|PrincipalActivity|Current Period")[0].Value</data>
.</para>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Dividends" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|General|Dividends|FinalDividendRecommended|FinalDividendRecommended|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="RecommendedDividend" page-break-before="False" keep-with-next-strength="0" template-guid="acedf794-1d2a-4b76-9e4b-fd4046e71a01">
				<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <section condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|General|Dividends|FinalDividendRecommended|FinalDividendRecommended|Current Period')[0].HasValue = false" toggle-expand-on-click="true" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|General|Dividends')">
    <para base-style="Link To Data">
		Recommended dividend
	</para>
  </section>
  <section condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|General|Dividends|FinalDividendRecommended|FinalDividendRecommended|Current Period')[0].HasValue" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|General|Dividends')">
    <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">The <ws /><inline condition="DirectorsActiveAtFinalisationCount  !=  1">directors recommend</inline><inline condition="DirectorsActiveAtFinalisationCount  =  1">director recommends</inline><ws /> a final dividend payment of <ws /><inline xbrl-concept="uk-direp:DividendRecommendedByDirectors" xbrl-period="CurrentPeriod" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|General|Dividends|FinalDividendRecommended|FinalDividendRecommended|Current Period")[0].Value</data></inline><ws /> be made in respect of the financial <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> ended <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data>
. This dividend has not been recognised as a liability in the financial statements.</para>
  </section>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Business review" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="CompanySize != 'Small'" enabled="Conditional" section-name="BusinessReview" page-break-before="False" keep-with-next-strength="0" template-guid="aa33e1d8-040d-4e82-9e42-44d8af6f9786">
				<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
</add-to-body></template>
				<report-template version="12" name="Fair review of the business" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FairReview" page-break-before="False" keep-with-next-strength="0" template-guid="01d3a857-0e96-424c-b783-de6d4e847702">
					<template><add-to-body>
  <para base-style="Title" font-style="+italic" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|BusinessReview|FairReview|DevelopmentPerformanceAndPosition|Current Period')[0].HasValue = false and reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|BusinessReview|FairReview|FinancialKPI|Rows|*',null, true).Count=0 and reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|BusinessReview|FairReview|NonFinancialKPI|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|BusinessReview')" toggle-expand-on-click="true" base-style="Link To Data">
	Fair review of the business
	</para>
</add-to-body></template>
					<report-template version="12" name="Development performance and position" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="DevelopmentPerformanceAndPosition" page-break-before="False" keep-with-next-strength="0" template-guid="10360808-bcb9-48f2-be50-fbbc1c6062be">
						<template><add-to-body>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|BusinessReview')" para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|DirectorsReport|BusinessReview|FairReview|DevelopmentPerformanceAndPosition|Current Period")[0].Value</data>
  </para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Financial KPI's" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|BusinessReview|FairReview|FinancialKPI|Rows|*&quot;,null, true).Count &gt;0" enabled="Conditional" section-name="FinancialKPI" page-break-before="False" keep-with-next-strength="0" template-guid="29bf41c0-811a-4a27-b132-e65aca7280ba">
						<template><add-to-body>
  <section tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|BusinessReview')">
    <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">The company's key financial and other performance indicators during the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> were as follows:</para>
    <table base-style="Table Text" condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|BusinessReview|FairReview|FinancialKPI|Rows|*')[0].HasValue">
      <column-details column-number="1" free-space="1" align="bottom-left" />
      <column-details column-number="2" width="10" align="centre-bottom" />
      <column-details column-number="3" width="22" align="bottom-right" />
      <column-details column-number="4" width="22" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
      <table-row base-style="Table Column Heading">
        <table-cell />
        <table-cell>
          <para>
			Unit
		</para>
        </table-cell>
        <table-cell>
          <para>
            <data>
					reportHelper.CurrentPeriod.EndDate.Value.Year
				</data>
          </para>
        </table-cell>
        <table-cell>
          <para>
            <data>
					reportHelper.ComparativePeriod(1).EndDate.Value.Year
				</data>
          </para>
        </table-cell>
      </table-row>
      <table-row-iterator iterate-over="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|BusinessReview|FairReview|FinancialKPI|Rows|*')" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
        <table-row>
          <table-cell>
            <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
              <data>reporting.queries.client.lookupaccountingperioddata(item, '*|KPI|Current Period')[0].Value</data>
            </para>
          </table-cell>
          <table-cell>
            <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
              <data>reporting.queries.client.lookupaccountingperioddata(item, '*|KPIUnit|Current Period')[0].Value</data>
            </para>
          </table-cell>
          <table-cell>
            <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
              <data>reporting.queries.client.lookupaccountingperioddata(item, '*|KPIAmount|Current Period')[0].Value</data>
            </para>
          </table-cell>
          <table-cell>
            <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
              <data condition="reporting.queries.client.lookupaccountingperioddata(item, '*|KPIAmount|Prior Period')[0].HasValue">reporting.queries.client.lookupaccountingperioddata(item, '*|KPIAmount|Prior Period')[0].Value</data>
            </para>
          </table-cell>
        </table-row>
      </table-row-iterator>
    </table>
    <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
    </para>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Non-financial KPI's" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|BusinessReview|FairReview|NonFinancialKPI|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="NonFinancialKPI" page-break-before="False" keep-with-next-strength="0" template-guid="b1f3fa84-ec9e-4f08-9f7c-3cd4b9a673aa">
						<template><add-to-body>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|BusinessReview')" para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|DirectorsReport|BusinessReview|FairReview|NonFinancialKPI|Current Period")[0].Value</data>
  </para>
</add-to-body></template>
					</report-template>
				</report-template>
				<report-template version="12" name="Principal risks and uncertainties" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="PrincipalRisksAndUncertainties" page-break-before="False" keep-with-next-strength="0" template-guid="76938f1a-48a2-495b-8176-d72c6e474a7c">
					<template><add-to-body>
  <para base-style="Title" font-style="+italic" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|BusinessReview|PrincipalRiskAndUncertainties|RiskAndUncertainties|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|BusinessReview')" toggle-expand-on-click="true" base-style="Link To Data">
	Principal risks and uncertainties
	</para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|BusinessReview')" para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|DirectorsReport|BusinessReview|PrincipalRiskAndUncertainties|RiskAndUncertainties|Current Period")[0].Value</data>
  </para>
</add-to-body></template>
				</report-template>
			</report-template>
			<report-template version="12" name="Financial instruments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="CompanySize != 'Small'" enabled="Conditional" section-name="FinancialInstruments" page-break-before="False" keep-with-next-strength="0" template-guid="b8676903-eb79-4928-9bc6-adb67f337951">
				<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
</add-to-body></template>
				<report-template version="12" name="Objectives and policies" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|FinancialInstruments|ManagementObjectivesAndPolicies|Text|Current Period&quot;)[0] .HasValue" enabled="Always" section-name="ObjectivesAndPolicies" page-break-before="False" keep-with-next-strength="0" template-guid="1bc16d74-dd9e-4edc-83a5-df3662d111d5">
					<template><add-to-body>
  <para base-style="Title" font-style="+italic" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|FinancialInstruments|ManagementObjectivesAndPolicies|ObjectivesAndPolicies|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|FinancialInstruments')" toggle-expand-on-click="true" base-style="Link To Data">
	Objectives and policies
	</para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|FinancialInstruments')">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|DirectorsReport|FinancialInstruments|ManagementObjectivesandPolicies|ObjectivesAndPolicies|Current Period")[0].Value</data>
  </para>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="Price risk, credit risk, liquidity risk and cash flow risk" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|FinancialInstruments|PriceCreditLiquidityAndCashFlowRisk|Text|Current Period&quot;)[0] !=null" enabled="Always" section-name="RiskExposure" page-break-before="False" keep-with-next-strength="0" template-guid="4d9f7699-c6ab-4edd-9d4c-41e3a707fbe5">
					<template><add-to-body>
  <para base-style="Title" font-style="+italic" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|FinancialInstruments|PriceCreditLiquidityAndCashFlowRisk|PriceCreditLiquidityAndCashFlowRisk|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|FinancialInstruments')" toggle-expand-on-click="true" base-style="Link To Data">
	Risks
	</para>
  <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|FinancialInstruments')">
    <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("Disclosure|DirectorsReport|FinancialInstruments|PriceCreditLiquidityAndCashFlowRisk|PriceCreditLiquidityAndCashFlowRisk|Current Period")[0].Value</data>
  </para>
</add-to-body></template>
				</report-template>
			</report-template>
			<report-template version="12" name="Purchase of own shares" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|PurchaseOwnShares|*&quot;)[0].HasValue or (reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|OwnShares|OwnSharesHeld|MaximumNumberOwnSharesHeld|Current Period&quot;)[0].HasValue) or (reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|OwnShares|DisposalOwnShares|DisposalOwnShares|*&quot;)[0].HasValue) or (reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|MaximumNumberShares|Current Period&quot;)[0].HasValue or reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|MaximumNominalValue|Current Period&quot;)[0].HasValue)" enabled="Conditional" section-name="OwnShares" page-break-before="False" keep-with-next-strength="0" template-guid="4f47224a-a1e5-4bc9-b73b-9a81bf3a7890">
				<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para condition="(reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|PurchaseOwnShares|*')[0].HasValue or (reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|OwnShares|OwnSharesHeld|MaximumNumberOwnSharesHeld|Current Period')[0].HasValue) or (reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|OwnShares|DisposalOwnShares|DisposalOwnShares|*')[0].HasValue) or (reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|MaximumNumberShares|Current Period')[0].HasValue or reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|MaximumNominalValue|Current Period')[0].HasValue) )= false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|OwnShares')" toggle-expand-on-click="true" base-style="Link To Data">
	Purchase of own shares
	</para>
</add-to-body></template>
				<report-template version="12" name="Purchase of own shares" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|PurchaseOwnShares|*&quot;)[0].HasValue" enabled="Conditional" section-name="PurchaseOfOwnShares" page-break-before="False" keep-with-next-strength="0" template-guid="06c0c8e7-54d9-4c2b-9453-7b85020b5031">
					<template><add-to-body>
  <para toggle-expand-on-click="true" condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|PurchaseOwnShares|*')[0].HasValue=false" base-style="Link To Data" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|OwnShares')">
	Purchase of own shares
		
	</para>
  <section condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|PurchaseOwnShares|*')[0].HasValue" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|OwnShares')">
    <var name="Purchase" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|PurchaseOwnShares|*')" />
    <iterator condition="Purchase[0].HasValue" iterate-over="Purchase" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
      <var name="ShareClass" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|PurchaseOwnShares|PurchaseOwnShares|XBRLShareClass|Current Period')[0].Value" />
      <var name="XBRLShareClass" pre="&#xD;&#xA;		if ShareClass = 'Ordinary share class 1' then 'uk-bus:OrdinaryShareClass1' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 2' then 'uk-bus:OrdinaryShareClass2' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 3' then 'uk-bus:OrdinaryShareClass3' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 4' then 'uk-bus:OrdinaryShareClass4' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 5' then 'uk-bus:OrdinaryShareClass5' else&#xD;&#xA;		if ShareClass = 'Preference share class 1' then 'uk-bus:PreferenceShareClass1' else&#xD;&#xA;		if ShareClass = 'Preference share class 2' then 'uk-bus:PreferenceShareClass2' else&#xD;&#xA;		if ShareClass = 'Preference share class 3' then 'uk-bus:PreferenceShareClass3' else&#xD;&#xA;		if ShareClass = 'Preference share class 4' then 'uk-bus:PreferenceShareClass4' else&#xD;&#xA;		if ShareClass = 'Preference share class 5' then 'uk-bus:PreferenceShareClass5' else&#xD;&#xA;		'uk-bus:AllShareClassesDefault'" />
      <var name="ShareType" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|PurchaseOwnShares|PurchaseOwnShares|XBRLShareType|Current Period')[0].Value" />
      <var name="XBRLShareType" pre="&#xD;&#xA;		if ShareType = 'Not applicable' then 'uk-bus:AllShareTypesDefault' else&#xD;&#xA;		if ShareType = 'Cumulative' then 'uk-bus:CumulativeShares' else&#xD;&#xA;		if ShareType = 'Cumulative and redeemable shares' then 'uk-bus:CumulativeRedeemableShares' else&#xD;&#xA;		if ShareType = 'Cumulative and non-redeemable shares' then 'uk-bus:CumulativeNon-redeemableShares' else&#xD;&#xA;		if ShareType = 'Non-cumulative' then 'uk-bus:Non-cumulativeShares' else&#xD;&#xA;		if ShareType = 'Non-cumulative and redeemable shares' then 'uk-bus:Non-cumulativeNon-redeemableShares' else&#xD;&#xA;		if ShareType = 'Non-cumulative and non-redeemable shares' then 'uk-bus:Non-cumulativeNon-redeemableShares' else&#xD;&#xA;		if ShareType = 'Other share types' then 'uk-bus:OtherShareTypes' else&#xD;&#xA;		'uk-bus:AllShareTypesDefault'" />
      <para xbrl-hypercube="uk-bus:SharesHypercube" xbrl-dimensions="uk-bus:ShareClassesDimension=XBRLShareClass,uk-bus:ShareTypesDimension=XBRLShareType" para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">During the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> the company purchased <ws /><inline xbrl-concept="uk-direp:NumberOwnSharesPurchased" xbrl-period="CurrentPeriod"><data base-style="Inline Number">reporting.queries.client.lookupaccountingperioddata(item, '*|PurchaseOwnShares|PurchaseOwnShares|NumberShares|Current Period')[0].Value</data></inline><ws /> of its own <ws /><inline xbrl-period="CurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|PurchaseOwnShares|PurchaseOwnShares|Description|Current Period')[0].Value</data></inline><ws /> at a nominal value of <ws /><inline xbrl-concept="uk-direp:NominalValueOwnSharesPurchased" xbrl-period="CurrentPeriod" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|PurchaseOwnShares|PurchaseOwnShares|NominalValue|Current Period')[0].Value</data></inline>
. The <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, '*|PurchaseOwnShares|PurchaseOwnShares|Description|Current Period')[0].Value</data><ws /> were purchased for a consideration of <ws /><inline xbrl-concept="uk-direp:NetConsiderationPaidForOwnShares" xbrl-period="CurrentPeriod" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|PurchaseOwnShares|PurchaseOwnShares|Consideration|Current Period')[0].Value</data></inline><ws /> and represent <ws /><inline xbrl-concept="uk-direp:PercentageCalled-upShareCapitalRepresentedByPurchasesDuringPeriod" xbrl-period="CurrentPeriod" xbrl-scaling="0"><data base-style="Percentage">reporting.queries.client.lookupaccountingperioddata(item, '*|PurchaseOwnShares|PurchaseOwnShares|Percentage|Current Period')[0].Value</data></inline><inline base-style="Percentage"><ws /> of the called up share capital of that class of share.</inline><ws /><ws /><inline xbrl-concept="uk-direp:DescriptionReasonsForPurchaseOwnShares" xbrl-period="CurrentPeriod" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|PurchaseOwnShares|PurchaseOwnShares|Reason|Current Period')[0].Value</data></inline></para>
    </iterator>
  </section>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="Disposal of own shares" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|OwnShares|DisposalOwnShares|DisposalOwnShares|*&quot;)[0].HasValue" enabled="Conditional" section-name="DisposalOfOwnShares" page-break-before="False" keep-with-next-strength="0" template-guid="2387aad0-832a-43d2-84f1-0893e3c90e44">
					<template><add-to-body>
  <para base-style="Link To Data" toggle-expand-on-click="true" condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|OwnShares|DisposalOwnShares|DisposalOwnShares|*')[0].HasValue=false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|OwnShares')">
Disposal of own shares
</para>
  <section condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|OwnShares|DisposalOwnShares|DisposalOwnShares|*')[0].HasValue" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|OwnShares')">
    <var name="Disposal" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|OwnShares|DisposalOwnShares|DisposalOwnShares|*')" />
    <iterator condition="Disposal[0].HasValue" iterate-over="Disposal" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
      <var name="ShareClass" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|DisposalOwnShares|DisposalOwnShares|XBRLShareClass|Current Period')[0].Value" />
      <var name="XBRLShareClass" pre="&#xD;&#xA;		if ShareClass = 'Ordinary share class 1' then 'uk-bus:OrdinaryShareClass1' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 2' then 'uk-bus:OrdinaryShareClass2' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 3' then 'uk-bus:OrdinaryShareClass3' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 4' then 'uk-bus:OrdinaryShareClass4' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 5' then 'uk-bus:OrdinaryShareClass5' else&#xD;&#xA;		if ShareClass = 'Preference share class 1' then 'uk-bus:PreferenceShareClass1' else&#xD;&#xA;		if ShareClass = 'Preference share class 2' then 'uk-bus:PreferenceShareClass2' else&#xD;&#xA;		if ShareClass = 'Preference share class 3' then 'uk-bus:PreferenceShareClass3' else&#xD;&#xA;		if ShareClass = 'Preference share class 4' then 'uk-bus:PreferenceShareClass4' else&#xD;&#xA;		if ShareClass = 'Preference share class 5' then 'uk-bus:PreferenceShareClass5' else&#xD;&#xA;		'uk-bus:AllShareClassesDefault'" />
      <var name="ShareType" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|DisposalOwnShares|DisposalOwnShares|XBRLShareType|Current Period')[0].Value" />
      <var name="XBRLShareType" pre="&#xD;&#xA;		if ShareType = 'Not applicable' then 'uk-bus:AllShareTypesDefault' else&#xD;&#xA;		if ShareType = 'Cumulative' then 'uk-bus:CumulativeShares' else&#xD;&#xA;		if ShareType = 'Cumulative and redeemable shares' then 'uk-bus:CumulativeRedeemableShares' else&#xD;&#xA;		if ShareType = 'Cumulative and non-redeemable shares' then 'uk-bus:CumulativeNon-redeemableShares' else&#xD;&#xA;		if ShareType = 'Non-cumulative' then 'uk-bus:Non-cumulativeShares' else&#xD;&#xA;		if ShareType = 'Non-cumulative and redeemable shares' then 'uk-bus:Non-cumulativeNon-redeemableShares' else&#xD;&#xA;		if ShareType = 'Non-cumulative and non-redeemable shares' then 'uk-bus:Non-cumulativeNon-redeemableShares' else&#xD;&#xA;		if ShareType = 'Other share types' then 'uk-bus:OtherShareTypes' else&#xD;&#xA;		'uk-bus:AllShareTypesDefault'" />
      <para para-alignment="Full" xbrl-hypercube="uk-bus:SharesHypercube" xbrl-dimensions="uk-bus:ShareClassesDimension=XBRLShareClass,uk-bus:ShareTypesDimension=XBRLShareType" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">During the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> the company disposed of <ws /><inline xbrl-concept="uk-direp:NumberOwnSharesSold" xbrl-period="CurrentPeriod" xbrl-scaling="0"><data base-style="Inline Number">reporting.queries.client.lookupaccountingperioddata(item, '*|DisposalOwnShares|DisposalOwnShares|NumberShares|Current Period')[0].Value</data></inline><ws /> of its own <ws /><inline xbrl-period="CurrentPeriod" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|DisposalOwnShares|DisposalOwnShares|Description|Current Period')[0].Value</data></inline><ws /> at a nominal value of <ws /><inline xbrl-concept="uk-direp:NominalValueOwnSharesSold" xbrl-period="CurrentPeriod" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|DisposalOwnShares|DisposalOwnShares|NominalValue|Current Period')[0].Value</data></inline>
.<inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|DisposalOwnShares|DisposalOwnShares|Proceeds|Current Period')[0].Value&gt;0"><ws /> The proceeds of the disposal amounted to <ws /><inline xbrl-concept="uk-direp:SaleOwnShares" xbrl-period="CurrentPeriod" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|DisposalOwnShares|DisposalOwnShares|Proceeds|Current Period')[0].Value</data></inline><ws /> and <ws /></inline><inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|DisposalOwnShares|DisposalOwnShares|Proceeds|Current Period')[0].Value=0"><ws /> The disposed shares <ws /></inline>
represent <ws /><data base-style="Percentage">reporting.queries.client.lookupaccountingperioddata(item, '*|DisposalOwnShares|DisposalOwnShares|Percentage|Current Period')[0].Value</data><ws /> of that class of share.</para>
    </iterator>
  </section>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="Maximum number and nominal value" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|MaximumNumberShares|Current Period&quot;)[0].HasValue or reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|MaximumNominalValue|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="MaximumNumberAndNominalValue" page-break-before="False" keep-with-next-strength="0" template-guid="bed34596-ee2e-4fda-97bb-248859052718">
					<template><add-to-body>
  <para base-style="Link To Data" toggle-expand-on-click="true" condition="(reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|MaximumNumberShares|Current Period')[0].HasValue or reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|MaximumNominalValue|Current Period')[0].HasValue)=false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|OwnShares')">
Maximum number and value of own shares purchased
</para>
  <section condition="(reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|MaximumNumberShares|Current Period')[0].HasValue or reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|MaximumNominalValue|Current Period')[0].HasValue)" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|OwnShares')">
    <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The maximum number of its own shares held by the company during the year was <ws /><inline xbrl-concept="uk-direp:MaximumNumberOwnSharesHeldByEntityInPeriod" xbrl-period="CurrentPeriod" xbrl-scaling="0"><data base-style="Inline Number">reporting.queries.client.lookupaccountingperioddata("Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|MaximumNumberShares|Current Period")[0].Value</data></inline><ws /> having a maximum aggregate nominal value of <ws /><inline xbrl-concept="uk-direp:MaximumNominalValueOwnSharesHeldByEntityInPeriod" xbrl-period="CurrentPeriod" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|MaximumNominalValue|Current Period")[0].Value</data></inline>
.</para>
  </section>
</add-to-body></template>
				</report-template>
			</report-template>
			<report-template version="12" name="Political donations" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reportHelper.Computation(reportHelper.DirectorReportRounding, reportHelper.DirectorReportScaling).GetPrimaryCode('286').Totals!=null and reportHelper.Computation(reportHelper.DirectorReportRounding).GetPrimaryCode('286').Totals[0].UnroundedValue&gt;=2000" enabled="Conditional" section-name="PoliticalDonations" page-break-before="False" keep-with-next-strength="0" template-guid="33a53f6d-5790-463b-8e82-00c3b58b119e">
				<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
</add-to-body></template>
				<report-template version="12" name="Specific political donations" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|Donations|PoliticalParty|DonationsPoliticalParties|Rows|*&quot;)[0].HasValue" enabled="Always" section-name="SpecificPoliticalDonations" page-break-before="False" keep-with-next-strength="0" template-guid="d49d1b24-3f84-484d-a81e-0d4d8c8e96fd">
					<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">During the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> the company made political donations of <ws /><inline xbrl-concept="uk-direp:PoliticalDonations" xbrl-period="CurrentPeriod" xbrl-scaling="0"><data>reportHelper.Computation(reportHelper.DirectorReportRounding).GetPrimaryCode('286').Totals[0].Value</data></inline>
. Individual donations to EU political parties were:</para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|Donations|PoliticalParty|DonationsPoliticalParties|Rows|*')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|Donations')" toggle-expand-on-click="true" base-style="Link To Data">
	Individual policital donations
	</para>
  <section condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|Donations|PoliticalParty|DonationsPoliticalParties|Rows|*')[0].HasValue" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|Donations')">
    <table base-style="Table Text">
      <column-details column-number="1" free-space="1" />
      <column-details column-number="2" width="22" />
      <table-row>
        <table-cell />
        <table-cell>
          <para para-alignment="Centre">
            <data>
				reportHelper.DirectorReportScalingHeader
			</data>
          </para>
        </table-cell>
      </table-row>
      <table-row-iterator iterate-over="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|Donations|PoliticalParty|DonationsPoliticalParties|Rows|*')" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
        <table-row xbrl-concept="uk-direp:SpecificEUPoliticalDonationGrouping">
          <table-cell>
            <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-direp:NameOrDescriptionRecipientOrganisation" xbrl-period="CurrentPeriod">
              <data>reporting.queries.client.lookupaccountingperioddata(item, '*|*|Current Period')[0].Value</data>
            </para>
          </table-cell>
          <table-cell align="bottom-right">
            <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-direp:AmountDonationToEUPoliticalOrganisation" xbrl-period="CurrentPeriod">
              <data>reporting.queries.client.lookupaccountingperioddata(item, '*|*|Current Period')[1].Value / reportHelper.DirectorReportScaling</data>
            </para>
          </table-cell>
        </table-row>
      </table-row-iterator>
      <table-row>
        <table-cell />
        <table-cell bottom-border-style="Doubleline" bottom-border-size="0.5">
        </table-cell>
      </table-row>
    </table>
  </section>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="Non-EU political donations" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|Donations|PoliticalParty|NonEUPoliticalDonations|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="NonEUPoliticalDonations" page-break-before="False" keep-with-next-strength="0" template-guid="7153fa25-b4a2-4c38-bbb3-9084f81bfc70">
					<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|Donations')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The company has <ws /><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|Donations|PoliticalParty|DonationsPoliticalParties|Rows|*&quot;)[0].HasValue">also <ws /></inline>
contributed <ws /><inline xbrl-concept="uk-direp:Non-EUPoliticalDonations" xbrl-period="CurrentPeriod" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|DirectorsReport|Donations|PoliticalParty|NonEUPoliticalDonations|Current Period")[0].Value</data></inline><ws /> to non-EU political parties.</para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|Donations|PoliticalParty|NonEUPoliticalDonations|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|Donations')" toggle-expand-on-click="true" base-style="Link To Data">
	Non-EU policital donations
	</para>
</add-to-body></template>
				</report-template>
			</report-template>
			<report-template version="12" name="Charitable donations" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reportHelper.Computation(reportHelper.DirectorReportRounding, reportHelper.DirectorReportScaling).GetPrimaryCode('285').Totals!=null and reportHelper.Computation(reportHelper.DirectorReportRounding).GetPrimaryCode('285').Totals[0].UnroundedValue&gt;=2000" enabled="Conditional" section-name="CharitableDonations" page-break-before="False" keep-with-next-strength="0" template-guid="e5c43344-1b7f-48cd-b47d-0f9a28329648">
				<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
</add-to-body></template>
				<report-template version="12" name="Specific charitable donations" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|Donations|Charity|DonationsCharity|Rows|*')[0].HasValue" enabled="Always" section-name="SpecificCharitableDonations" page-break-before="False" keep-with-next-strength="0" template-guid="3745503a-d9a2-4360-b634-c62a815607da">
					<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">During the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> the company made charitable donations of <ws /><inline xbrl-concept="uk-direp:CharitableDonations" xbrl-period="CurrentPeriod" xbrl-scaling="0"><data>reportHelper.Computation(reportHelper.DirectorReportRounding).GetPrimaryCode('285').Totals[0].Value</data></inline>
. Individual donations were:</para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|Donations|Charity|DonationsCharity|Rows|*')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|Donations')" toggle-expand-on-click="true" base-style="Link To Data">
	Individual donations to charities
	</para>
  <section condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|Donations|Charity|DonationsCharity|Rows|*')[0].HasValue" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|Donations')">
    <table base-style="Table Text">
      <column-details column-number="1" free-space="1" />
      <column-details column-number="2" width="22" />
      <table-row>
        <table-cell />
        <table-cell>
          <para para-alignment="Centre">
            <data>
	reportHelper.DirectorReportScalingHeader
</data>
          </para>
        </table-cell>
      </table-row>
      <table-row-iterator iterate-over="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|Donations|Charity|DonationsCharity|Rows|*')" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
        <table-row xbrl-concept="uk-direp:SpecificCharitableDonationGrouping">
          <table-cell>
            <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-direp:DescriptionPurposeSpecificCharitableDonation" xbrl-period="CurrentPeriod" xbrl-scaling="0">
              <data>reporting.queries.client.lookupaccountingperioddata(item, '*|*|Current Period')[0].Value</data>
            </para>
          </table-cell>
          <table-cell align="bottom-right">
            <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-direp:AmountSpecificCharitableDonation" xbrl-period="CurrentPeriod" xbrl-scaling="0">
              <data>reporting.queries.client.lookupaccountingperioddata(item, '*|*|Current Period')[1].Value / reportHelper.DirectorReportScaling</data>
            </para>
          </table-cell>
        </table-row>
      </table-row-iterator>
      <table-row>
        <table-cell />
        <table-cell bottom-border-style="Doubleline" bottom-border-size="0.5">
        </table-cell>
      </table-row>
    </table>
  </section>
</add-to-body></template>
				</report-template>
			</report-template>
			<report-template version="12" name="Employment of disabled persons" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|CompanyStatus|CompanyStatus|CompanyStatus|CompanySize|Rows|*:item[0]|Employees|Current Period&quot;)[0].Value ='Over 250'" enabled="Conditional" section-name="EmploymentOfDisabledPersons" page-break-before="False" keep-with-next-strength="0" template-guid="7627adbf-1cbb-4489-9b18-99b33fa68fbb">
				<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|EmploymentPolicies')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-direp:EmploymentDisabledPersonsPolicy" xbrl-period="CurrentPeriod">
    <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("Disclosure|DirectorsReport|EmploymentPolicies|EmploymentOfDisabledPersons|EmploymentofDisabledPersons|Current Period")[0].Value</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|EmploymentPolicies|EmploymentOfDisabledPersons|EmploymentofDisabledPersons|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|EmploymentPolicies')" toggle-expand-on-click="true" base-style="Link To Data">
	Employment of disabled persons
	</para>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Employee involvement" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|ReportingSize&quot;)[0].Value = 'Large' and reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|CompanyStatus|CompanyStatus|CompanyStatus|CompanySize|Rows|*:item[0]|Employees|Current Period&quot;)[0].Value ='Over 250'" enabled="Conditional" section-name="EmployeeInvolvement" page-break-before="False" keep-with-next-strength="0" template-guid="163d3935-e59b-4bc9-b316-35cadcc86d90">
				<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|EmploymentPolicies')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-direp:DescriptionArrangementsRelatedToEmployeesSuchAsProvisionInformationConsultation" xbrl-period="CurrentPeriod">
    <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("Disclosure|DirectorsReport|EmploymentPolicies|EmployeeInvolvement|EmployeeInvolvement|Current Period")[0].Value</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|EmploymentPolicies|EmployeeInvolvement|EmployeeInvolvement|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|EmploymentPolicies')" toggle-expand-on-click="true" base-style="Link To Data">
	Employee involvement
	</para>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Future developments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="CompanySize != 'Small' and reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|Miscellaneous|LikelyFutureDevelopments|Likelyfuturedevelopments|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="FutureDevelopments" page-break-before="False" keep-with-next-strength="0" template-guid="e7501c90-3ce8-4bad-9f77-3f1ffef9e1e8">
				<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|Miscellaneous')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("Disclosure|DirectorsReport|Miscellaneous|LikelyFutureDevelopments|Likelyfuturedevelopments|Current Period")[0]</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|Miscellaneous|LikelyFutureDevelopments|Likelyfuturedevelopments|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|Miscellaneous')" toggle-expand-on-click="true" base-style="Link To Data">
	Future developments
	</para>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Research and development" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="CompanySize != 'Small' and reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|Miscellaneous|ResearchandDevelopment|ResearchandDevelopment|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="R&amp;D" page-break-before="False" keep-with-next-strength="0" template-guid="ba2bfe09-12be-42d4-85ee-ae7adbe3b5fc">
				<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|Miscellaneous')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("Disclosure|DirectorsReport|Miscellaneous|ResearchandDevelopment|ResearchandDevelopment|Current Period")[0].Value</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|Miscellaneous|ResearchandDevelopment|ResearchandDevelopment|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|Miscellaneous')" toggle-expand-on-click="true" base-style="Link To Data">
	Research and development
	</para>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Branches outside the United Kingdom" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="CompanySize != 'Small' and reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|Miscellaneous|BranchesOutsideUK|BranchesOutsideUK|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="Branches" page-break-before="False" keep-with-next-strength="0" template-guid="fd77e155-95af-4b3d-a7bc-43ae70c919b7">
				<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|Miscellaneous')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("Disclosure|DirectorsReport|Miscellaneous|BranchesOutsideUK|BranchesOutsideUK|Current Period")[0].Value</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|Miscellaneous|BranchesOutsideUK|BranchesOutsideUK|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|Miscellaneous')" toggle-expand-on-click="true" base-style="Link To Data">
	Branches outside UK
	</para>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Important post balance sheet events" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|General|PostBalanceSheetEvents|Postbalancesheetevents|Postbalancesheetevents|*:filter[*|Postbalancesheetevent|DirectorsReport|Current Period=True]&quot;, null , true).Count&gt;0" enabled="Conditional" section-name="ImportantPBSE" page-break-before="False" keep-with-next-strength="0" template-guid="f0534750-6dc5-4db9-91c7-20bcd6eb99ae">
				<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <section>
    <var name="list" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|General|PostBalanceSheetEvents|Postbalancesheetevents|Postbalancesheetevents|*:filter[Postbalancesheetevent|Postbalancesheetevent|DirectorsReport|Current Period=true]')" />
    <iterator condition="list[0].HasValue" iterate-over="list" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
      <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|General|PostBalanceSheetEvents')">
        <data>
						reporting.queries.client.lookupaccountingperioddata(item, '*|Postbalancesheetevent|Postbalancesheetevent|Description|Current Period')[0].Value
					</data>
      </para>
    </iterator>
    <para condition="list[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|General|PostBalanceSheetEvents')" toggle-expand-on-click="true" base-style="Link To Data">
	Post balance sheet events
	</para>
  </section>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Directors liabilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|DirectorsLiability|QualifyingThirdPartyIndemnityProvision|QualifyingThirdPartyIndemnityProvision|Current Period&quot;)[0].HasValue or reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|DirectorsLiability|QualifyingPensionSchemeIndemnityProvision|QualifyingPensionSchemeIndemnityProvision|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="DirectorsLiabilities" page-break-before="False" keep-with-next-strength="0" template-guid="d9c1d575-6712-4380-ad60-685a1d75c906" contents-name-expression="if DirectorsDuringPeriod.Count = 1 then &amp;quot;Director's liabilities&amp;quot; else &amp;quot;Directors' liabilites&amp;quot;">
				<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para condition="(reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|DirectorsLiability|QualifyingThirdPartyIndemnityProvision|QualifyingThirdPartyIndemnityProvision|Current Period')[0].HasValue or reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|DirectorsLiability|QualifyingPensionSchemeIndemnityProvision|QualifyingPensionSchemeIndemnityProvision|Current Period')[0].HasValue) = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|DirectorsLiability')" toggle-expand-on-click="true" base-style="Link To Data">
	Director liabilities
	</para>
</add-to-body></template>
				<report-template version="12" name="Qualifying third party indemnity provision" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|DirectorsLiability|QualifyingThirdPartyIndemnityProvision|QualifyingThirdPartyIndemnityProvision|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="ThirdPartyIndemnity" page-break-before="False" keep-with-next-strength="0" template-guid="663a08d0-483a-47e7-9d38-04a09c5337e5">
					<template><add-to-body>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|DirectorsLiability')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-direp:StatementOnQualifyingThirdPartyIndemnityProvisions" xbrl-period="CurrentPeriod" xbrl-scaling="0">
    <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("Disclosure|DirectorsReport|DirectorsLiability|QualifyingThirdPartyIndemnityProvision|QualifyingThirdPartyIndemnityProvision|Current Period")[0].Value</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|DirectorsLiability|QualifyingThirdPartyIndemnityProvision|QualifyingThirdPartyIndemnityProvision|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|DirectorsLiability')" toggle-expand-on-click="true" base-style="Link To Data">
	Third party indemnity provisions
	</para>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="Qualifying pension scheme indemnity provision" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|DirectorsLiability|QualifyingPensionSchemeIndemnityProvision|QualifyingPensionSchemeIndemnityProvision|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="PensionSchemeIndemnity" page-break-before="False" keep-with-next-strength="0" template-guid="498845c1-afe9-451d-911b-0235e208de3a">
					<template><add-to-body>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|DirectorsLiability')" para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|DirectorsReport|DirectorsLiability|QualifyingPensionSchemeIndemnityProvision|QualifyingPensionSchemeIndemnityProvision|Current Period")[0].Value</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|DirectorsLiability|QualifyingPensionSchemeIndemnityProvision|QualifyingPensionSchemeIndemnityProvision|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|DirectorsLiability')" toggle-expand-on-click="true" base-style="Link To Data">
	Pension scheme indemnity provisions
	</para>
</add-to-body></template>
				</report-template>
			</report-template>
			<report-template version="12" name="Disclosure of information to the auditors" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|CompanyStatus|CompanyStatus|CompanyStatus|Audited|Current Period&quot;)[0].Value = true" enabled="Conditional" section-name="DisclosureOfInformationToTheAuditors" page-break-before="False" keep-with-next-strength="0" template-guid="ec104143-9975-415b-ba36-7f2467b1d932">
				<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-direp:StatementOnQualityCompletenessInformationProvidedToAuditors" xbrl-period="CurrentPeriod">
    <inline condition="DirectorsActiveAtFinalisationCount  !=  1">Each</inline>
    <inline condition="DirectorsActiveAtFinalisationCount   =1">The</inline>
    <ws /> director has taken steps that <ws /><inline condition="DirectorsActiveAtFinalisationCount  !=  1">they</inline><inline condition="DirectorsActiveAtFinalisationCount   =1  and  SingleActiveDirectorGender  =  'Female'">she</inline><inline condition="DirectorsActiveAtFinalisationCount   =1  and  SingleActiveDirectorGender  =  'Male'">he</inline><ws /> ought to have taken as a director in order to make <ws /><inline condition="DirectorsActiveAtFinalisationCount  !=  1">themselves</inline><inline condition="DirectorsActiveAtFinalisationCount   =1  and  SingleActiveDirectorGender  =  'Female'">herself</inline><inline condition="DirectorsActiveAtFinalisationCount   =1  and  SingleActiveDirectorGender  =  'Male'">himself</inline><ws /> aware of any relevant audit information and to establish that the company's auditors are aware of that information. The <ws /><inline condition="DirectorsActiveAtFinalisationCount  !=  1">directors confirm</inline><inline condition="DirectorsActiveAtFinalisationCount   =1  and  SingleActiveDirectorGender  =  'Female'">director confirms</inline><ws /> that there is no relevant information that <ws /><inline condition="DirectorsActiveAtFinalisationCount  !=  1">they know</inline><inline condition="DirectorsActiveAtFinalisationCount   =1  and  SingleActiveDirectorGender  =  'Female'">she knows</inline><inline condition="DirectorsActiveAtFinalisationCount   =1  and  SingleActiveDirectorGender  =  'Male'">he knows</inline><ws /> of and which <ws /><inline condition="DirectorsActiveAtFinalisationCount  !=  1">they know</inline><inline condition="DirectorsActiveAtFinalisationCount   =1  and  SingleActiveDirectorGender  =  'Female'">she knows</inline><inline condition="DirectorsActiveAtFinalisationCount   =1  and  SingleActiveDirectorGender  =  'Male'">he knows</inline><ws /> the auditors are unaware of.</para>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Reappointment of auditors" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|CompanyStatus|CompanyStatus|CompanyStatus|Audited|Current Period&quot;)[0].Value = true) and (reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|AuditorsReappointment|AuditorsReappointment|ReappointmentOptions|Current Period&quot;)[0].Value  !=  'No Auditors reappointment disclosure required')" enabled="Conditional" section-name="Reappointment of auditors" page-break-before="False" keep-with-next-strength="0" template-guid="e106c63a-ae76-41c0-95fa-6f9839538a8e">
				<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|AuditorsReappointment')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|AuditorsReappointment|AuditorsReappointment|ReappointmentOptions|Current Period&quot;)[0].Value  =  'Annual reappointment'" para-alignment="Left">
      <inline para-alignment="Left">In accordance with section 485 of the Companies Act 2006, a resolution for the re-appointment of <ws /></inline>
      <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|Name|Current Period")[0].Value</data>
      <inline para-alignment="Left">
        <ws /> as auditors of the company is to be proposed at the forthcoming Annual General Meeting.</inline>
    </inline>
    <inline condition="false" para-alignment="Left">
      <br />
      <br />
    </inline>
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|AuditorsReappointment|AuditorsReappointment|ReappointmentOptions|Current Period&quot;)[0].Value  =  'Deemed reappointment'" para-alignment="Left">
      <inline para-alignment="Left">The auditors <ws /></inline>
      <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|Name|Current Period")[0].Value</data>
      <inline para-alignment="Left">
        <ws /> are deemed to be reappointed under section 487(2) of the Companies Act 2006.</inline>
    </inline>
    <inline condition="false" para-alignment="Left">
      <br />
      <br />
    </inline>
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|AuditorsReappointment|AuditorsReappointment|ReappointmentOptions|Current Period&quot;)[0].Value  =  'Elective resolution'" para-alignment="Left">
      <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|Name|Current Period")[0].Value</data>
      <inline para-alignment="Left">
        <ws /> are deemed to be reappointed in accordance with an elective resolution made under section 386 of the Companies Act 1985 which continued in force under the Companies Act 2006.</inline>
    </inline>
    <inline condition="false" para-alignment="Left">
      <br />
      <br />
    </inline>
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|AuditorsReappointment|AuditorsReappointment|ReappointmentOptions|Current Period&quot;)[0].Value  =  'Other'" para-alignment="Left">
      <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("Disclosure|DirectorsReport|AuditorsReappointment|AuditorsReappointment|OtherReappointment|Current Period")[0].Value</data>
    </inline>
  </para>
  <para condition="(reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|AuditorsReappointment|AuditorsReappointment|ReappointmentOptions|Current Period')[0].Value  =  'No Auditors reappointment disclosure required')" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|AuditorsReappointment')" toggle-expand-on-click="true" base-style="Link To Data">
	Auditors reappointment options
	</para>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Small companies provisions statement" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="FRSSE = true or CompanySize = 'Small'" enabled="Conditional" section-name="SmallCompaniesProvisionsStatementDirectorsReport" page-break-before="False" keep-with-next-strength="0" template-guid="1d846f36-7fae-4aaa-9612-c330caa94b31">
				<template><add-to-body>
  <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-direp:AccountsAreInAccordanceWithSpecialProvisionsCompaniesActRelatingToSmallCompanies" xbrl-period="CurrentPeriod">The <ws /><inline condition="report.GetSection('DirectorsReport')!= null"><data>report.GetSection('DirectorsReport').Description</data></inline><ws /> has been prepared in accordance with the special provisions in Part 15 of the Companies Act 2006 relating to small companies.</para>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Medium sized companies provisions statement" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="CompanySize = 'Medium'" enabled="Conditional" section-name="MediumSizedCompaniesProvisionsStatementDirectorsReport" page-break-before="False" keep-with-next-strength="0" template-guid="5a594efb-d7f7-4a9d-9f69-0cd0cf0af79d">
				<template><add-to-body>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|CompanyStatus|CompanyStatus')" para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-direp:AccountsAreInAccordanceWithSpecialProvisionsInSection4453CompaniesActRelatingToMedium-sizedCompanies" xbrl-period="CurrentPeriod">The <ws /><inline condition="report.GetSection('DirectorsReport')!= null"><data>report.GetSection('DirectorsReport').Description</data></inline><ws /> has been prepared in accordance with the special provisions in Part 15 of the Companies Act 2006 relating to medium-sized companies.</para>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Directors report signatories" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="DirectorsReportSignatories" page-break-before="False" keep-with-next-strength="0" template-guid="aea90ee0-e243-40b0-8c9c-e3feb4a6e625">
				<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="10mm" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|General|FinalisationDates')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Approved by the <ws /><inline condition="DirectorsActiveAtFinalisationCount != 1">Board</inline><inline condition="DirectorsActiveAtFinalisationCount = 1">director</inline><ws /> on <ws /><inline condition="HasFinalisation = true"><inline xbrl-concept="uk-direp:DateSigningDirectorsReport" xbrl-period="EndCurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata('Disclosure|General|FinalisationDates|FinalisationDates|Directors|Current Period')[0].Value</data></inline></inline><inline condition="HasFinalisation = false">....................</inline><ws /><inline condition="DirectorsActiveAtFinalisationCount != 1">and signed on its behalf by:</inline></para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|Officers|Officers|Officers|*:filter[*|General|Signatory|Current Period=Report,*|General|Signatory|Current Period=Both]:filter[*|General|Cessation|Current Period=null]')[0].HasValue = false" toggle-expand-on-click="true" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|Officers')" base-style="Link To Data">
		Directors' report signatories
	</para>
  <section>
    <var name="list" init="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|Officers|Officers|Officers|*:filter[*|General|Signatory|Current Period=Report,*|General|Signatory|Current Period=Both]:filter[*|General|Cessation|Current Period=null]',null,true)" />
    <iterator iterate-over="list" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
      <var name="OfficerType" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer|General|Type|Current Period')[0].Value" />
      <var name="XBRLOfficerType" pre="if OfficerType = 'Chairman' then 'uk-bus:Chairman' else&#xD;&#xA;if OfficerType = 'Chief executive' then 'uk-bus:ChiefExecutive' else&#xD;&#xA;if OfficerType = 'Chairman and chief executive' then 'uk-bus:ChairmanChiefExecutive' else&#xD;&#xA;if OfficerType = 'Company secretary' then 'uk-bus:CompanySecretary' else&#xD;&#xA;if OfficerType = 'Company secretary and director' then 'uk-bus:CompanySecretaryDirector' else&#xD;&#xA;if OfficerType = 'Director' then 'uk-bus:Director'+(OfficersList.IndexOf(reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer')[0])+1)&#xD;&#xA;else 'uk-bus:AllEntityOfficers'" />
      <section toggle-expand-on-click="false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|Officers')">
        <para xbrl-hypercube="uk-bus:EntityOfficersHypercube" xbrl-dimensions="uk-bus:EntityOfficersDimension=XBRLOfficerType" para-alignment="Full" outer-top-border-clearance="10mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">.........................................
<br /><inline xbrl-concept="uk-direp:DirectorSigningReport" xbrl-period="CurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer|General|Displayedas|Current Period')[0].Value</data></inline><br /><data>
	reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer|General|Type|Current Period')[0].Value</data></para>
      </section>
    </iterator>
  </section>
</add-to-body></template>
			</report-template>
		</report-template>
		<report-template version="12" name="Statement of Directors' Responsibilities" include-in-numbering="False" include-in-contents="True" include-in-report-map="True" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|CompanyStatus|CompanyStatus|CompanyStatus|Audited|Current Period&quot;)[0].Value = true" enabled="Conditional" section-name="DirectorsResponsibilities" page-break-before="False" keep-with-next-strength="0" template-guid="8b0c58d9-a593-4606-b0c7-3e263d7016cc" contents-name-expression="if  DirectorsActiveAtFinalisationCount  =  1  then  &amp;quot;Statement of Director's  Responsibilities&amp;quot;  else  &amp;quot;Statement of Directors' Responsibilities&amp;quot;">
			<template><add-to-body>
</add-to-body></template>
			<report-template version="12" name="Directors responsibilities header" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="DirectorsResponsibilitiesHeader" page-break-before="False" keep-with-next-strength="0" template-guid="931de269-4662-4190-b66d-42514bcd9d0a">
				<template><add-to-body>
  <page-header>
    <para base-style="Page Header" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
      <data>reportHelper.Business.Name</data>
      <inline condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].HasValue and&#xD;&#xA;&#xD;&#xA;reportHelper.Business.Name !=&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].Value">
        <br />
        trading as <ws /><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|General|General|Tradingname|Current Period")[0]</data></inline>
      <br />
      <data condition="report.GetSection('DirectorsResponsibilities') != null">report.GetSection('DirectorsResponsibilities').Description</data>
      <inline para-alignment="left" condition="header.IsContinued" font-style="+Italic">
        <br />......... continued</inline>
    </para>
  </page-header>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Statement of directors responsibilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="StatementOfDirectorsResponsibilities" page-break-before="False" keep-with-next-strength="0" template-guid="e93bae36-e677-41f4-9875-1075652ad694">
				<template><add-to-body>
  <section>
    <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The <ws /><inline condition="DirectorsActiveAtFinalisationCount  !=  1">directors are</inline><inline condition="DirectorsActiveAtFinalisationCount  =1  ">director is</inline><ws /> responsible for preparing the <ws /><inline condition="report.GetSection('DirectorsReport') != null"><data>report.GetSection('DirectorsReport').Description</data></inline><ws /> and the financial statements in accordance with applicable law and regulations.</para>
    <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Company law requires the <ws /><inline condition="DirectorsActiveAtFinalisationCount  !=  1">directors</inline><inline condition="DirectorsActiveAtFinalisationCount  =1  ">director</inline><ws /> to prepare financial statements for each financial year. Under that law the <ws /><inline condition="DirectorsActiveAtFinalisationCount  !=  1">directors have</inline><inline condition="DirectorsActiveAtFinalisationCount  =1  ">director has</inline><ws /> elected to prepare the financial statements in accordance with United Kingdom Generally Accepted Accounting Practice (United Kingdom Accounting Standards and applicable law). Under company law the <ws /><inline condition="DirectorsActiveAtFinalisationCount  !=  1">directors</inline><inline condition="DirectorsActiveAtFinalisationCount  =1  ">director</inline><ws /> must not approve the financial statements unless <ws /><inline condition="DirectorsActiveAtFinalisationCount  !=  1">they are</inline><inline condition="(DirectorsActiveAtFinalisationCount  =  1)  and  (SingleActiveDirectorGender  =  'Female')">she is</inline><inline condition="(DirectorsActiveAtFinalisationCount  =  1)  and  (SingleActiveDirectorGender  =  'Male')">he is</inline><ws /> satisfied that they give a true and fair view of the state of affairs of the company and of the profit or loss of the company for that period. In preparing these financial statements, the <ws /><inline condition="DirectorsActiveAtFinalisationCount  !=  1">directors are</inline><inline condition="DirectorsActiveAtFinalisationCount  =1  ">director is</inline><ws /> required to:</para>
    <table>
      <column-details column-number="1" width="5mm" align="top-left" />
      <table-row>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
• 
</para>
        </table-cell>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
				select suitable accounting policies and apply them consistently;
				</para>
        </table-cell>
      </table-row>
      <table-row>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
• 
</para>
        </table-cell>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
				make judgements and accounting estimates that are reasonable and prudent<inline condition="CompanySize = 'Large'">;</inline><inline condition="CompanySize != 'Large'">; and</inline></para>
        </table-cell>
      </table-row>
      <table-row condition="CompanySize = 'Large'">
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
• 
</para>
        </table-cell>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
				state whether applicable UK Accounting Standards have been followed, subject to any material departures disclosed and explained in the financial statements; and
				</para>
        </table-cell>
      </table-row>
      <table-row>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
• 
</para>
        </table-cell>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
				prepare the financial statements on the going concern basis unless it is inappropriate to presume that the company will continue in business.
				</para>
        </table-cell>
      </table-row>
    </table>
    <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The <ws /><inline condition="DirectorsActiveAtFinalisationCount  !=  1">directors are</inline><inline condition="DirectorsActiveAtFinalisationCount  =1  ">director is</inline><ws /> responsible for keeping adequate accounting records that are sufficient to show and explain the company's transactions and disclose with reasonable accuracy at any time the financial position of the company and enable <ws /><inline condition="DirectorsActiveAtFinalisationCount  !=  1">them</inline><inline condition="(DirectorsActiveAtFinalisationCount  =  1)  and  (SingleActiveDirectorGender  =  'Female')">her</inline><inline condition="(DirectorsActiveAtFinalisationCount  =  1)  and  (SingleActiveDirectorGender  =  'Male')">him</inline><ws /> to ensure that the financial statements comply with the Companies Act 2006. <ws /><inline condition="DirectorsActiveAtFinalisationCount  !=  1">They are</inline><inline condition="(DirectorsActiveAtFinalisationCount  =  1)  and  (SingleActiveDirectorGender  =  'Female')">She is</inline><inline condition="(DirectorsActiveAtFinalisationCount  =  1)  and  (SingleActiveDirectorGender  =  'Male')">He is</inline><ws /> also responsible for safeguarding the assets of the company and hence for taking reasonable steps for the prevention and detection of fraud and other irregularities.</para>
  </section>
</add-to-body></template>
			</report-template>
		</report-template>
		<report-template version="12" name="Accountants' Report" include-in-numbering="False" include-in-contents="True" include-in-report-map="True" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|CompanyStatus|CompanyStatus|CompanyStatus|Audited|Current Period&quot;)[0].Value=  false " enabled="Conditional" section-name="AccountantsReport" page-break-before="True" keep-with-next-strength="0" template-guid="c576a706-8628-4f06-9a0b-0b1a2850d6eb">
			<template><page-layout /></template>
			<report-template version="12" name="Accountants report header" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="AccountantsReportHeader" page-break-before="False" keep-with-next-strength="0" template-guid="2e412668-bc05-4a04-aa9a-913934000283">
				<template><add-to-body>
  <page-header>
    <para para-alignment="Centre" base-style="Page Header" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">Chartered <ws /><inline condition="((String)reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|Description|Current Period&quot;)[0].Value).ToLower().IndexOf('certified')  &gt;=  0">Certified</inline><ws /> Accountants' Report to the <ws /><inline condition="DirectorsActiveAtFinalisationCount  !=  1">Board of Directors</inline><inline condition="DirectorsActiveAtFinalisationCount  =  1  ">Director</inline><ws /> on the Preparation of the Unaudited Statutory Accounts of
<br /><data>reportHelper.Business.Name</data><inline condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].HasValue and&#xD;&#xA;&#xD;&#xA;reportHelper.Business.Name !=&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].Value"><br />trading as<ws /><data>reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].Value</data></inline><br />for the <ws /><inline condition="reportHelper.CurrentPeriod.IsYear">Year</inline><inline condition="reportHelper.CurrentPeriod.IsYear  =  false">Period</inline><ws /> Ended <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data><inline condition="header.IsContinued" font-style="+italic"><br />......... continued</inline></para>
  </page-header>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Terms of reference" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="TermsOfReference" page-break-before="False" keep-with-next-strength="0" template-guid="83903fb4-4bd5-4ff2-9f38-13a0d7887b53">
				<template><add-to-body>
  <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">In order to assist you to fulfil your duties under the Companies Act 2006, we have prepared for your approval the accounts of <ws /><data para-alignment="Left">reportHelper.Business.Name</data><ws /> for the <ws /><data para-alignment="Left">reportHelper.CurrentPeriod.YearPeriod</data><ws /> ended <ws /><data para-alignment="Left">reportHelper.CurrentPeriod.EndDate.Value</data><ws /> set out on pages <ws /><inline condition="report.GetSection('FinancialStatements')  !=  null" para-alignment="Left"><data para-alignment="Left">report.GetSection('FinancialStatements').PageNumberFrom</data><inline para-alignment="Left"><ws /> to <ws /></inline><data para-alignment="Left">report.GetSection('FinancialStatements').PageNumberTo</data></inline><ws /> from the company's accounting records and from information and explanations you have given us.</para>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Guidance" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="Guidance" page-break-before="False" keep-with-next-strength="0" template-guid="ad930ea3-0e13-4696-b1a3-c012c143ccfa">
				<template><add-to-body>
  <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">As a member firm of the <ws /><inline condition="(((String)reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|Description|Current Period&quot;)[0].Value).ToLower().IndexOf('certified')  &gt;=  0) = false" para-alignment="Left"><inline para-alignment="Left">Institute of Chartered Accountants in England and Wales (ICAEW)</inline></inline><inline condition="((String)reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|Description|Current Period&quot;)[0].Value).ToLower().IndexOf('certified')  &gt;=  0" para-alignment="Left"><inline para-alignment="Left">Association of Chartered Certified Accountants</inline></inline>, we are subject to its ethical and other professional requirements which are detailed at <ws /><inline condition="(((String)reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|Description|Current Period&quot;)[0].Value).ToLower().IndexOf('certified')  &gt;=  0) = false" para-alignment="Left"><inline para-alignment="Left">icaew.com/membershandbook</inline></inline><inline condition="((String)reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|Description|Current Period&quot;)[0].Value).ToLower().IndexOf('certified')  &gt;=  0" para-alignment="Left"><inline para-alignment="Left">http://rulebook.accaglobal.com</inline></inline>.</para>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Accountants report disclaimer" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="AccountantsReportDisclaimer" page-break-before="False" keep-with-next-strength="0" template-guid="022ec1b6-c9e9-4540-9d36-18f10eb61553">
				<template><add-to-body>
  <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">This report is made solely to the Board of Directors of <ws /><data para-alignment="Left">reportHelper.Business.Name</data>, as a body, in accordance with the terms of our engagement letter<inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|Engagementletterdate|Current Period&quot;)[0].HasValue" para-alignment="Left"><inline para-alignment="Left"><ws /> dated <ws /></inline><data para-alignment="Left">((DateTime)reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Accountant|Accountant|Engagementletterdate|Current Period")[0].Value)</data></inline>. Our work has been undertaken solely to prepare for your approval the accounts of <ws /><data para-alignment="Left">reportHelper.Business.Name</data><ws /> and state those matters that we have agreed to state to them, as a body, in this report in accordance with <ws /><inline condition="(((String)reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|Description|Current Period&quot;)[0].Value).ToLower().IndexOf('certified')  &gt;=  0) =  false" para-alignment="Left"><inline para-alignment="Left">AAF 2/10 as detailed at icaew.com/compilation</inline></inline><inline condition="(((String)reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|Description|Current Period&quot;)[0].Value).ToLower().IndexOf('certified')  &gt;=  0) " para-alignment="Left"><inline para-alignment="Left">the requirements of the Association of Chartered Certified Accountants as detailed at http://www.accaglobal.com/factsheet163</inline></inline>. To the fullest extent permitted by law, we do not accept or assume responsibility to anyone other than <ws /><data para-alignment="Left">reportHelper.Business.Name</data><ws /> and its Board of Directors as a body for our work or for this report.</para>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Accountants report audit exemption" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="AuditExempt" page-break-before="False" keep-with-next-strength="0" template-guid="b764023b-0792-4752-9c5c-1b131672bcfc">
				<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">It is your duty to ensure that <ws /><data>reportHelper.Business.Name</data><ws /> has kept adequate accounting records and to prepare statutory accounts that give a true and fair view of the assets, liabilities, financial position and <ws /><inline condition="reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.AllCategoriesRoot,'Profit'),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero &lt; 0">profit</inline><inline condition="reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.AllCategoriesRoot,'Profit'),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero &gt; 0">loss</inline><inline condition="reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.AllCategoriesRoot,'Profit'),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero = 0">results</inline><ws /> of <ws /><data>reportHelper.Business.Name</data>
. You consider that <ws /><data>reportHelper.Business.Name</data><ws /> is exempt from the statutory audit requirement for the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data>
.</para>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="No opinion" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="AccountantsReportNoOpinion" page-break-before="False" keep-with-next-strength="0" template-guid="f0a1fa9b-0f8e-4521-852e-7607225a869e">
				<template><add-to-body>
  <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">We have not been instructed to carry out an audit or a review of the accounts of <ws /><data para-alignment="Left">reportHelper.Business.Name</data>. For this reason, we have not verified the accuracy or completeness of the accounting records or information and explanations you have given to us and we do not, therefore, express any opinion on the statutory accounts.</para>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Accountants report signature" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="AccountantsReportSignature" page-break-before="False" keep-with-next-strength="0" template-guid="ea1695da-39f3-484a-8714-3004dfa5d728">
				<template><add-to-body>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|Accountant')" para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <br />
    <br />
    <br />......................................

<br /><br /><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Accountant|Accountant|Name|Current Period")[0]</data><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|Description|Current Period&quot;)[0].HasValue"><br /><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Accountant|Accountant|Description|Current Period")[0]</data></inline><br /><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Accountant|Accountant|Addressline1|Current Period")[0]</data><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|Addressline2|Current Period&quot;)[0].HasValue"><br /><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Accountant|Accountant|Addressline2|Current Period")[0]</data></inline><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|Addressline3|Current Period&quot;)[0].HasValue"><br /><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Accountant|Accountant|Addressline3|Current Period")[0]</data></inline><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|City/town|Current Period&quot;)[0].HasValue"><br /><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Accountant|Accountant|CityTown|Current Period")[0]</data></inline><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|County/region|Current Period&quot;)[0].HasValue"><br /><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Accountant|Accountant|CountyRegion|Current Period")[0]</data></inline><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Accountant|Accountant|Postcode|Current Period&quot;)[0].HasValue"><br /><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Accountant|Accountant|Postcode|Current Period")[0]</data></inline></para>
  <para para-alignment="Full" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|General|FinalisationDates')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|General|FinalisationDates|FinalisationDates|AccountantAuditor|Current Period&quot;)[0].HasValue = false">Date:.............................</inline>
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|General|FinalisationDates|FinalisationDates|AccountantAuditor|Current Period&quot;)[0].HasValue">
      <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|General|FinalisationDates|FinalisationDates|AccountantAuditor|Current Period")[0].Value</data>
    </inline>
  </para>
</add-to-body></template>
			</report-template>
		</report-template>
		<report-template version="12" name="Independent Auditor's Report" include-in-numbering="False" include-in-contents="True" include-in-report-map="True" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|CompanyStatus|CompanyStatus|CompanyStatus|Audited|Current Period&quot;)[0].Value = true" enabled="Conditional" section-name="IndependentAuditorsReport" page-break-before="True" keep-with-next-strength="0" template-guid="46f7670b-d631-406d-ad19-f4c1d797f731">
			<template><page-layout /></template>
			<report-template version="12" name="Auditors report header" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="AuditorsReportHeader" page-break-before="False" keep-with-next-strength="0" template-guid="c99946b2-0f8d-49e1-ae37-bd03cfa628b8">
				<template><add-to-body>
  <page-header>
    <para base-style="Page Header" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
      <inline>Independent Auditor's Report to the Members of
<br /><inline><ws /></inline><data>reportHelper.Business.Name</data><inline condition="header.IsContinued" font-style="+italic"><inline></inline><inline><br /></inline><inline></inline><inline><br /></inline><inline><inline font-style="+italic">......... continued</inline></inline></inline></inline>
    </para>
  </page-header>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Introduction" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="AuditReportIntroduction" page-break-before="False" keep-with-next-strength="0" template-guid="be9a141c-d935-4e4c-8762-89829c00aa73">
				<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-aurep:StatementOnScopeLegislationCoveringFinancialStatements" xbrl-period="CurrentPeriod" xbrl-scaling="0" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">We have audited the financial statements of <ws /><data>reportHelper.Business.Name</data><ws /> for the <ws /><inline condition="reportHelper.CurrentPeriod.IsYear">year ended <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data></inline><inline condition="reportHelper.CurrentPeriod.IsYear  =  false">period from <ws /><data>reportHelper.CurrentPeriod.StartDate.Value</data><ws /> to <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data></inline>
, set out on pages <ws /><inline condition="report.GetSection('FinancialStatements')  !=  null"><data>report.GetSection('FinancialStatements').PageNumberFrom</data><ws /> to <ws /><data>report.GetSection('FinancialStatements').PageNumberTo</data></inline>
. The financial reporting framework that has been applied in their preparation is applicable law and <ws /><inline condition="FRSSE = true">the Financial Reporting Standard for Smaller Entitites (Effective April 2008)</inline><inline condition="FRSSE  =  false">United Kingdom Accounting Standards</inline><ws /> (United Kingdom Generally Accepted Accounting Practice<inline condition="FRSSE  =  true"><ws /> applicable to Smaller Entities</inline>
).</para>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Bannerman paragraph" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="false" enabled="Always" section-name="BannermanParagraph" page-break-before="False" keep-with-next-strength="0" template-guid="5123b2ad-d61a-4825-9622-63e671e9177c">
				<template><add-to-body>
  <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">This report is made solely to the company’s members, as a body, in accordance with Chapter 3 of Part 16 of the Companies Act 2006. Our audit work has been undertaken so that we might state to the company’s members those matters we are required to state to them in an auditor’s report and for no other purpose. To the fullest extent permitted by law, we do not accept or assume responsibility to anyone other than the company and the company’s members as a body, for our audit work, for this report, or for the opinions we have formed.</para>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Respective responsibilities of directors and auditors" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="AuditReportRespectiveResponsibilities" page-break-before="False" keep-with-next-strength="0" template-guid="508b26aa-01ef-44aa-8918-a2f5c63cd786">
				<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data>report.Sections.ActiveSection.Description</data>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-aurep:StatementResponsibilities" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">As explained more fully in the <ws /><inline condition="report.GetSection('DirectorsResponsibilities') != null"><data>report.GetSection('DirectorsResponsibilities').Description</data></inline><ws /> (set out on page <ws /><inline condition="report.GetSection('DirectorsResponsibilities')!=null"><data>report.GetSection('DirectorsResponsibilities').PageNumberFrom</data></inline>
), the <ws /><inline condition="DirectorsActiveAtFinalisationCount  !=  1">directors are</inline><inline condition="DirectorsActiveAtFinalisationCount  =1  ">director is</inline><ws /> responsible for the preparation of the financial statements and for being satisfied that they give a true and fair view. Our responsibility is to audit the financial statements in accordance with applicable law and International Standards on Auditing (UK and Ireland). Those standards require us to comply with the Auditing Practices Board’s (APB’s) Ethical Standards for Auditors<inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AuditorsReport|RelevantCircumstances|RelevantCircumstances|RelevantCircumstances|Current Period&quot;)[0].HasValue&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;(FRSSE = true)">, including "APB Ethical Standard - Provisions Available for Small Entities (Revised)", in the circumstances set out in note <ws /><inline condition="report.GetSection('APBEthicalStandardsRelevantCircumstances') != null"><data>report.GetSection('APBEthicalStandardsRelevantCircumstances').QualifiedSectionNumber</data></inline><ws /> to the financial statements</inline>
.</para>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Scope of the audit of the financial statements" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="ScopeOfTheAudit" page-break-before="False" keep-with-next-strength="0" template-guid="75bb564d-3c72-4913-ba15-3103768d8c46">
				<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data>report.Sections.ActiveSection.Description</data>
  </para>
</add-to-body></template>
				<report-template version="12" name="Scope (paragraph)" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="false" enabled="Always" section-name="ScopeParagraph" page-break-before="False" keep-with-next-strength="0" template-guid="506d2a95-e161-491a-b6cc-1ccd40ed18c2">
					<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-aurep:StatementOnScopeAuditReport" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">An audit involves obtaining evidence about the amounts and disclosures in the financial statements sufficient to give reasonable assurance that the financial statements are free from material misstatement, whether caused by fraud or error. This includes an assessment of: whether the accounting policies are appropriate to the company’s circumstances and have been consistently applied and adequately disclosed; the reasonableness of significant accounting estimates made by the directors; and the overall presentation of the financial statements.</para>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="Scope (web reference)" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="false" enabled="Never" section-name="ScopeWebReference" page-break-before="False" keep-with-next-strength="0" template-guid="02345c10-7a80-4376-83f7-987cb8c58bd0">
					<template><add-to-body>
  <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">A description of the scope of an audit of financial statements is provided on the APB’s web-site at www.frc.org.uk/apb/scope/UKNP.</para>
</add-to-body></template>
				</report-template>
			</report-template>
			<report-template version="12" name="Opinion" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="Opinion" page-break-before="False" keep-with-next-strength="0" template-guid="6df2fe3f-56bf-4e24-b7f1-bfd2990161fc">
				<template><add-to-body>
</add-to-body></template>
				<report-template version="12" name="Opinion on the financial statements" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AuditorsReport|Audit|Qualifiedopinion|Qualifiedopinion|Current Period&quot;)[0].HasValue = false) and (reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AuditorsReport|Audit|Disclaimer|Disclaimer|Current Period&quot;)[0].HasValue =false) and( reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AuditorsReport|Audit|AdverseOpinion|AdverseOpinion|Current Period&quot;)[0].HasValue=false)" enabled="Conditional" section-name="UnqualifiedOpinion" page-break-before="False" keep-with-next-strength="0" template-guid="640ffd06-454f-43f2-8fdb-bb6138069c13">
					<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data>report.Sections.ActiveSection.Description</data>
  </para>
  <section xbrl-concept="uk-aurep:OpinionAuditorsOnEntity" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
    <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">In our opinion the financial statements:</para>
    <table>
      <column-details column-number="1" width="5mm" align="top-left" />
      <table-row>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">•
        </para>
        </table-cell>
        <table-cell>
          <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">give a true and fair view of the state of the company's affairs as at <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data><ws /> and of its  <ws /><inline condition="reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.AllCategoriesRoot,'Profit'),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero &lt; 0">profit</inline><inline condition="reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.AllCategoriesRoot,'Profit'),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero &gt; 0">loss</inline><inline condition="reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.AllCategoriesRoot,'Profit'),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero = 0">results</inline><ws /> for the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> then ended;</para>
        </table-cell>
      </table-row>
      <table-row>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
	•
</para>
        </table-cell>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">have been properly prepared in accordance with United Kingdom Generally Accepted Accounting Practice<inline condition="FRSSE = true" para-alignment="Left"><inline><ws /> applicable to smaller entities</inline></inline>; and</para>
        </table-cell>
      </table-row>
      <table-row>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
	•
</para>
        </table-cell>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">have been prepared in accordance with the requirements of the Companies Act 2006.</para>
        </table-cell>
      </table-row>
    </table>
  </section>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="Qualified opinion on the financial statements" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AuditorsReport|Audit|QualifiedOpinion|QualifiedOpinion|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="QualifiedOpinion" page-break-before="False" keep-with-next-strength="0" template-guid="d22d8275-fc23-4d2c-972d-7665abf96ee5">
					<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data>report.Sections.ActiveSection.Description</data>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline xbrl-concept="uk-aurep:StatementOnReasonsForAnyQualificationOpinion" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
      <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|AuditorsReport|Audit|QualifiedOpinion|QualifiedOpinion|Current Period")[0]</data>
    </inline>
  </para>
  <section xbrl-concept="uk-aurep:OpinionAuditorsOnEntity" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
    <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Except for the effects of the information given above, in our opinion the financial statements:</para>
    <table>
      <column-details column-number="1" width="5mm" align="top-left" />
      <table-row>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">•
        </para>
        </table-cell>
        <table-cell>
          <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">give a true and fair view of the state of the company's affairs as at <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data><ws /> and of its  <ws /><inline condition="reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.AllCategoriesRoot,'Profit'),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero &lt; 0">profit</inline><inline condition="reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.AllCategoriesRoot,'Profit'),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero &gt; 0">loss</inline><inline condition="reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.AllCategoriesRoot,'Profit'),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero = 0">results</inline><ws /> for the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> then ended;</para>
        </table-cell>
      </table-row>
      <table-row>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
	•
</para>
        </table-cell>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">have been properly prepared in accordance with United Kingdom Generally Accepted Accounting Practice<inline condition="FRSSE = true" para-alignment="Left"><inline><ws /> applicable to smaller entities</inline></inline>; and</para>
        </table-cell>
      </table-row>
      <table-row>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
	•
</para>
        </table-cell>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">have been prepared in accordance with the requirements of the Companies Act 2006.</para>
        </table-cell>
      </table-row>
    </table>
  </section>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="Disclaimer on view given by the financial statements" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AuditorsReport|Audit|Disclaimer|Disclaimer|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="DisclaimerOfOpinion" page-break-before="False" keep-with-next-strength="0" template-guid="e055e8d5-ed5f-4d6e-a087-668a0b9c9387">
					<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data>report.Sections.ActiveSection.Description</data>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|AuditorsReport|Audit|Disclaimer|Disclaimer|Current Period")[0]</data>
  </para>
  <section xbrl-concept="uk-aurep:OpinionAuditorsOnEntity" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
    <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">

Because of the possible effect to the financial statements of the above we are unable to form an opinion as to whether the financial statements:</para>
    <table>
      <column-details column-number="1" width="5mm" align="top-left" />
      <table-row>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">•
        </para>
        </table-cell>
        <table-cell>
          <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">give a true and fair view of the state of the company's affairs as at <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data><ws /> and of its  <ws /><inline condition="reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.AllCategoriesRoot,'Profit'),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero &lt; 0">profit</inline><inline condition="reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.AllCategoriesRoot,'Profit'),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero &gt; 0">loss</inline><inline condition="reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.AllCategoriesRoot,'Profit'),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero = 0">results</inline><ws /> for the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> then ended;</para>
        </table-cell>
      </table-row>
      <table-row>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
	•
</para>
        </table-cell>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">have been properly prepared in accordance with United Kingdom Generally Accepted Accounting Practice<inline condition="FRSSE = true" para-alignment="Left"><inline><ws /> applicable to smaller entities</inline></inline>; and</para>
        </table-cell>
      </table-row>
      <table-row>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
	•
</para>
        </table-cell>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">have been prepared in accordance with the requirements of the Companies Act 2006.</para>
        </table-cell>
      </table-row>
    </table>
  </section>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="Opinion points" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AuditorsReport|Audit|AdverseOpinion|AdverseOpinion|Current Period&quot;)[0].HasValue = false" enabled="Never" section-name="OpinonPoints" page-break-before="False" keep-with-next-strength="0" template-guid="f9032661-bb59-4e92-aad7-f40ecaf08133">
					<template><add-to-body>
  <table>
    <column-details column-number="1" width="5mm" align="top-left" />
    <table-row>
      <table-cell>
        <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">•
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">give a true and fair view of the state of the company's affairs as at <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data><ws /> and of its  <ws /><inline condition="reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.AllCategoriesRoot,'Profit'),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero &lt; 0">profit</inline><inline condition="reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.AllCategoriesRoot,'Profit'),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero &gt; 0">loss</inline><inline condition="reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.AllCategoriesRoot,'Profit'),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero = 0">results</inline><ws /> for the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> then ended;</para>
      </table-cell>
    </table-row>
    <table-row>
      <table-cell>
        <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
	•
</para>
      </table-cell>
      <table-cell>
        <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">have been properly prepared in accordance with United Kingdom Generally Accepted Accounting Practice<inline condition="FRSSE = true" para-alignment="Left"><inline><ws /> applicable to smaller entities</inline></inline>; and</para>
      </table-cell>
    </table-row>
    <table-row>
      <table-cell>
        <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
	•
</para>
      </table-cell>
      <table-cell>
        <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">have been prepared in accordance with the requirements of the Companies Act 2006.</para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="Adverse opinion on the financial statements " include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AuditorsReport|Audit|AdverseOpinion|AdverseOpinion|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="AdverseOpinon" page-break-before="False" keep-with-next-strength="0" template-guid="b1d99b68-fafb-4653-9245-470eb4503ef7">
					<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data>report.Sections.ActiveSection.Description</data>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|AuditorsReport|Audit|AdverseOpinion|AdverseOpinion|Current Period")[0]</data>
  </para>
  <section xbrl-concept="uk-aurep:OpinionAuditorsOnEntity" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
    <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
			
		Because of the information referred to above, in our opinion the financial statements:</para>
    <table>
      <column-details column-number="1" width="5mm" align="top-left" />
      <table-row>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">•
        </para>
        </table-cell>
        <table-cell>
          <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">do not give a true and fair view of the state of the company's affairs as at <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data><ws /> and of its <ws /><inline condition="reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.AllCategoriesRoot,'Profit'),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero &lt; 0">profit</inline><inline condition="reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.AllCategoriesRoot,'Profit'),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero &gt; 0">loss</inline><inline condition="reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.AllCategoriesRoot,'Profit'),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero = 0">results</inline><ws /> for the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> then ended;</para>
        </table-cell>
      </table-row>
      <table-row>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
	•
</para>
        </table-cell>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">have not been properly prepared in accordance with United Kingdom Generally Accepted Accounting Practice<inline condition="FRSSE = true" para-alignment="Left"><inline><ws /> applicable to smaller entities</inline></inline>; and</para>
        </table-cell>
      </table-row>
      <table-row>
      </table-row>
    </table>
    <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">In all other respects in our opinion the financial statements have been prepared in accordance with the requirements of the Companies Act 2006.</para>
  </section>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="Adverse opinion points" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AuditorsReport|Audit|AdverseOpinion|AdverseOpinion|Current Period&quot;)[0].HasValue" enabled="Never" section-name="AdverseOpinionPoints" page-break-before="False" keep-with-next-strength="0" template-guid="49f77db7-c17f-449d-875a-e3576e985fb7">
					<template><add-to-body>
  <table>
    <column-details column-number="1" width="5mm" align="top-left" />
    <table-row>
      <table-cell>
        <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">•
        </para>
      </table-cell>
      <table-cell>
        <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">do not give a true and fair view of the state of the company's affairs as at <ws /><data para-alignment="Left">reportHelper.CurrentPeriod.EndDate.Value</data><ws /> and of its profit/loss/results (CATEGORY CONDITION NEEDED) for the <ws /><data para-alignment="Left">reportHelper.CurrentPeriod.YearPeriod</data><ws /> then ended;</para>
      </table-cell>
    </table-row>
    <table-row>
      <table-cell>
        <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
	•
</para>
      </table-cell>
      <table-cell>
        <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">have not been properly prepared in accordance with United Kingdom Generally Accepted Accounting Practice<inline condition="FRSSE = true" para-alignment="Left"><inline><ws /> applicable to smaller entities</inline></inline>; and</para>
      </table-cell>
    </table-row>
    <table-row>
    </table-row>
  </table>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">In all other respects in our opinion the financial statements have been prepared in accordance with the requirements of the Companies Act 2006.</para>
</add-to-body></template>
				</report-template>
			</report-template>
			<report-template version="12" name="Emphasis of matter" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AuditorsReport|Audit|EmphasisofMatter|EmphasisOfMatter|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="AuditReportEmphasisOfMatter" page-break-before="False" keep-with-next-strength="0" template-guid="8f3e8201-2b26-4b10-acec-fccab32f5643">
				<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data>report.Sections.ActiveSection.Description</data>
  </para>
  <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-aurep:EmphasisMatterStatement" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|AuditorsReport|Audit|EmphasisOfMatter|EmphasisOfMatter|Current Period")[0]</data>
  </para>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Opinion on other matter prescribed by the Companies Act 2006" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="OpinionOnOtherCA2006Matter" page-break-before="False" keep-with-next-strength="0" template-guid="c7378c71-b0de-44c7-b88e-fb7268fbc883">
				<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data>report.Sections.ActiveSection.Description</data>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AuditorsReport|Audit|AdverseOpinion|AdverseOpinion|Current Period&quot;)[0].HasValue">Notwithstanding our adverse opinion on the financial statements, in</inline>
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AuditorsReport|Audit|Disclaimer|Disclaimer|Current Period&quot;)[0].HasValue">Notwithstanding our disclaimer of an opinion on the view given by the financial statements, in</inline>
    <inline condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AuditorsReport|Audit|AdverseOpinion|AdverseOpinion|Current Period&quot;)[0].HasValue&#xD;&#xA;&#xD;&#xA;or&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AuditorsReport|Audit|Disclaimer|Disclaimer|Current Period&quot;)[0].HasValue)&#xD;&#xA; = false">In</inline>
    <ws /> our opinion the information given in the <ws /><inline condition="report.GetSection('DirectorsReport') != null"><data>report.GetSection('DirectorsReport').Description</data></inline><ws /> for the financial <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> for which the financial statements are prepared is consistent with the financial statements.</para>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Matters on which we are required to report by exception" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="MattersRequiredToReportByException" page-break-before="False" keep-with-next-strength="0" template-guid="6b9bee88-b1c8-46a2-8f8f-08c2cd7e464a">
				<template><add-to-body>
  <section keep-with-next="1">
    <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
      Matters on which we are required to report by exception
			</para>
    <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
			We have nothing to report in respect of the following matters where the Companies Act 2006 requires us to report to you if, in our opinion:
			</para>
    <table>
      <column-details column-number="1" width="5mm" align="top-left" />
      <table-row>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
• 
</para>
        </table-cell>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
adequate accounting records have not been kept, or returns adequate for our audit have not been received from branches not visited by us; or
</para>
        </table-cell>
      </table-row>
      <table-row>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
• 
</para>
        </table-cell>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
the financial statements are not in agreement with the accounting records and returns; or
</para>
        </table-cell>
      </table-row>
      <table-row>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
• 
</para>
        </table-cell>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
certain disclosures of directors’ remuneration specified by law are not made; or
</para>
        </table-cell>
      </table-row>
      <table-row>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
• 
</para>
        </table-cell>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">we have not received all the information and explanations we require for our audit<inline condition="FRSSE = true" para-alignment="Left"><inline para-alignment="Left">; or</inline></inline><inline condition="FRSSE = false" para-alignment="Left"><inline para-alignment="Left">.</inline></inline></para>
        </table-cell>
      </table-row>
      <table-row condition="FRSSE = true">
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
• 
</para>
        </table-cell>
        <table-cell>
          <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">the directors were not entitled to prepare the financial statements and the <ws /><inline condition="report.GetSection('DirectorsReport') != null" para-alignment="Left"><data para-alignment="Left">report.GetSection('DirectorsReport').Description</data></inline><ws /> in accordance with the small companies regime.</para>
        </table-cell>
      </table-row>
    </table>
  </section>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Audit report signature" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="AuditReportSignature" page-break-before="False" keep-with-next-strength="0" template-guid="875a0dfd-5edc-421c-94e0-e177e175deb5">
				<template><add-to-body>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|Auditor')" para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <br />
    <br />
    <br />......................................
<br /><inline xbrl-concept="uk-aurep:NameSeniorStatutoryAuditor" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|Seniorstatutoryauditor|Current Period")[0]</data></inline><ws /> (Senior Statutory Auditor)
<br />For and on behalf of <ws /><inline xbrl-concept="uk-bus:NameThirdPartyAgent" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|Name|Current Period")[0]</data></inline>
, Statutory Auditors
<br /><br /><inline xbrl-concept="uk-bus:AddressLine1" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|Addressline1|Current Period")[0]</data></inline><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Auditor|Auditor|Addressline2|Current Period&quot;)[0].HasValue "><br /><inline xbrl-concept="uk-bus:AddressLine2" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|Addressline2|Current Period")[0].Value</data></inline></inline><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Auditor|Auditor|Addressline3|Current Period&quot;)[0].HasValue"><br /><inline xbrl-concept="uk-bus:AddressLine3" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|Addressline3|Current Period")[0].Value</data></inline></inline><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Auditor|Auditor|City/town|Current Period&quot;)[0].HasValue"><br /><inline xbrl-concept="uk-bus:PrincipalLocation-CityOrTown" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|CityTown|Current Period")[0].Value</data></inline></inline><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Auditor|Auditor|County/region|Current Period&quot;)[0].HasValue"><br /><inline xbrl-concept="uk-bus:CountyRegion" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|CountyRegion|Current Period")[0].Value</data></inline></inline><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;ClientSummaryTab|ClientDetails|Auditor|Auditor|Postcode|Current Period&quot;)[0].HasValue"><br /><inline xbrl-concept="uk-bus:PostalCodeZip" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|Auditor|Auditor|Postcode|Current Period")[0].Value</data></inline></inline></para>
  <para inner-top-border-clearance="5mm" para-alignment="Full" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|General|FinalisationDates')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|General|FinalisationDates|FinalisationDates|AccountantAuditor|Current Period&quot;)[0].HasValue = false">Date:.............................</inline>
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|General|FinalisationDates|FinalisationDates|AccountantAuditor|Current Period&quot;)[0].HasValue">
      <inline xbrl-concept="uk-aurep:DateAuditorsReport" xbrl-period="EndCurrentPeriod" xbrl-hypercube="uk-bus:ThirdPartyAgentsHypercube" xbrl-dimensions="uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors" xbrl-scaling="0">
        <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|General|FinalisationDates|FinalisationDates|AccountantAuditor|Current Period")[0].Value</data>
      </inline>
    </inline>
  </para>
</add-to-body></template>
			</report-template>
		</report-template>
		<report-template version="12" name="Financial Statements" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FinancialStatements" page-break-before="False" keep-with-next-strength="0" template-guid="50df3868-42f0-4ea3-a673-a1659a31cfda">
			<template><add-to-body>
</add-to-body></template>
			<report-template version="12" name="Primary statements footer" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="PrimaryStatementsFooter" page-break-before="False" keep-with-next-strength="0" template-guid="0170af94-32ec-4604-ac35-ae29d430f9cd">
				<template><add-to-body>
  <page-footer>
    <para para-alignment="Centre" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
      <inline para-alignment="Left" base-style="Page Footer">
        <inline condition="report.GetSection('Notes') != null" para-alignment="Centre">
          <inline para-alignment="Centre">The notes on</inline>
          <inline condition="report.GetSection('Notes').PageCount &gt; 1" para-alignment="Centre">
            <inline para-alignment="Centre">
              <ws /> pages <ws /></inline>
            <data para-alignment="Centre">report.GetSection('Notes').PageNumberFrom</data>
            <inline para-alignment="Centre">
              <ws /> to <ws /></inline>
            <data para-alignment="Centre">report.GetSection('Notes').PageNumberTo</data>
          </inline>
          <inline condition="report.GetSection('Notes').PageCount = 1" para-alignment="Centre">
            <inline para-alignment="Centre">
              <ws /> page <ws /></inline>
            <data para-alignment="Centre">report.GetSection('Notes').PageNumberFrom</data>
          </inline>
          <inline para-alignment="Centre">
            <ws /> form an integral part of these financial statements.</inline>
        </inline>
        <br />
        <inline para-alignment="Centre">Page <ws /></inline>
        <data para-alignment="Centre">footer.CurrentPage
	</data>
      </inline>
    </para>
  </page-footer>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Profit and Loss Account" include-in-numbering="False" include-in-contents="True" include-in-report-map="True" isdir="True" condition="true" enabled="Always" section-name="ProfitAndLossAccount" page-break-before="True" keep-with-next-strength="0" template-guid="068fb842-911f-4bab-a77b-be253a95c040">
				<template><page-layout>
</page-layout></template>
				<report-template version="12" name="Profit and loss account header" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="ProfitAndLossHeader" page-break-before="False" keep-with-next-strength="0" template-guid="a17ccce3-cc7c-45da-8816-1495fc9638aa">
					<template><add-to-body>
  <page-header>
    <para base-style="Page Header" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
      <data>reportHelper.Business.Name</data>
      <inline condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].HasValue and&#xD;&#xA;&#xD;&#xA;reportHelper.Business.Name !=&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].Value">
        <br />
        trading as <ws /><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|General|General|Tradingname|Current Period")[0]</data><inline><ws /></inline></inline>
      <br />
      <data condition="report.GetSection('ProfitAndLossAccount') != null">report.GetSection('ProfitAndLossAccount').Description</data>
      <ws /> for the <ws /><inline condition="reportHelper.CurrentPeriod.IsYear">
        Year Ended <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data></inline><inline condition="reportHelper.CurrentPeriod.IsYear=false">
       Period from <ws /><data>reportHelper.CurrentPeriod.StartDate.Value</data><ws /> to <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data></inline><inline para-alignment="left" condition="header.IsContinued" font-style="+Italic"><br />......... continued</inline></para>
  </page-header>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="Format 1 profit and loss account" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:filter[Acquisitions|Current Period&gt;0,Acquisitions|Prior Period&lt;&gt;0]&quot;,null, true).Count+reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:filter[Discontinued|Current Period&gt;0,Discontinued|Prior Period&lt;&gt;0]&quot;,null, true).Count = 0  or FRSSE = true" enabled="Conditional" section-name="Format1ProfitAndLossAccount" page-break-before="False" keep-with-next-strength="0" template-guid="2c2ab867-932f-473d-abbc-dde1349d4c56">
					<template><add-to-body>
</add-to-body></template>
					<report-template version="12" name="Format 1 profit and loss account values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="Format1ProfitAndLossAccountValues" page-break-before="False" keep-with-next-strength="0" template-guid="50519c7c-ec4c-4d53-8cf6-957b910a1653">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'ProfitAndLossAccount', reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.PrimaryStatement, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.PrimaryStatement, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableNoteReferenceColumn.Create('Note', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, '2', '22', false, '&lt;para&gt;Note&lt;/para&gt;', 'centre-bottom', 'centre-bottom')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('CurrentPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column4filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column4XBRLDimensionsSet" pre="column4.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column4XBRLHypercubeNameSet" pre="column4.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column4XBRLPeriodSet" pre="column4.SetPeriod('PriorPeriod')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Turnover', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Turnover&lt;/para&gt;', 'Turnover', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Sales&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('001-049', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:TurnoverGrossOperatingRevenue')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('CostOfSales', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Cost of sales&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cost of sales&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('050-159', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2XBRLConceptNameSet" pre="section2.SetConceptName('uk-gaap:CostSales')" />
    <var name="section2XBRLReverseSignSet" pre="section2.SetReverseSign(true)" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('GrossProfitLoss', '&lt;para&gt;Gross &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;)&lt;/data&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section3item1" pre="section3.AddTotalItem(section1)" />
    <var name="section3item2" pre="section3.AddTotalItem(section2)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:GrossProfitLoss')" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <var name="section4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('DistributionCosts', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Distribution costs&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section4subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Distribution&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('160-229', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection1subsectionitem1add" pre="section4subsection1.AddItem(section4subsection1subsectionitem1)" />
    <var name="section4subsection1add" pre="section4.AddItem(section4subsection1)" />
    <var name="section4XBRLConceptNameSet" pre="section4.SetConceptName('uk-gaap:DistributionCosts')" />
    <var name="section4XBRLReverseSignSet" pre="section4.SetReverseSign(true)" />
    <var name="section4add" pre="smartTable.AddTableBlock(section4)" />
    <var name="section5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('AdministrativeExpenses', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Administrative expenses&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section5subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Administration&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('230-399', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection1subsectionitem1add" pre="section5subsection1.AddItem(section5subsection1subsectionitem1)" />
    <var name="section5subsection1add" pre="section5.AddItem(section5subsection1)" />
    <var name="section5XBRLConceptNameSet" pre="section5.SetConceptName('uk-gaap:AdministrativeExpenses')" />
    <var name="section5XBRLReverseSignSet" pre="section5.SetReverseSign(true)" />
    <var name="section5add" pre="smartTable.AddTableBlock(section5)" />
    <var name="section6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('OtherOperatingIncome', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Other operating income&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section6subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other operating income&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section6subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('400-409', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem1add" pre="section6subsection1.AddItem(section6subsection1subsectionitem1)" />
    <var name="section6subsection1add" pre="section6.AddItem(section6subsection1)" />
    <var name="section6XBRLConceptNameSet" pre="section6.SetConceptName('uk-gaap:OtherOperatingIncome')" />
    <var name="section6add" pre="smartTable.AddTableBlock(section6)" />
    <var name="section7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('OperatingProfitLoss', '&lt;para&gt;Operating &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;)&lt;/data&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.Always, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, 'OperatingProfitLoss')" />
    <var name="section7item1" pre="section7.AddTotalItem(section3)" />
    <var name="section7item2" pre="section7.AddTotalItem(section4)" />
    <var name="section7item3" pre="section7.AddTotalItem(section5)" />
    <var name="section7item4" pre="section7.AddTotalItem(section6)" />
    <var name="section7XBRLConceptNameSet" pre="section7.SetConceptName('uk-gaap:OperatingProfitLoss')" />
    <var name="section7add" pre="smartTable.AddTableBlock(section7)" />
    <var name="section8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ExceptionaItems', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Non-operating exceptional items&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section8subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; on disposal of fixed assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section8subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('410-410', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section8subsection1subsectionitem1add" pre="section8subsection1.AddItem(section8subsection1subsectionitem1)" />
    <var name="section8subsection1XBRLConceptNameSet" pre="section8subsection1.SetConceptName('uk-gaap:GainLossFromDisposalFixedAssets')" />
    <var name="section8subsection1add" pre="section8.AddItem(section8subsection1)" />
    <var name="section8subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; on sale or termination of operations&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section8subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('411-411', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section8subsection2subsectionitem1add" pre="section8subsection2.AddItem(section8subsection2subsectionitem1)" />
    <var name="section8subsection2XBRLConceptNameSet" pre="section8subsection2.SetConceptName('uk-gaap:GainLossOnSaleOrTerminationOperations')" />
    <var name="section8subsection2add" pre="section8.AddItem(section8subsection2)" />
    <var name="section8subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Costs of reorganisation and restructuring&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section8subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('412-412', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section8subsection3subsectionitem1add" pre="section8subsection3.AddItem(section8subsection3subsectionitem1)" />
    <var name="section8subsection3XBRLConceptNameSet" pre="section8subsection3.SetConceptName('uk-gaap:CostsGainsFromFundamentalRestructuringOrReorganisation')" />
    <var name="section8subsection3XBRLReverseSignSet" pre="section8subsection3.SetReverseSign(true)" />
    <var name="section8subsection3add" pre="section8.AddItem(section8subsection3)" />
    <var name="section8subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other exceptional items&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section8subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('413-419', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section8subsection4subsectionitem1add" pre="section8subsection4.AddItem(section8subsection4subsectionitem1)" />
    <var name="section8subsection4XBRLConceptNameSet" pre="section8subsection4.SetConceptName('uk-gaap:OtherExceptionalGainLossReportedAfterOperatingProfitLoss')" />
    <var name="section8subsection4add" pre="section8.AddItem(section8subsection4)" />
    <var name="section8XBRLConceptNameSet" pre="section8.SetConceptName('uk-gaap:ExceptionalGainLossReportedAfterOperatingProfitLossSubtotal')" />
    <var name="section8add" pre="smartTable.AddTableBlock(section8)" />
    <var name="section9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('ProfitLossBeforeInterest', '&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; on ordinary activities before investment income and interest&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section9item1" pre="section9.AddTotalItem(section7)" />
    <var name="section9item2" pre="section9.AddTotalItem(section8)" />
    <var name="section9XBRLConceptNameSet" pre="section9.SetConceptName('uk-gaap:ProfitLossOnOrdinaryActivitiesBeforeFinanceChargesInterest')" />
    <var name="section9add" pre="smartTable.AddTableBlock(section9)" />
    <var name="section10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('IncomeFromSharesInGroupUndertakings', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Income from shares in group undertakings&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section10subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Income from group companies&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section10subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('420-421', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section10subsection1subsectionitem1add" pre="section10subsection1.AddItem(section10subsection1subsectionitem1)" />
    <var name="section10subsection1add" pre="section10.AddItem(section10subsection1)" />
    <var name="section10XBRLConceptNameSet" pre="section10.SetConceptName('uk-gaap:IncomeFromSharesInSubsidiariesGroupUndertakings')" />
    <var name="section10add" pre="smartTable.AddTableBlock(section10)" />
    <var name="section11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('IncomeFromParticipatingInterests', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Income from participating interests&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section11subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Income from participating interests&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section11subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('422-423', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section11subsection1subsectionitem1add" pre="section11subsection1.AddItem(section11subsection1subsectionitem1)" />
    <var name="section11subsection1add" pre="section11.AddItem(section11subsection1)" />
    <var name="section11XBRLConceptNameSet" pre="section11.SetConceptName('uk-gaap:IncomeFromOtherParticipatingInterests')" />
    <var name="section11add" pre="smartTable.AddTableBlock(section11)" />
    <var name="section12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('IncomeFromOtherFixedAssetInvestments', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Income from other fixed asset investments&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section12subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Income from other investments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section12subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('424-429', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section12subsection1subsectionitem1add" pre="section12subsection1.AddItem(section12subsection1subsectionitem1)" />
    <var name="section12subsection1add" pre="section12.AddItem(section12subsection1)" />
    <var name="section12XBRLConceptNameSet" pre="section12.SetConceptName('uk-gaap:IncomeFromOtherFixedAssetInvestments')" />
    <var name="section12add" pre="smartTable.AddTableBlock(section12)" />
    <var name="section13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('OtherInterestReceivableAndSimilarIncome', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Other interest receivable and similar income&lt;/para&gt;', 'InterestReceivable', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section13subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Interest receivable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section13subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('430-439', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section13subsection1subsectionitem1add" pre="section13subsection1.AddItem(section13subsection1subsectionitem1)" />
    <var name="section13subsection1add" pre="section13.AddItem(section13subsection1)" />
    <var name="section13subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Pension scheme finance income/costs&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section13subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('462', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section13subsection2subsectionitem1add" pre="section13subsection2.AddItem(section13subsection2subsectionitem1)" />
    <var name="section13subsection2add" pre="section13.AddItem(section13subsection2)" />
    <var name="section13XBRLConceptNameSet" pre="section13.SetConceptName('uk-gaap:OtherInterestReceivableSimilarIncome')" />
    <var name="section13add" pre="smartTable.AddTableBlock(section13)" />
    <var name="section14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('AmountsWrittenOffInvestments', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Amounts written off investments&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section14subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Written off investments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section14subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('440-441', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section14subsection1subsectionitem1add" pre="section14subsection1.AddItem(section14subsection1subsectionitem1)" />
    <var name="section14subsection1add" pre="section14.AddItem(section14subsection1)" />
    <var name="section14XBRLConceptNameSet" pre="section14.SetConceptName('uk-gaap:AmountsWrittenOffBackInvestments')" />
    <var name="section14XBRLReverseSignSet" pre="section14.SetReverseSign(true)" />
    <var name="section14add" pre="smartTable.AddTableBlock(section14)" />
    <var name="section15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('InterestPayableAndSimilarCharges', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Interest payable and similar charges&lt;/para&gt;', 'InterestPayable', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section15subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Bank interest payable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('444', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection1subsectionitem1add" pre="section15subsection1.AddItem(section15subsection1subsectionitem1)" />
    <var name="section15subsection1add" pre="section15.AddItem(section15subsection1)" />
    <var name="section15subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Bank loan interest payable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('445', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection2subsectionitem1add" pre="section15subsection2.AddItem(section15subsection2subsectionitem1)" />
    <var name="section15subsection2add" pre="section15.AddItem(section15subsection2)" />
    <var name="section15subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Preference share dividends&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('447', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection3subsectionitem1add" pre="section15subsection3.AddItem(section15subsection3subsectionitem1)" />
    <var name="section15subsection3add" pre="section15.AddItem(section15subsection3)" />
    <var name="section15subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Loan interest&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('448', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection4subsectionitem1add" pre="section15subsection4.AddItem(section15subsection4subsectionitem1)" />
    <var name="section15subsection4add" pre="section15.AddItem(section15subsection4)" />
    <var name="section15subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Operating lease interest&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('449', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection5subsectionitem1add" pre="section15subsection5.AddItem(section15subsection5subsectionitem1)" />
    <var name="section15subsection5add" pre="section15.AddItem(section15subsection5)" />
    <var name="section15subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Factoring interest&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('450', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection6subsectionitem1add" pre="section15subsection6.AddItem(section15subsection6subsectionitem1)" />
    <var name="section15subsection6add" pre="section15.AddItem(section15subsection6)" />
    <var name="section15subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other interest payable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('451', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection7subsectionitem1add" pre="section15subsection7.AddItem(section15subsection7subsectionitem1)" />
    <var name="section15subsection7add" pre="section15.AddItem(section15subsection7)" />
    <var name="section15subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other interest payable on loans under 1 year&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('452', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection8subsectionitem1add" pre="section15subsection8.AddItem(section15subsection8subsectionitem1)" />
    <var name="section15subsection8add" pre="section15.AddItem(section15subsection8)" />
    <var name="section15subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other interest payable on loans 2-5 years&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('454', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection9subsectionitem1add" pre="section15subsection9.AddItem(section15subsection9subsectionitem1)" />
    <var name="section15subsection9add" pre="section15.AddItem(section15subsection9)" />
    <var name="section15subsection10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other interest payable on loans over 5 years&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection10subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('455', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection10subsectionitem1add" pre="section15subsection10.AddItem(section15subsection10subsectionitem1)" />
    <var name="section15subsection10add" pre="section15.AddItem(section15subsection10)" />
    <var name="section15subsection11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Premium on repayment of loans&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection11subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('458', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection11subsectionitem1add" pre="section15subsection11.AddItem(section15subsection11subsectionitem1)" />
    <var name="section15subsection11add" pre="section15.AddItem(section15subsection11)" />
    <var name="section15subsection12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;(Gains)/losses on early repurchase of debt&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection12subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('461', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection12subsectionitem1add" pre="section15subsection12.AddItem(section15subsection12subsectionitem1)" />
    <var name="section15subsection12add" pre="section15.AddItem(section15subsection12)" />
    <var name="section15subsection13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Pension scheme finance income/costs&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection13subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('462', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section15subsection13subsectionitem1add" pre="section15subsection13.AddItem(section15subsection13subsectionitem1)" />
    <var name="section15subsection13add" pre="section15.AddItem(section15subsection13)" />
    <var name="section15subsection14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Group interest payable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection14subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('463-464', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection14subsectionitem1add" pre="section15subsection14.AddItem(section15subsection14subsectionitem1)" />
    <var name="section15subsection14add" pre="section15.AddItem(section15subsection14)" />
    <var name="section15subsection15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;HP and finance lease interest&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection15subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('465-469', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection15subsectionitem1add" pre="section15subsection15.AddItem(section15subsection15subsectionitem1)" />
    <var name="section15subsection15add" pre="section15.AddItem(section15subsection15)" />
    <var name="section15XBRLConceptNameSet" pre="section15.SetConceptName('uk-gaap:InterestPayableSimilarCharges')" />
    <var name="section15XBRLReverseSignSet" pre="section15.SetReverseSign(true)" />
    <var name="section15add" pre="smartTable.AddTableBlock(section15)" />
    <var name="section16" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('ProfitLossOnOrdinaryActivitiesBeforeTaxation', '&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;))&lt;/data&gt;&lt;ws/&gt; on ordinary activities before taxation&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.Always, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section16item1" pre="section16.AddTotalItem(section10)" />
    <var name="section16item2" pre="section16.AddTotalItem(section11)" />
    <var name="section16item3" pre="section16.AddTotalItem(section12)" />
    <var name="section16item4" pre="section16.AddTotalItem(section13)" />
    <var name="section16item5" pre="section16.AddTotalItem(section14)" />
    <var name="section16item6" pre="section16.AddTotalItem(section15)" />
    <var name="section16item7" pre="section16.AddTotalItem(section9)" />
    <var name="section16XBRLConceptNameSet" pre="section16.SetConceptName('uk-gaap:ProfitLossOnOrdinaryActivitiesBeforeTax')" />
    <var name="section16add" pre="smartTable.AddTableBlock(section16)" />
    <var name="section17" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('TaxOnProfitOrLossOnOrdinaryActivities', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Tax on profit or loss on ordinary activities&lt;/para&gt;', 'Taxation', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section17subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Tax&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section17subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('470-484', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section17subsection1subsectionitem1add" pre="section17subsection1.AddItem(section17subsection1subsectionitem1)" />
    <var name="section17subsection1add" pre="section17.AddItem(section17subsection1)" />
    <var name="section17XBRLConceptNameSet" pre="section17.SetConceptName('uk-gaap:TaxOnProfitOrLossOnOrdinaryActivities')" />
    <var name="section17XBRLReverseSignSet" pre="section17.SetReverseSign(true)" />
    <var name="section17add" pre="smartTable.AddTableBlock(section17)" />
    <var name="section18" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('ProfitLossForTheFinancialYearPeriod', '&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;))&lt;/data&gt;&lt;ws/&gt; for the finanical &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.Always, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section18item1" pre="section18.AddTotalItem(section16)" />
    <var name="section18item2" pre="section18.AddTotalItem(section17)" />
    <var name="section18XBRLConceptNameSet" pre="section18.SetConceptName('uk-gaap:ProfitLossForPeriod')" />
    <var name="section18add" pre="smartTable.AddTableBlock(section18)" />
    <var name="section19" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ProfitAndLossAccountSuspense', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Never, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Profit and loss account suspense&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Profit and loss account suspense&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section19subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Suspense P&amp;L&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section19subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('499-499', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section19subsection1subsectionitem1add" pre="section19subsection1.AddItem(section19subsection1subsectionitem1)" />
    <var name="section19subsection1add" pre="section19.AddItem(section19subsection1)" />
    <var name="section19add" pre="smartTable.AddTableBlock(section19)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Continuing operations statement" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="FRSSE = false" enabled="Conditional" section-name="ContinuingOperationsStatement" page-break-before="False" keep-with-next-strength="0" template-guid="1740c99a-bebf-427c-bc88-afb9163cad0a">
						<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="10mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Turnover and operating profit derive wholly from continuing operations.</para>
</add-to-body></template>
					</report-template>
				</report-template>
				<report-template version="12" name="Format 1 profit and loss (acquisitions and discontinued)" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:filter[Acquisitions|Current Period&gt;0,Acquisitions|Prior Period&lt;&gt;0]&quot;,null, true).Count+reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:filter[Discontinued|Current Period&gt;0,Discontinued|Prior Period&lt;&gt;0]&quot;,null, true).Count &gt; 0 and FRSSE = false" enabled="Conditional" section-name="Format1ProfitAndLoss(AcquisitionsAndDiscontinued)" page-break-before="False" keep-with-next-strength="0" template-guid="ca43326d-6a14-4e76-8382-43d878985409">
					<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'ProfitAndLossAccount', reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.PrimaryStatement, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.PrimaryStatement, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableNoteReferenceColumn.Create('Note', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, '2', '22', false, '&lt;para&gt;Note&lt;/para&gt;', 'centre-bottom', 'centre-bottom')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '&lt;para&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('CurrentPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column4filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column4XBRLDimensionsSet" pre="column4.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column4XBRLHypercubeNameSet" pre="column4.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column4XBRLPeriodSet" pre="column4.SetPeriod('PriorPeriod')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('TurnoverHeading', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Turnover&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', 'Turnover', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Heading)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ContinuingTurnover', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Continuing operations&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:item[0]|Continuing', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2XBRLConceptNameSet" pre="section2.SetConceptName('uk-gaap:TurnoverGrossOperatingRevenue')" />
    <var name="section2XBRLDimensionsSet" pre="section2.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:ContinuingOperationsExcludingAcquisitions')" />
    <var name="section2XBRLHypercubeNameSet" pre="section2.SetHypercubeName('uk-gaap:IncomeDataAllDimensionsHypercube')" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('AcquisitionsTurnover', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Acquisitions&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section3subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section3subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:item[0]|Acquisitions', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem1add" pre="section3subsection1.AddItem(section3subsection1subsectionitem1)" />
    <var name="section3subsection1add" pre="section3.AddItem(section3subsection1)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:TurnoverGrossOperatingRevenue')" />
    <var name="section3XBRLDimensionsSet" pre="section3.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:Acquisitions')" />
    <var name="section3XBRLHypercubeNameSet" pre="section3.SetHypercubeName('uk-gaap:IncomeDataAllDimensionsHypercube')" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <var name="section4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('TotalContinuingTurnover', '&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section4item1" pre="section4.AddTotalItem(section2)" />
    <var name="section4item2" pre="section4.AddTotalItem(section3)" />
    <var name="section4XBRLConceptNameSet" pre="section4.SetConceptName('uk-gaap:TurnoverGrossOperatingRevenue')" />
    <var name="section4XBRLDimensionsSet" pre="section4.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:ContinuingOperationsIncludingAcquisitions')" />
    <var name="section4XBRLHypercubeNameSet" pre="section4.SetHypercubeName('uk-gaap:IncomeDataAllDimensionsHypercube')" />
    <var name="section4add" pre="smartTable.AddTableBlock(section4)" />
    <var name="section5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('DiscontinuedTurnover', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Discontinued operations&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section5subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Columns|Discontinued|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection1subsectionitem1add" pre="section5subsection1.AddItem(section5subsection1subsectionitem1)" />
    <var name="section5subsection1add" pre="section5.AddItem(section5subsection1)" />
    <var name="section5XBRLConceptNameSet" pre="section5.SetConceptName('uk-gaap:TurnoverGrossOperatingRevenue')" />
    <var name="section5XBRLDimensionsSet" pre="section5.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:DiscontinuedOperations')" />
    <var name="section5XBRLHypercubeNameSet" pre="section5.SetHypercubeName('uk-gaap:IncomeDataAllDimensionsHypercube')" />
    <var name="section5add" pre="smartTable.AddTableBlock(section5)" />
    <var name="section6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('TotalTurnover', '&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section6item1" pre="section6.AddTotalItem(section1)" />
    <var name="section6item2" pre="section6.AddTotalItem(section5)" />
    <var name="section6item3" pre="section6.AddTotalItem(section4)" />
    <var name="section6XBRLConceptNameSet" pre="section6.SetConceptName('uk-gaap:TurnoverGrossOperatingRevenue')" />
    <var name="section6add" pre="smartTable.AddTableBlock(section6)" />
    <var name="section7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('CostOfSales', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Cost of sales&lt;/para&gt;', 'CostOfSalesAndOperatingExpenses', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section7subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cost of sales&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section7subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('050-159', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section7subsection1subsectionitem1add" pre="section7subsection1.AddItem(section7subsection1subsectionitem1)" />
    <var name="section7subsection1add" pre="section7.AddItem(section7subsection1)" />
    <var name="section7XBRLConceptNameSet" pre="section7.SetConceptName('uk-gaap:CostSales')" />
    <var name="section7XBRLReverseSignSet" pre="section7.SetReverseSign(true)" />
    <var name="section7add" pre="smartTable.AddTableBlock(section7)" />
    <var name="section8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('GrossProfitLoss', '&lt;para&gt;Gross &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;)&lt;/data&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section8item1" pre="section8.AddTotalItem(section7)" />
    <var name="section8item2" pre="section8.AddTotalItem(section6)" />
    <var name="section8XBRLConceptNameSet" pre="section8.SetConceptName('uk-gaap:GrossProfitLoss')" />
    <var name="section8add" pre="smartTable.AddTableBlock(section8)" />
    <var name="section9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('DistributionCosts', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Distribution costs&lt;/para&gt;', 'CostOfSalesAndOperatingExpenses', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section9subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Distribution&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section9subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('160-229', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section9subsection1subsectionitem1add" pre="section9subsection1.AddItem(section9subsection1subsectionitem1)" />
    <var name="section9subsection1add" pre="section9.AddItem(section9subsection1)" />
    <var name="section9XBRLConceptNameSet" pre="section9.SetConceptName('uk-gaap:DistributionCosts')" />
    <var name="section9XBRLReverseSignSet" pre="section9.SetReverseSign(true)" />
    <var name="section9add" pre="smartTable.AddTableBlock(section9)" />
    <var name="section10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('AdministrativeExpenses', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Administrative expenses&lt;/para&gt;', 'CostOfSalesAndOperatingExpenses', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section10subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Administration&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section10subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('230-399', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section10subsection1subsectionitem1add" pre="section10subsection1.AddItem(section10subsection1subsectionitem1)" />
    <var name="section10subsection1add" pre="section10.AddItem(section10subsection1)" />
    <var name="section10XBRLConceptNameSet" pre="section10.SetConceptName('uk-gaap:AdministrativeExpenses')" />
    <var name="section10XBRLReverseSignSet" pre="section10.SetReverseSign(true)" />
    <var name="section10add" pre="smartTable.AddTableBlock(section10)" />
    <var name="section11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('OtherOperatingIncome', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Other operating income&lt;/para&gt;', 'CostOfSalesAndOperatingExpenses', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section11subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other operating income&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section11subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('400-409', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section11subsection1subsectionitem1add" pre="section11subsection1.AddItem(section11subsection1subsectionitem1)" />
    <var name="section11subsection1add" pre="section11.AddItem(section11subsection1)" />
    <var name="section11XBRLConceptNameSet" pre="section11.SetConceptName('uk-gaap:OtherOperatingIncome')" />
    <var name="section11add" pre="smartTable.AddTableBlock(section11)" />
    <var name="section12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('OperatingProfitHeading', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Operating profit/(loss)&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', 'OperatingProfitLoss', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Heading)" />
    <var name="section12add" pre="smartTable.AddTableBlock(section12)" />
    <var name="section13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ContinuingOperatingProfit', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Continuing operations&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section13subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section13subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Columns|Continuing', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section13subsection1subsectionitem1add" pre="section13subsection1.AddItem(section13subsection1subsectionitem1)" />
    <var name="section13subsection1add" pre="section13.AddItem(section13subsection1)" />
    <var name="section13XBRLConceptNameSet" pre="section13.SetConceptName('uk-gaap:OperatingProfitLoss')" />
    <var name="section13XBRLDimensionsSet" pre="section13.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:ContinuingOperationsExcludingAcquisitions')" />
    <var name="section13XBRLHypercubeNameSet" pre="section13.SetHypercubeName('uk-gaap:IncomeDataAllDimensionsHypercube')" />
    <var name="section13add" pre="smartTable.AddTableBlock(section13)" />
    <var name="section14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('AcquisitionsOperatingProfit', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Acquisitions&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section14subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section14subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Columns|Acquisitions', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section14subsection1subsectionitem1add" pre="section14subsection1.AddItem(section14subsection1subsectionitem1)" />
    <var name="section14subsection1add" pre="section14.AddItem(section14subsection1)" />
    <var name="section14XBRLConceptNameSet" pre="section14.SetConceptName('uk-gaap:OperatingProfitLoss')" />
    <var name="section14XBRLDimensionsSet" pre="section14.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:Acquisitions')" />
    <var name="section14XBRLHypercubeNameSet" pre="section14.SetHypercubeName('uk-gaap:IncomeDataAllDimensionsHypercube')" />
    <var name="section14add" pre="smartTable.AddTableBlock(section14)" />
    <var name="section15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('ContinuingAndAcquisitionsOperatingProfit', '&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section15item1" pre="section15.AddTotalItem(section12)" />
    <var name="section15item2" pre="section15.AddTotalItem(section13)" />
    <var name="section15item3" pre="section15.AddTotalItem(section14)" />
    <var name="section15XBRLConceptNameSet" pre="section15.SetConceptName('uk-gaap:OperatingProfitLoss')" />
    <var name="section15XBRLDimensionsSet" pre="section15.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:ContinuingOperationsIncludingAcquisitions')" />
    <var name="section15XBRLHypercubeNameSet" pre="section15.SetHypercubeName('uk-gaap:IncomeDataAllDimensionsHypercube')" />
    <var name="section15add" pre="smartTable.AddTableBlock(section15)" />
    <var name="section16" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('DiscontinuedOperatingProft', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Discontinued operations&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section16subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section16subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Columns|Discontinued', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section16subsection1subsectionitem1add" pre="section16subsection1.AddItem(section16subsection1subsectionitem1)" />
    <var name="section16subsection1add" pre="section16.AddItem(section16subsection1)" />
    <var name="section16XBRLConceptNameSet" pre="section16.SetConceptName('uk-gaap:OperatingProfitLoss')" />
    <var name="section16XBRLDimensionsSet" pre="section16.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:DiscontinuedOperations')" />
    <var name="section16XBRLHypercubeNameSet" pre="section16.SetHypercubeName('uk-gaap:IncomeDataAllDimensionsHypercube')" />
    <var name="section16add" pre="smartTable.AddTableBlock(section16)" />
    <var name="section17" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ReversedContinuingDiscontinuedOperatingProfit', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Never, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;ContinuingDiscontinuedOperatingProfit&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section17subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Sales&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section17subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('001-049', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section17subsection1subsectionitem1add" pre="section17subsection1.AddItem(section17subsection1subsectionitem1)" />
    <var name="section17subsection1add" pre="section17.AddItem(section17subsection1)" />
    <var name="section17subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cost of sales&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section17subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('050-159', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section17subsection2subsectionitem1add" pre="section17subsection2.AddItem(section17subsection2subsectionitem1)" />
    <var name="section17subsection2add" pre="section17.AddItem(section17subsection2)" />
    <var name="section17subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Distribution&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section17subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('160-229', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section17subsection3subsectionitem1add" pre="section17subsection3.AddItem(section17subsection3subsectionitem1)" />
    <var name="section17subsection3add" pre="section17.AddItem(section17subsection3)" />
    <var name="section17subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Administration&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section17subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('230-399', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section17subsection4subsectionitem1add" pre="section17subsection4.AddItem(section17subsection4subsectionitem1)" />
    <var name="section17subsection4add" pre="section17.AddItem(section17subsection4)" />
    <var name="section17subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other operating income&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section17subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('410-419', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section17subsection5subsectionitem1add" pre="section17subsection5.AddItem(section17subsection5subsectionitem1)" />
    <var name="section17subsection5add" pre="section17.AddItem(section17subsection5)" />
    <var name="section17add" pre="smartTable.AddTableBlock(section17)" />
    <var name="section18" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('OperatingProfitLoss', '&lt;para&gt;Operating &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.Always, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section18item1" pre="section18.AddTotalItem(section8)" />
    <var name="section18item2" pre="section18.AddTotalItem(section9)" />
    <var name="section18item3" pre="section18.AddTotalItem(section10)" />
    <var name="section18item4" pre="section18.AddTotalItem(section11)" />
    <var name="section18item5" pre="section18.AddTotalItem(section17)" />
    <var name="section18item6" pre="section18.AddTotalItem(section16)" />
    <var name="section18item7" pre="section18.AddTotalItem(section15)" />
    <var name="section18XBRLConceptNameSet" pre="section18.SetConceptName('uk-gaap:OperatingProfitLoss')" />
    <var name="section18add" pre="smartTable.AddTableBlock(section18)" />
    <var name="section19" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ProfitLossOnDisposalOfFixedAssetsContinuing', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; on disposal of fixed assets - continuing operations&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section19subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; on disposal of fixed assets - continuing operations&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section19subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('410.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section19subsection1subsectionitem1add" pre="section19subsection1.AddItem(section19subsection1subsectionitem1)" />
    <var name="section19subsection1add" pre="section19.AddItem(section19subsection1)" />
    <var name="section19XBRLConceptNameSet" pre="section19.SetConceptName('uk-gaap:GainLossFromDisposalFixedAssets')" />
    <var name="section19XBRLDimensionsSet" pre="section19.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:ContinuingOperationsExcludingAcquisitions')" />
    <var name="section19XBRLHypercubeNameSet" pre="section19.SetHypercubeName('uk-gaap:IncomeDataAllDimensionsHypercube')" />
    <var name="section19add" pre="smartTable.AddTableBlock(section19)" />
    <var name="section20" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ProfitLossOnDisposalOfFixedAssetsAcquisitions', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; on disposal of fixed assets - acquisitions&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section20subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; on disposal of fixed assets - acquisitions&#xD;&#xA;&lt;br/&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section20subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('410.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section20subsection1subsectionitem1add" pre="section20subsection1.AddItem(section20subsection1subsectionitem1)" />
    <var name="section20subsection1add" pre="section20.AddItem(section20subsection1)" />
    <var name="section20XBRLConceptNameSet" pre="section20.SetConceptName('uk-gaap:GainLossFromDisposalFixedAssets')" />
    <var name="section20XBRLDimensionsSet" pre="section20.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:Acquisitions')" />
    <var name="section20XBRLHypercubeNameSet" pre="section20.SetHypercubeName('uk-gaap:IncomeDataAllDimensionsHypercube')" />
    <var name="section20add" pre="smartTable.AddTableBlock(section20)" />
    <var name="section21" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('ProfitLossOnDisposalOfFixedAssetsContinuingAndAcquisitions', '&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section21item1" pre="section21.AddTotalItem(section19)" />
    <var name="section21item2" pre="section21.AddTotalItem(section20)" />
    <var name="section21XBRLConceptNameSet" pre="section21.SetConceptName('uk-gaap:GainLossFromDisposalFixedAssets')" />
    <var name="section21XBRLDimensionsSet" pre="section21.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:ContinuingOperationsIncludingAcquisitions')" />
    <var name="section21XBRLHypercubeNameSet" pre="section21.SetHypercubeName('uk-gaap:IncomeDataAllDimensionsHypercube')" />
    <var name="section21add" pre="smartTable.AddTableBlock(section21)" />
    <var name="section22" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ProfitLossOnDisposalOfFixedAssetsDiscontinued', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; on disposal of fixed assets - discontinued operations&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section22subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; on disposal of fixed assets - discontinued operations&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section22subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('410.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section22subsection1subsectionitem1add" pre="section22subsection1.AddItem(section22subsection1subsectionitem1)" />
    <var name="section22subsection1add" pre="section22.AddItem(section22subsection1)" />
    <var name="section22XBRLConceptNameSet" pre="section22.SetConceptName('uk-gaap:GainLossFromDisposalFixedAssets')" />
    <var name="section22XBRLDimensionsSet" pre="section22.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:DiscontinuedOperations')" />
    <var name="section22XBRLHypercubeNameSet" pre="section22.SetHypercubeName('uk-gaap:IncomeDataAllDimensionsHypercube')" />
    <var name="section22add" pre="smartTable.AddTableBlock(section22)" />
    <var name="section23" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('TotalProfitLossOnDisposalOfFixedAssets', '&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section23item1" pre="section23.AddTotalItem(section22)" />
    <var name="section23item2" pre="section23.AddTotalItem(section21)" />
    <var name="section23XBRLConceptNameSet" pre="section23.SetConceptName('uk-gaap:GainLossFromDisposalFixedAssets')" />
    <var name="section23add" pre="smartTable.AddTableBlock(section23)" />
    <var name="section24" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ReorganisingangAndRestructuring', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section24subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Costs of reorganisation and restructuring - continuing operations&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section24subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('412.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section24subsection1subsectionitem1add" pre="section24subsection1.AddItem(section24subsection1subsectionitem1)" />
    <var name="section24subsection1XBRLConceptNameSet" pre="section24subsection1.SetConceptName('uk-gaap:CostsGainsFromFundamentalRestructuringOrReorganisation')" />
    <var name="section24subsection1XBRLDimensionsSet" pre="section24subsection1.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:ContinuingOperationsIncludingAcquisitions')" />
    <var name="section24subsection1XBRLHypercubeNameSet" pre="section24subsection1.SetHypercubeName('uk-gaap:IncomeDataAllDimensionsHypercube')" />
    <var name="section24subsection1XBRLReverseSignSet" pre="section24subsection1.SetReverseSign(true)" />
    <var name="section24subsection1add" pre="section24.AddItem(section24subsection1)" />
    <var name="section24subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Costs of reorganisation and restructuring - discontinued operations&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section24subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('412.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section24subsection2subsectionitem1add" pre="section24subsection2.AddItem(section24subsection2subsectionitem1)" />
    <var name="section24subsection2XBRLConceptNameSet" pre="section24subsection2.SetConceptName('uk-gaap:CostsGainsFromFundamentalRestructuringOrReorganisation')" />
    <var name="section24subsection2XBRLDimensionsSet" pre="section24subsection2.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:DiscontinuedOperations')" />
    <var name="section24subsection2XBRLHypercubeNameSet" pre="section24subsection2.SetHypercubeName('uk-gaap:IncomeDataAllDimensionsHypercube')" />
    <var name="section24subsection2XBRLReverseSignSet" pre="section24subsection2.SetReverseSign(true)" />
    <var name="section24subsection2add" pre="section24.AddItem(section24subsection2)" />
    <var name="section24XBRLConceptNameSet" pre="section24.SetConceptName('uk-gaap:CostsGainsFromFundamentalRestructuringOrReorganisation')" />
    <var name="section24XBRLReverseSignSet" pre="section24.SetReverseSign(true)" />
    <var name="section24add" pre="smartTable.AddTableBlock(section24)" />
    <var name="section25" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ProfitLossOnTerminationOfOperation', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section25subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; on operations to be discontinued - continuing operations&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section25subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('411.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section25subsection1subsectionitem1add" pre="section25subsection1.AddItem(section25subsection1subsectionitem1)" />
    <var name="section25subsection1XBRLConceptNameSet" pre="section25subsection1.SetConceptName('uk-gaap:GainLossOnSaleOrTerminationOperations')" />
    <var name="section25subsection1XBRLDimensionsSet" pre="section25subsection1.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:ContinuingOperationsIncludingAcquisitions')" />
    <var name="section25subsection1XBRLHypercubeNameSet" pre="section25subsection1.SetHypercubeName('uk-gaap:IncomeDataAllDimensionsHypercube')" />
    <var name="section25subsection1add" pre="section25.AddItem(section25subsection1)" />
    <var name="section25subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; on sale or termination of operations - discontinued operations&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section25subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('411.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section25subsection2subsectionitem1add" pre="section25subsection2.AddItem(section25subsection2subsectionitem1)" />
    <var name="section25subsection2XBRLConceptNameSet" pre="section25subsection2.SetConceptName('uk-gaap:GainLossOnSaleOrTerminationOperations')" />
    <var name="section25subsection2XBRLDimensionsSet" pre="section25subsection2.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:DiscontinuedOperations')" />
    <var name="section25subsection2XBRLHypercubeNameSet" pre="section25subsection2.SetHypercubeName('uk-gaap:IncomeDataAllDimensionsHypercube')" />
    <var name="section25subsection2add" pre="section25.AddItem(section25subsection2)" />
    <var name="section25XBRLConceptNameSet" pre="section25.SetConceptName('uk-gaap:GainLossOnSaleOrTerminationOperations')" />
    <var name="section25add" pre="smartTable.AddTableBlock(section25)" />
    <var name="section26" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('OtherExceptionalItems', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Other exceptional items - continuing operations&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section26subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other exceptional&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section26subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('413-419', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section26subsection1subsectionitem1add" pre="section26subsection1.AddItem(section26subsection1subsectionitem1)" />
    <var name="section26subsection1add" pre="section26.AddItem(section26subsection1)" />
    <var name="section26XBRLConceptNameSet" pre="section26.SetConceptName('uk-gaap:OtherExceptionalGainLossReportedAfterOperatingProfitLoss')" />
    <var name="section26add" pre="smartTable.AddTableBlock(section26)" />
    <var name="section27" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('TotalExceptionalItems', '&lt;para&gt;Non-operating exceptional items&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section27item1" pre="section27.AddTotalItem(section23)" />
    <var name="section27item2" pre="section27.AddTotalItem(section25)" />
    <var name="section27item3" pre="section27.AddTotalItem(section24)" />
    <var name="section27item4" pre="section27.AddTotalItem(section26)" />
    <var name="section27XBRLConceptNameSet" pre="section27.SetConceptName('uk-gaap:ExceptionalGainLossReportedAfterOperatingProfitLossSubtotal')" />
    <var name="section27add" pre="smartTable.AddTableBlock(section27)" />
    <var name="section28" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('ProfitBeforeInterest', '&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; on ordinary activities before investment income and interest&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section28item1" pre="section28.AddTotalItem(section18)" />
    <var name="section28item2" pre="section28.AddTotalItem(section27)" />
    <var name="section28XBRLConceptNameSet" pre="section28.SetConceptName('uk-gaap:ProfitLossOnOrdinaryActivitiesBeforeFinanceChargesInterest')" />
    <var name="section28add" pre="smartTable.AddTableBlock(section28)" />
    <var name="section29" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('IncomeFromSharesInGroupUndertakings', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Income from shares in group undertakings&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section29subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Income from group companies&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section29subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('420-421', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section29subsection1subsectionitem1add" pre="section29subsection1.AddItem(section29subsection1subsectionitem1)" />
    <var name="section29subsection1add" pre="section29.AddItem(section29subsection1)" />
    <var name="section29XBRLConceptNameSet" pre="section29.SetConceptName('uk-gaap:IncomeFromSharesInSubsidiariesGroupUndertakings')" />
    <var name="section29add" pre="smartTable.AddTableBlock(section29)" />
    <var name="section30" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('IncomeFromParticipatingInterests', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Income from participating interests&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section30subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Income from participating interests&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section30subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('422-423', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section30subsection1subsectionitem1add" pre="section30subsection1.AddItem(section30subsection1subsectionitem1)" />
    <var name="section30subsection1add" pre="section30.AddItem(section30subsection1)" />
    <var name="section30XBRLConceptNameSet" pre="section30.SetConceptName('uk-gaap:IncomeFromOtherParticipatingInterests')" />
    <var name="section30add" pre="smartTable.AddTableBlock(section30)" />
    <var name="section31" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('IncomeFromOtherFixedAssetInvestments', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Income from other fixed asset investments&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section31subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Income from other investments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section31subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('424-429', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section31subsection1subsectionitem1add" pre="section31subsection1.AddItem(section31subsection1subsectionitem1)" />
    <var name="section31subsection1add" pre="section31.AddItem(section31subsection1)" />
    <var name="section31XBRLConceptNameSet" pre="section31.SetConceptName('uk-gaap:IncomeFromOtherFixedAssetInvestments')" />
    <var name="section31add" pre="smartTable.AddTableBlock(section31)" />
    <var name="section32" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('OtherInterestReceivableAndSimilarIncome', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Other interest receivable and similar income&lt;/para&gt;', 'InterestReceivable', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section32subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Interest receivable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section32subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('430-439', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section32subsection1subsectionitem1add" pre="section32subsection1.AddItem(section32subsection1subsectionitem1)" />
    <var name="section32subsection1add" pre="section32.AddItem(section32subsection1)" />
    <var name="section32subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Pension scheme finance income/costs&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section32subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('462', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section32subsection2subsectionitem1add" pre="section32subsection2.AddItem(section32subsection2subsectionitem1)" />
    <var name="section32subsection2add" pre="section32.AddItem(section32subsection2)" />
    <var name="section32XBRLConceptNameSet" pre="section32.SetConceptName('uk-gaap:OtherInterestReceivableSimilarIncome')" />
    <var name="section32add" pre="smartTable.AddTableBlock(section32)" />
    <var name="section33" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('AmountsWrittenOffInvestments', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Amounts written off investments&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section33subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Written off investments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section33subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('440-441', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section33subsection1subsectionitem1add" pre="section33subsection1.AddItem(section33subsection1subsectionitem1)" />
    <var name="section33subsection1add" pre="section33.AddItem(section33subsection1)" />
    <var name="section33XBRLConceptNameSet" pre="section33.SetConceptName('uk-gaap:AmountsWrittenOffBackInvestments')" />
    <var name="section33XBRLReverseSignSet" pre="section33.SetReverseSign(true)" />
    <var name="section33add" pre="smartTable.AddTableBlock(section33)" />
    <var name="section34" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('InterestPayableAndSimilarCharges', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Interest payable and similar charges&lt;/para&gt;', 'InterestPayable', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section34subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;HP and finance lease interest&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section34subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('465-469', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section34subsection1subsectionitem1add" pre="section34subsection1.AddItem(section34subsection1subsectionitem1)" />
    <var name="section34subsection1add" pre="section34.AddItem(section34subsection1)" />
    <var name="section34subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Group interest payable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section34subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('463-464', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section34subsection2subsectionitem1add" pre="section34subsection2.AddItem(section34subsection2subsectionitem1)" />
    <var name="section34subsection2add" pre="section34.AddItem(section34subsection2)" />
    <var name="section34subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other interest payable on loans over 5 years&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section34subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('455', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section34subsection3subsectionitem1add" pre="section34subsection3.AddItem(section34subsection3subsectionitem1)" />
    <var name="section34subsection3add" pre="section34.AddItem(section34subsection3)" />
    <var name="section34subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other interest payable on loans 2-5 years&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section34subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('454', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section34subsection4subsectionitem1add" pre="section34subsection4.AddItem(section34subsection4subsectionitem1)" />
    <var name="section34subsection4add" pre="section34.AddItem(section34subsection4)" />
    <var name="section34subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Premium on repayment of loans&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section34subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('458', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section34subsection5subsectionitem1add" pre="section34subsection5.AddItem(section34subsection5subsectionitem1)" />
    <var name="section34subsection5add" pre="section34.AddItem(section34subsection5)" />
    <var name="section34subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;(Gains)/losses on early repurchase of debt&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section34subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('461', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section34subsection6subsectionitem1add" pre="section34subsection6.AddItem(section34subsection6subsectionitem1)" />
    <var name="section34subsection6add" pre="section34.AddItem(section34subsection6)" />
    <var name="section34subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Bank interest payable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section34subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('444', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section34subsection7subsectionitem1add" pre="section34subsection7.AddItem(section34subsection7subsectionitem1)" />
    <var name="section34subsection7add" pre="section34.AddItem(section34subsection7)" />
    <var name="section34subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Operating lease interest&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section34subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('449', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section34subsection8subsectionitem1add" pre="section34subsection8.AddItem(section34subsection8subsectionitem1)" />
    <var name="section34subsection8add" pre="section34.AddItem(section34subsection8)" />
    <var name="section34subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other interest payable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section34subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('451', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section34subsection9subsectionitem1add" pre="section34subsection9.AddItem(section34subsection9subsectionitem1)" />
    <var name="section34subsection9add" pre="section34.AddItem(section34subsection9)" />
    <var name="section34subsection10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Pension scheme finance income/costs&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section34subsection10subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('462', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section34subsection10subsectionitem1add" pre="section34subsection10.AddItem(section34subsection10subsectionitem1)" />
    <var name="section34subsection10add" pre="section34.AddItem(section34subsection10)" />
    <var name="section34subsection11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Factoring interest&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section34subsection11subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('450', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section34subsection11subsectionitem1add" pre="section34subsection11.AddItem(section34subsection11subsectionitem1)" />
    <var name="section34subsection11add" pre="section34.AddItem(section34subsection11)" />
    <var name="section34subsection12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Preference share dividends&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section34subsection12subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('447', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section34subsection12subsectionitem1add" pre="section34subsection12.AddItem(section34subsection12subsectionitem1)" />
    <var name="section34subsection12add" pre="section34.AddItem(section34subsection12)" />
    <var name="section34subsection13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Loan interest&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section34subsection13subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('448', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section34subsection13subsectionitem1add" pre="section34subsection13.AddItem(section34subsection13subsectionitem1)" />
    <var name="section34subsection13add" pre="section34.AddItem(section34subsection13)" />
    <var name="section34subsection14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Bank loan interest payable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section34subsection14subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('445', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section34subsection14subsectionitem1add" pre="section34subsection14.AddItem(section34subsection14subsectionitem1)" />
    <var name="section34subsection14subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('452', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section34subsection14subsectionitem2add" pre="section34subsection14.AddItem(section34subsection14subsectionitem2)" />
    <var name="section34subsection14add" pre="section34.AddItem(section34subsection14)" />
    <var name="section34XBRLConceptNameSet" pre="section34.SetConceptName('uk-gaap:InterestPayableSimilarCharges')" />
    <var name="section34XBRLReverseSignSet" pre="section34.SetReverseSign(true)" />
    <var name="section34add" pre="smartTable.AddTableBlock(section34)" />
    <var name="section35" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('ProfitLossOnOrdinaryActivitiesBeforeTaxation', '&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;))&lt;/data&gt;&lt;ws/&gt; on ordinary activities before taxation&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.Always, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section35item1" pre="section35.AddTotalItem(section29)" />
    <var name="section35item2" pre="section35.AddTotalItem(section30)" />
    <var name="section35item3" pre="section35.AddTotalItem(section31)" />
    <var name="section35item4" pre="section35.AddTotalItem(section32)" />
    <var name="section35item5" pre="section35.AddTotalItem(section33)" />
    <var name="section35item6" pre="section35.AddTotalItem(section34)" />
    <var name="section35item7" pre="section35.AddTotalItem(section28)" />
    <var name="section35XBRLConceptNameSet" pre="section35.SetConceptName('uk-gaap:ProfitLossOnOrdinaryActivitiesBeforeTax')" />
    <var name="section35add" pre="smartTable.AddTableBlock(section35)" />
    <var name="section36" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('TaxOnProfitOrLossOnOrdinaryActivities', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Tax on profit or loss on ordinary activities&lt;/para&gt;', 'Taxation', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section36subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Tax&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section36subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('470-484', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section36subsection1subsectionitem1add" pre="section36subsection1.AddItem(section36subsection1subsectionitem1)" />
    <var name="section36subsection1add" pre="section36.AddItem(section36subsection1)" />
    <var name="section36XBRLConceptNameSet" pre="section36.SetConceptName('uk-gaap:TaxOnProfitOrLossOnOrdinaryActivities')" />
    <var name="section36XBRLReverseSignSet" pre="section36.SetReverseSign(true)" />
    <var name="section36add" pre="smartTable.AddTableBlock(section36)" />
    <var name="section37" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('ProfitLossForTheFinancialPeriod', '&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; for the financial &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.Always, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section37item1" pre="section37.AddTotalItem(section35)" />
    <var name="section37item2" pre="section37.AddTotalItem(section36)" />
    <var name="section37XBRLConceptNameSet" pre="section37.SetConceptName('uk-gaap:ProfitLossForPeriod')" />
    <var name="section37add" pre="smartTable.AddTableBlock(section37)" />
    <var name="section38" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ProfitAndLossAccountSuspense', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Profit and loss account suspense&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Profit and loss account suspense&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section38subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Suspense P&amp;L&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section38subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('499-499', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section38subsection1subsectionitem1add" pre="section38subsection1.AddItem(section38subsection1subsectionitem1)" />
    <var name="section38subsection1add" pre="section38.AddItem(section38subsection1)" />
    <var name="section38add" pre="smartTable.AddTableBlock(section38)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="No other gains or losses" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="OtherGainsAndLosses = false" enabled="Conditional" section-name="NoOtherGainsOrLosses" page-break-before="False" keep-with-next-strength="0" template-guid="61fe3383-15b3-4037-8fca-703fb11c4b8a">
					<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline xbrl-concept="uk-gaap:StatementThatThereWereNoGainsLossesInPeriodOtherThanThoseInProfitLossAccount" xbrl-period="CurrentPeriod">The company has no recognised gains or losses for the</inline>
    <ws />
    <data>reportHelper.CurrentPeriod.YearPeriod</data>
    <ws />
    <inline xbrl-concept="uk-gaap:StatementThatThereWereNoGainsLossesInPeriodOtherThanThoseInProfitLossAccount" xbrl-period="CurrentPeriod">other than the results above.</inline>
  </para>
</add-to-body></template>
				</report-template>
			</report-template>
			<report-template version="12" name="Statement of Total Recognised Gains and Losses" include-in-numbering="False" include-in-contents="True" include-in-report-map="True" isdir="True" condition="OtherGainsAndLosses" enabled="Conditional" section-name="STRGL" page-break-before="True" keep-with-next-strength="0" template-guid="24425aca-c4a3-44f3-b073-8868cf91e3a3">
				<template><page-layout>
</page-layout></template>
				<report-template version="12" name="STRGL header" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="STRGLHeader" page-break-before="False" keep-with-next-strength="0" template-guid="5dd569fb-eab3-42cd-a774-dd5211386a5a">
					<template><add-to-body>
  <page-header>
    <para base-style="Page Header" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
      <data>reportHelper.Business.Name</data>
      <inline condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].HasValue and&#xD;&#xA;&#xD;&#xA;reportHelper.Business.Name !=&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].Value">
        <br />
        trading as <ws /><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|General|General|Tradingname|Current Period")[0]</data><inline><ws /></inline></inline>
      <br />
      <data condition="report.GetSection('STRGL') != null">report.GetSection('STRGL').Description</data>
      <ws /> for the <ws /><inline condition="reportHelper.CurrentPeriod.IsYear">
        Year Ended <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data></inline><inline condition="reportHelper.CurrentPeriod.IsYear=false">
       Period from <ws /><data>reportHelper.CurrentPeriod.StartDate.Value</data><ws /> to <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data></inline><inline para-alignment="left" condition="header.IsContinued" font-style="+Italic"><br />......... continued</inline></para>
  </page-header>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="STRGL values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="STRGLValues" page-break-before="False" keep-with-next-strength="0" template-guid="600f5e96-86ba-42da-808c-3238e82b8e27">
					<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'STRGL', reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.PrimaryStatement, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.PrimaryStatement, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableNoteReferenceColumn.Create('Note', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, '2', '22', false, '&lt;para&gt;Note&lt;/para&gt;', 'centre-bottom', 'centre-bottom')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('CurrentPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column4filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column4XBRLDimensionsSet" pre="column4.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column4XBRLHypercubeNameSet" pre="column4.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column4XBRLPeriodSet" pre="column4.SetPeriod('PriorPeriod')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('STRGL', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Total recognised gains and losses relating to the &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;quot;profit/(loss)&amp;quot;))&#xD;&#xA;&lt;/data&gt;&lt;ws/&gt; for the finanical &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('001-049', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('050-159', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem2add" pre="section1subsection1.AddItem(section1subsection1subsectionitem2)" />
    <var name="section1subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('160-229', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem3add" pre="section1subsection1.AddItem(section1subsection1subsectionitem3)" />
    <var name="section1subsection1subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('230-399', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem4add" pre="section1subsection1.AddItem(section1subsection1subsectionitem4)" />
    <var name="section1subsection1subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('400-409', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem5add" pre="section1subsection1.AddItem(section1subsection1subsectionitem5)" />
    <var name="section1subsection1subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('410-419', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem6add" pre="section1subsection1.AddItem(section1subsection1subsectionitem6)" />
    <var name="section1subsection1subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('420-421', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem7add" pre="section1subsection1.AddItem(section1subsection1subsectionitem7)" />
    <var name="section1subsection1subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('422-423', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem8add" pre="section1subsection1.AddItem(section1subsection1subsectionitem8)" />
    <var name="section1subsection1subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('424-429', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem9add" pre="section1subsection1.AddItem(section1subsection1subsectionitem9)" />
    <var name="section1subsection1subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('430-439', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem10add" pre="section1subsection1.AddItem(section1subsection1subsectionitem10)" />
    <var name="section1subsection1subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('440-441', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem11add" pre="section1subsection1.AddItem(section1subsection1subsectionitem11)" />
    <var name="section1subsection1subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('442-469', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem12add" pre="section1subsection1.AddItem(section1subsection1subsectionitem12)" />
    <var name="section1subsection1subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('470-484', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem13add" pre="section1subsection1.AddItem(section1subsection1subsectionitem13)" />
    <var name="section1subsection1subsectionitem14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('485-489', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem14add" pre="section1subsection1.AddItem(section1subsection1subsectionitem14)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:ProfitLossForPeriod')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Unrealised &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;gain/(loss)&amp;quot;)&#xD;&#xA;&lt;/data&gt;&lt;ws/&gt; on trade investments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('956', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:UnrealisedGainLossOnTradeInvestmentsNotUnderFRS26')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Foreign currency translation differences&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('985', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:GainLossRecognisedFromForeignExchangeDifferencesExcludingGainsOnFinancialInstrumentsFairValueThroughProfitOrLoss')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Unrealised &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;surplus/(deficit)&amp;quot;)&#xD;&#xA;&lt;/data&gt;&lt;ws/&gt; on revaluation of properties&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('953', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('957', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem2add" pre="section1subsection4.AddItem(section1subsection4subsectionitem2)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:RevaluationSurplusInPeriod')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Actuarial &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;gain/(loss)&amp;quot;)&#xD;&#xA;&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; recognised on defined benefit pension scheme&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('987.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:ActuarialGainLossRecognisedInPensionSchemes')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Deferred tax on actuarial gain/loss recognised on defined benefit pension scheme&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('987.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:DeferredTaxArisingOnGainsLossesInPensionSchemes')" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:TotalRecognisedGainLossForPeriod')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('PPA', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Prior &lt;ws/&gt;&lt;inline condition=&quot;reportHelper.HasPriorPeriod&quot;&gt;&lt;data&gt;reportHelper.ComparativePeriod(1).YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/inline&gt;&#xD;&#xA;&lt;ws/&gt; adjustment&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Prior &lt;ws/&gt;&lt;data&gt;reportHelper.ComparativePeriod(1).YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; adjustment&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('981-981', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('TotalGainsAndLossesRecognisedSinceLastAnnualReport', '&lt;para&gt;Total recognised gains and losses since last annual report&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section3item1" pre="section3.AddTotalItem(section1)" />
    <var name="section3item2" pre="section3.AddTotalItem(section2)" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
				</report-template>
			</report-template>
			<report-template version="12" name="Note of Historical Cost Profits and Losses" include-in-numbering="False" include-in-contents="True" include-in-report-map="True" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|HistoricalCostDifferences|HistoricalCostDifferences|HistoricalCostDifferences|Rows|*:filter['Period'|'Current Period'&gt;0,'Period'|'Prior Period'&gt;0]&quot;,null, true).Count &gt; 0 and FRSSE = false" enabled="Conditional" section-name="HistoricalCostProfitsAndLosses" page-break-before="False" keep-with-next-strength="0" template-guid="2297d819-8826-4c60-a723-14300f0363a5">
				<template><add-to-body /></template>
				<report-template version="12" name="Historical cost profits and losses header" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="HistoricalCostProfitsAndLossesHeader" page-break-before="False" keep-with-next-strength="0" template-guid="1b136ad3-4124-47a5-9e3e-b8d1de0fa5a1">
					<template><add-to-body>
  <page-header>
    <para base-style="Page Header" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
      <data>reportHelper.Business.Name</data>
      <inline condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].HasValue and&#xD;&#xA;&#xD;&#xA;reportHelper.Business.Name !=&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].Value">
        <br />trading as <ws /><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|General|General|Tradingname|Current Period")[0]</data><ws /></inline>
      <br />
      <inline condition="report.GetSection('HistoricalCostProfitsAndLosses') != null">
        <data>report.GetSection('HistoricalCostProfitsAndLosses').Description</data>
      </inline>
      <ws /> for the <ws /><inline condition="reportHelper.CurrentPeriod.IsYear">Year Ended <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data></inline><inline condition="reportHelper.CurrentPeriod.IsYear=false">Period from <ws /><data>reportHelper.CurrentPeriod.StartDate.Value</data><ws /> to <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data></inline></para>
  </page-header>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="Historical cost profits and losses values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="HistoricalCostProfitsAndLossesValues" page-break-before="False" keep-with-next-strength="0" template-guid="3223cf49-0bf2-430c-af11-b457228996b1">
					<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'HistCosProfitsAndLosses', reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.PrimaryStatement, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.PrimaryStatement, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('HistoricalCost', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Historical cost &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;profit/(loss)&amp;quot;)&lt;/data&gt;&lt;ws/&gt; on ordinary activities before taxation&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Reported &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;profit/(loss)&amp;quot;)&#xD;&#xA;&lt;/data&gt;&lt;ws/&gt; on ordinary activities before taxation&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('PBT', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:ProfitLossOnOrdinaryActivitiesBeforeTax')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Difference between historical cost depreciation charge and the actual depreciation charge on the revalued amount&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|HistoricalCostDifferences|HistoricalCostDifferences|HistoricalCostDifferences|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:HistoricalCostDepreciationChargeLessActualDepreciationChargeCalculatedOnRevaluedAmount')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Realisation of property valuation gains of prior periods&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|HistoricalCostDifferences|HistoricalCostDifferences|HistoricalCostDifferences|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:RealisationPropertyValuationGainsPriorPeriods')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:HistoricalCostProfitLossOnOrdinaryActivitiesBeforeTaxation')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('HistoricalCostAfterTax', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Historical cost &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;profit/(loss)&amp;quot;)&lt;/data&gt;&lt;ws/&gt; for the &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&lt;ws/&gt; retained after taxation&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Profit/(loss) after tax&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('001-049', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('050-159', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem2add" pre="section2subsection1.AddItem(section2subsection1subsectionitem2)" />
    <var name="section2subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('160-229', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem3add" pre="section2subsection1.AddItem(section2subsection1subsectionitem3)" />
    <var name="section2subsection1subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('230-399', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem4add" pre="section2subsection1.AddItem(section2subsection1subsectionitem4)" />
    <var name="section2subsection1subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('400-409', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem5add" pre="section2subsection1.AddItem(section2subsection1subsectionitem5)" />
    <var name="section2subsection1subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('410-419', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem6add" pre="section2subsection1.AddItem(section2subsection1subsectionitem6)" />
    <var name="section2subsection1subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('420-421', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem7add" pre="section2subsection1.AddItem(section2subsection1subsectionitem7)" />
    <var name="section2subsection1subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('422-423', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem8add" pre="section2subsection1.AddItem(section2subsection1subsectionitem8)" />
    <var name="section2subsection1subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('424-429', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem9add" pre="section2subsection1.AddItem(section2subsection1subsectionitem9)" />
    <var name="section2subsection1subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('430-439', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem10add" pre="section2subsection1.AddItem(section2subsection1subsectionitem10)" />
    <var name="section2subsection1subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('440-441', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem11add" pre="section2subsection1.AddItem(section2subsection1subsectionitem11)" />
    <var name="section2subsection1subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('442-469', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem12add" pre="section2subsection1.AddItem(section2subsection1subsectionitem12)" />
    <var name="section2subsection1subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('470-484', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem13add" pre="section2subsection1.AddItem(section2subsection1subsectionitem13)" />
    <var name="section2subsection1subsectionitem14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('485-489', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem14add" pre="section2subsection1.AddItem(section2subsection1subsectionitem14)" />
    <var name="section2subsection1subsectionitem15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('490-499', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem15add" pre="section2subsection1.AddItem(section2subsection1subsectionitem15)" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Historical cost differences&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|HistoricalCostDifferences|HistoricalCostDifferences|HistoricalCostDifferences', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2XBRLConceptNameSet" pre="section2.SetConceptName('uk-gaap:HistoricalCostProfitLossForPeriod')" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
				</report-template>
			</report-template>
			<report-template version="12" name="Balance Sheet" include-in-numbering="False" include-in-contents="True" include-in-report-map="True" isdir="True" condition="true" enabled="Always" section-name="BalanceSheet" page-break-before="False" keep-with-next-strength="0" template-guid="d88f166c-6ad9-4128-92eb-474f5fb49fcf">
				<template><page-layout>
</page-layout></template>
				<report-template version="12" name="Balance sheet header" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="BalanceSheetHeader" page-break-before="False" keep-with-next-strength="0" template-guid="94efe990-9c94-4e92-9cab-e091049ea466">
					<template><add-to-body>
  <page-header>
    <para para-alignment="Centre" base-style="Page Header" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
      <data>reportHelper.Business.Name</data>
      <inline condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].HasValue and&#xD;&#xA;&#xD;&#xA;reportHelper.Business.Name !=&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].Value">
        <br />trading as <ws /><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|General|General|Tradingname|Current Period")[0]</data><ws /></inline>
      <br />(Registration number: <ws /><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|General|General|Registrationnumber|Current Period")[0]</data>
)
<br /><inline condition="report.GetSection('BalanceSheet') != null"><data>report.GetSection('BalanceSheet').Description</data></inline><ws /> at <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data><inline condition="header.IsContinued" font-style="+italic"><br /><inline para-alignment="Left" font-style="+italic">......... continued</inline></inline></para>
  </page-header>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="Balance sheet values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="BalanceSheetValues" page-break-before="False" keep-with-next-strength="0" template-guid="dd64a63b-2ac8-43f9-ba7d-cf7a63930212">
					<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'BalanceSheet', reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.PrimaryStatement, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.PrimaryStatement, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'top-left', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableNoteReferenceColumn.Create('Note', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, '2', '22', false, '&lt;para&gt;Note&lt;/para&gt;', 'centre-bottom', 'centre-bottom')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'top-right', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndCurrentPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column4filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column4XBRLDimensionsSet" pre="column4.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column4XBRLHypercubeNameSet" pre="column4.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column4XBRLPeriodSet" pre="column4.SetPeriod('EndPriorPeriod')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('FixedAssets', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Fixed assets&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Intangible fixed assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, 'IntangibleFixedAssets')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('500-539', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:IntangibleFixedAssets')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Tangible fixed assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, 'TangibleFixedAssets')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('540-619', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:TangibleFixedAssets')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Investments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, 'InvestmentsHeldAsFixedAssets')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('620-669', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:InvestmentsFixedAssets')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:FixedAssets')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('CurrentAssets', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Current assets&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Stocks&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, 'Stocks')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('670-679', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:StocksInventory')" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Debtors&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, 'Debtors')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('680-684', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('685-685', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem2add" pre="section2subsection2.AddItem(section2subsection2subsectionitem2)" />
    <var name="section2subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('686-686', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem3add" pre="section2subsection2.AddItem(section2subsection2subsectionitem3)" />
    <var name="section2subsection2subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('687-688', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection2subsectionitem4add" pre="section2subsection2.AddItem(section2subsection2subsectionitem4)" />
    <var name="section2subsection2subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('689-689', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection2subsectionitem5add" pre="section2subsection2.AddItem(section2subsection2subsectionitem5)" />
    <var name="section2subsection2subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('690-690', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem6add" pre="section2subsection2.AddItem(section2subsection2subsectionitem6)" />
    <var name="section2subsection2subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('691', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem7add" pre="section2subsection2.AddItem(section2subsection2subsectionitem7)" />
    <var name="section2subsection2subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('692', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection2subsectionitem8add" pre="section2subsection2.AddItem(section2subsection2subsectionitem8)" />
    <var name="section2subsection2subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('693', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem9add" pre="section2subsection2.AddItem(section2subsection2subsectionitem9)" />
    <var name="section2subsection2subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('694', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem10add" pre="section2subsection2.AddItem(section2subsection2subsectionitem10)" />
    <var name="section2subsection2subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('695', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem11add" pre="section2subsection2.AddItem(section2subsection2subsectionitem11)" />
    <var name="section2subsection2subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('700-702', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem12add" pre="section2subsection2.AddItem(section2subsection2subsectionitem12)" />
    <var name="section2subsection2subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('703-704', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection2subsectionitem13add" pre="section2subsection2.AddItem(section2subsection2subsectionitem13)" />
    <var name="section2subsection2subsectionitem14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('705-705', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection2subsectionitem14add" pre="section2subsection2.AddItem(section2subsection2subsectionitem14)" />
    <var name="section2subsection2subsectionitem15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('706', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem15add" pre="section2subsection2.AddItem(section2subsection2subsectionitem15)" />
    <var name="section2subsection2subsectionitem16" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('707', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection2subsectionitem16add" pre="section2subsection2.AddItem(section2subsection2subsectionitem16)" />
    <var name="section2subsection2subsectionitem17" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('708', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem17add" pre="section2subsection2.AddItem(section2subsection2subsectionitem17)" />
    <var name="section2subsection2subsectionitem18" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('709', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem18add" pre="section2subsection2.AddItem(section2subsection2subsectionitem18)" />
    <var name="section2subsection2subsectionitem19" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('810-811', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection2subsectionitem19add" pre="section2subsection2.AddItem(section2subsection2subsectionitem19)" />
    <var name="section2subsection2subsectionitem20" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('816-819', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection2subsectionitem20add" pre="section2subsection2.AddItem(section2subsection2subsectionitem20)" />
    <var name="section2subsection2subsectionitem21" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('696-698', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem21add" pre="section2subsection2.AddItem(section2subsection2subsectionitem21)" />
    <var name="section2subsection2subsectionitem22" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('699-699', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem22add" pre="section2subsection2.AddItem(section2subsection2subsectionitem22)" />
    <var name="section2subsection2subsectionitem23" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('830', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection2subsectionitem23add" pre="section2subsection2.AddItem(section2subsection2subsectionitem23)" />
    <var name="section2subsection2subsectionitem24" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('831', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection2subsectionitem24add" pre="section2subsection2.AddItem(section2subsection2subsectionitem24)" />
    <var name="section2subsection2subsectionitem25" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('832', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection2subsectionitem25add" pre="section2subsection2.AddItem(section2subsection2subsectionitem25)" />
    <var name="section2subsection2subsectionitem26" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('833', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection2subsectionitem26add" pre="section2subsection2.AddItem(section2subsection2subsectionitem26)" />
    <var name="section2subsection2subsectionitem27" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('834', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection2subsectionitem27add" pre="section2subsection2.AddItem(section2subsection2subsectionitem27)" />
    <var name="section2subsection2subsectionitem28" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('835', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection2subsectionitem28add" pre="section2subsection2.AddItem(section2subsection2subsectionitem28)" />
    <var name="section2subsection2subsectionitem29" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('836', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection2subsectionitem29add" pre="section2subsection2.AddItem(section2subsection2subsectionitem29)" />
    <var name="section2subsection2subsectionitem30" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('837', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection2subsectionitem30add" pre="section2subsection2.AddItem(section2subsection2subsectionitem30)" />
    <var name="section2subsection2subsectionitem31" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('838', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection2subsectionitem31add" pre="section2subsection2.AddItem(section2subsection2subsectionitem31)" />
    <var name="section2subsection2subsectionitem32" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('839', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection2subsectionitem32add" pre="section2subsection2.AddItem(section2subsection2subsectionitem32)" />
    <var name="section2subsection2subsectionitem33" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('901-901', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection2subsectionitem33add" pre="section2subsection2.AddItem(section2subsection2subsectionitem33)" />
    <var name="section2subsection2subsectionitem34" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('888', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection2subsectionitem34add" pre="section2subsection2.AddItem(section2subsection2subsectionitem34)" />
    <var name="section2subsection2subsectionitem35" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('889', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection2subsectionitem35add" pre="section2subsection2.AddItem(section2subsection2subsectionitem35)" />
    <var name="section2subsection2XBRLConceptNameSet" pre="section2subsection2.SetConceptName('uk-gaap:Debtors')" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Investments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, 'CAInvestments')" />
    <var name="section2subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('710-749', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem1add" pre="section2subsection3.AddItem(section2subsection3subsectionitem1)" />
    <var name="section2subsection3XBRLConceptNameSet" pre="section2subsection3.SetConceptName('uk-gaap:CurrentAssetInvestments')" />
    <var name="section2subsection3add" pre="section2.AddItem(section2subsection3)" />
    <var name="section2subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cash at bank and in hand&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('758', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection4subsectionitem1add" pre="section2subsection4.AddItem(section2subsection4subsectionitem1)" />
    <var name="section2subsection4subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('757', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection4subsectionitem2add" pre="section2subsection4.AddItem(section2subsection4subsectionitem2)" />
    <var name="section2subsection4subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('750', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection4subsectionitem3add" pre="section2subsection4.AddItem(section2subsection4subsectionitem3)" />
    <var name="section2subsection4subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('754', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection4subsectionitem4add" pre="section2subsection4.AddItem(section2subsection4subsectionitem4)" />
    <var name="section2subsection4subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('755', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection4subsectionitem5add" pre="section2subsection4.AddItem(section2subsection4subsectionitem5)" />
    <var name="section2subsection4subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('759', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection4subsectionitem6add" pre="section2subsection4.AddItem(section2subsection4subsectionitem6)" />
    <var name="section2subsection4subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('752', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection4subsectionitem7add" pre="section2subsection4.AddItem(section2subsection4subsectionitem7)" />
    <var name="section2subsection4subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('756', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection4subsectionitem8add" pre="section2subsection4.AddItem(section2subsection4subsectionitem8)" />
    <var name="section2subsection4subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('751', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection4subsectionitem9add" pre="section2subsection4.AddItem(section2subsection4subsectionitem9)" />
    <var name="section2subsection4subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('753', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section2subsection4subsectionitem10add" pre="section2subsection4.AddItem(section2subsection4subsectionitem10)" />
    <var name="section2subsection4subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('760-767', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection4subsectionitem11add" pre="section2subsection4.AddItem(section2subsection4subsectionitem11)" />
    <var name="section2subsection4subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('768-769', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection4subsectionitem12add" pre="section2subsection4.AddItem(section2subsection4subsectionitem12)" />
    <var name="section2subsection4XBRLConceptNameSet" pre="section2subsection4.SetConceptName('uk-gaap:CashBankInHand')" />
    <var name="section2subsection4add" pre="section2.AddItem(section2subsection4)" />
    <var name="section2XBRLConceptNameSet" pre="section2.SetConceptName('uk-gaap:CurrentAssets')" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('CreditorsUnder1Year', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Creditors: Amounts falling due within one year&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Creditors: Amounts falling due within one year&lt;/para&gt;', 'CreditorsLT1Year', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section3subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Creditors within 1yr&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section3subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('778-778', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem1add" pre="section3subsection1.AddItem(section3subsection1subsectionitem1)" />
    <var name="section3subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('779-779', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem2add" pre="section3subsection1.AddItem(section3subsection1subsectionitem2)" />
    <var name="section3subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('770-774', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem3add" pre="section3subsection1.AddItem(section3subsection1subsectionitem3)" />
    <var name="section3subsection1subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('775-777', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem4add" pre="section3subsection1.AddItem(section3subsection1subsectionitem4)" />
    <var name="section3subsection1subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('785-789', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem5add" pre="section3subsection1.AddItem(section3subsection1subsectionitem5)" />
    <var name="section3subsection1subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('790-791', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem6add" pre="section3subsection1.AddItem(section3subsection1subsectionitem6)" />
    <var name="section3subsection1subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('840-844', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem7add" pre="section3subsection1.AddItem(section3subsection1subsectionitem7)" />
    <var name="section3subsection1subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('792-792', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem8add" pre="section3subsection1.AddItem(section3subsection1subsectionitem8)" />
    <var name="section3subsection1subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('793-798', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem9add" pre="section3subsection1.AddItem(section3subsection1subsectionitem9)" />
    <var name="section3subsection1subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('799-799', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem10add" pre="section3subsection1.AddItem(section3subsection1subsectionitem10)" />
    <var name="section3subsection1subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('687-688', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section3subsection1subsectionitem11add" pre="section3subsection1.AddItem(section3subsection1subsectionitem11)" />
    <var name="section3subsection1subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('689-689', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section3subsection1subsectionitem12add" pre="section3subsection1.AddItem(section3subsection1subsectionitem12)" />
    <var name="section3subsection1subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('810-811', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section3subsection1subsectionitem13add" pre="section3subsection1.AddItem(section3subsection1subsectionitem13)" />
    <var name="section3subsection1subsectionitem14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('812-812', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem14add" pre="section3subsection1.AddItem(section3subsection1subsectionitem14)" />
    <var name="section3subsection1subsectionitem15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('813-815', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem15add" pre="section3subsection1.AddItem(section3subsection1subsectionitem15)" />
    <var name="section3subsection1subsectionitem16" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('816-819', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section3subsection1subsectionitem16add" pre="section3subsection1.AddItem(section3subsection1subsectionitem16)" />
    <var name="section3subsection1subsectionitem17" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('750', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section3subsection1subsectionitem17add" pre="section3subsection1.AddItem(section3subsection1subsectionitem17)" />
    <var name="section3subsection1subsectionitem18" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('751', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section3subsection1subsectionitem18add" pre="section3subsection1.AddItem(section3subsection1subsectionitem18)" />
    <var name="section3subsection1subsectionitem19" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('752', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section3subsection1subsectionitem19add" pre="section3subsection1.AddItem(section3subsection1subsectionitem19)" />
    <var name="section3subsection1subsectionitem20" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('753', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section3subsection1subsectionitem20add" pre="section3subsection1.AddItem(section3subsection1subsectionitem20)" />
    <var name="section3subsection1subsectionitem21" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('754', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section3subsection1subsectionitem21add" pre="section3subsection1.AddItem(section3subsection1subsectionitem21)" />
    <var name="section3subsection1subsectionitem22" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('755', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section3subsection1subsectionitem22add" pre="section3subsection1.AddItem(section3subsection1subsectionitem22)" />
    <var name="section3subsection1subsectionitem23" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('756', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section3subsection1subsectionitem23add" pre="section3subsection1.AddItem(section3subsection1subsectionitem23)" />
    <var name="section3subsection1subsectionitem24" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('757', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section3subsection1subsectionitem24add" pre="section3subsection1.AddItem(section3subsection1subsectionitem24)" />
    <var name="section3subsection1subsectionitem25" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('758', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section3subsection1subsectionitem25add" pre="section3subsection1.AddItem(section3subsection1subsectionitem25)" />
    <var name="section3subsection1subsectionitem26" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('759', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section3subsection1subsectionitem26add" pre="section3subsection1.AddItem(section3subsection1subsectionitem26)" />
    <var name="section3subsection1subsectionitem27" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('780-784', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem27add" pre="section3subsection1.AddItem(section3subsection1subsectionitem27)" />
    <var name="section3subsection1subsectionitem28" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('692', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section3subsection1subsectionitem28add" pre="section3subsection1.AddItem(section3subsection1subsectionitem28)" />
    <var name="section3subsection1subsectionitem29" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('800-806', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem29add" pre="section3subsection1.AddItem(section3subsection1subsectionitem29)" />
    <var name="section3subsection1subsectionitem30" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('820-824', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem30add" pre="section3subsection1.AddItem(section3subsection1subsectionitem30)" />
    <var name="section3subsection1subsectionitem31" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('825-829', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem31add" pre="section3subsection1.AddItem(section3subsection1subsectionitem31)" />
    <var name="section3subsection1subsectionitem32" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('807-809', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem32add" pre="section3subsection1.AddItem(section3subsection1subsectionitem32)" />
    <var name="section3subsection1subsectionitem33" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('830', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section3subsection1subsectionitem33add" pre="section3subsection1.AddItem(section3subsection1subsectionitem33)" />
    <var name="section3subsection1subsectionitem34" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('831', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section3subsection1subsectionitem34add" pre="section3subsection1.AddItem(section3subsection1subsectionitem34)" />
    <var name="section3subsection1subsectionitem35" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('832', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section3subsection1subsectionitem35add" pre="section3subsection1.AddItem(section3subsection1subsectionitem35)" />
    <var name="section3subsection1subsectionitem36" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('833', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section3subsection1subsectionitem36add" pre="section3subsection1.AddItem(section3subsection1subsectionitem36)" />
    <var name="section3subsection1subsectionitem37" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('834', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section3subsection1subsectionitem37add" pre="section3subsection1.AddItem(section3subsection1subsectionitem37)" />
    <var name="section3subsection1subsectionitem38" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('835', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section3subsection1subsectionitem38add" pre="section3subsection1.AddItem(section3subsection1subsectionitem38)" />
    <var name="section3subsection1subsectionitem39" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('836', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section3subsection1subsectionitem39add" pre="section3subsection1.AddItem(section3subsection1subsectionitem39)" />
    <var name="section3subsection1subsectionitem40" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('837', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section3subsection1subsectionitem40add" pre="section3subsection1.AddItem(section3subsection1subsectionitem40)" />
    <var name="section3subsection1subsectionitem41" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('838', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section3subsection1subsectionitem41add" pre="section3subsection1.AddItem(section3subsection1subsectionitem41)" />
    <var name="section3subsection1subsectionitem42" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('839', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section3subsection1subsectionitem42add" pre="section3subsection1.AddItem(section3subsection1subsectionitem42)" />
    <var name="section3subsection1add" pre="section3.AddItem(section3subsection1)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:CreditorsDueWithinOneYear')" />
    <var name="section3XBRLReverseSignSet" pre="section3.SetReverseSign(true)" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <var name="section4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('NetCACL', '&lt;para&gt;Net current &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;assets/(liabilities)&amp;quot;)&lt;/data&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section4item1" pre="section4.AddTotalItem(section2)" />
    <var name="section4item2" pre="section4.AddTotalItem(section3)" />
    <var name="section4XBRLConceptNameSet" pre="section4.SetConceptName('uk-gaap:NetCurrentAssetsLiabilities')" />
    <var name="section4add" pre="smartTable.AddTableBlock(section4)" />
    <var name="section5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('TALCL', '&lt;para&gt;Total assets less current liabilities&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section5item1" pre="section5.AddTotalItem(section1)" />
    <var name="section5item2" pre="section5.AddTotalItem(section4)" />
    <var name="section5XBRLConceptNameSet" pre="section5.SetConceptName('uk-gaap:TotalAssetsLessCurrentLiabilities')" />
    <var name="section5add" pre="smartTable.AddTableBlock(section5)" />
    <var name="section6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('CreditorsOver1Year', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Creditors: Amounts falling due after more than one year&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Creditors: Amounts falling due after more than one year&lt;/para&gt;', 'CreditorsGT1Year', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section6subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Creditors over 1yr&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section6subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('855-858', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem1add" pre="section6subsection1.AddItem(section6subsection1subsectionitem1)" />
    <var name="section6subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('859-859', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem2add" pre="section6subsection1.AddItem(section6subsection1subsectionitem2)" />
    <var name="section6subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('845-849', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem3add" pre="section6subsection1.AddItem(section6subsection1subsectionitem3)" />
    <var name="section6subsection1subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('850-854', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem4add" pre="section6subsection1.AddItem(section6subsection1subsectionitem4)" />
    <var name="section6subsection1subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('860-862', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem5add" pre="section6subsection1.AddItem(section6subsection1subsectionitem5)" />
    <var name="section6subsection1subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('863-865', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem6add" pre="section6subsection1.AddItem(section6subsection1subsectionitem6)" />
    <var name="section6subsection1subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('866-868', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem7add" pre="section6subsection1.AddItem(section6subsection1subsectionitem7)" />
    <var name="section6subsection1subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('869-869', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem8add" pre="section6subsection1.AddItem(section6subsection1subsectionitem8)" />
    <var name="section6subsection1subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('870-872', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem9add" pre="section6subsection1.AddItem(section6subsection1subsectionitem9)" />
    <var name="section6subsection1subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('873-875', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem10add" pre="section6subsection1.AddItem(section6subsection1subsectionitem10)" />
    <var name="section6subsection1subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('876-878', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem11add" pre="section6subsection1.AddItem(section6subsection1subsectionitem11)" />
    <var name="section6subsection1subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('879-879', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem12add" pre="section6subsection1.AddItem(section6subsection1subsectionitem12)" />
    <var name="section6subsection1subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('890-892', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem13add" pre="section6subsection1.AddItem(section6subsection1subsectionitem13)" />
    <var name="section6subsection1subsectionitem14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('893-895', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem14add" pre="section6subsection1.AddItem(section6subsection1subsectionitem14)" />
    <var name="section6subsection1subsectionitem15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('896-898', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem15add" pre="section6subsection1.AddItem(section6subsection1subsectionitem15)" />
    <var name="section6subsection1subsectionitem16" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('899-899', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem16add" pre="section6subsection1.AddItem(section6subsection1subsectionitem16)" />
    <var name="section6subsection1subsectionitem17" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('881-881', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem17add" pre="section6subsection1.AddItem(section6subsection1subsectionitem17)" />
    <var name="section6subsection1subsectionitem18" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('882-882', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem18add" pre="section6subsection1.AddItem(section6subsection1subsectionitem18)" />
    <var name="section6subsection1subsectionitem19" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('703-704', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section6subsection1subsectionitem19add" pre="section6subsection1.AddItem(section6subsection1subsectionitem19)" />
    <var name="section6subsection1subsectionitem20" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('705-705', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section6subsection1subsectionitem20add" pre="section6subsection1.AddItem(section6subsection1subsectionitem20)" />
    <var name="section6subsection1subsectionitem21" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('707', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section6subsection1subsectionitem21add" pre="section6subsection1.AddItem(section6subsection1subsectionitem21)" />
    <var name="section6subsection1subsectionitem22" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('883-884', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem22add" pre="section6subsection1.AddItem(section6subsection1subsectionitem22)" />
    <var name="section6subsection1subsectionitem23" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('885-887', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem23add" pre="section6subsection1.AddItem(section6subsection1subsectionitem23)" />
    <var name="section6subsection1subsectionitem24" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('888', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section6subsection1subsectionitem24add" pre="section6subsection1.AddItem(section6subsection1subsectionitem24)" />
    <var name="section6subsection1subsectionitem25" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('889', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section6subsection1subsectionitem25add" pre="section6subsection1.AddItem(section6subsection1subsectionitem25)" />
    <var name="section6subsection1subsectionitem26" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('880-880', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem26add" pre="section6subsection1.AddItem(section6subsection1subsectionitem26)" />
    <var name="section6subsection1add" pre="section6.AddItem(section6subsection1)" />
    <var name="section6XBRLConceptNameSet" pre="section6.SetConceptName('uk-gaap:CreditorsDueAfterOneYear')" />
    <var name="section6XBRLReverseSignSet" pre="section6.SetReverseSign(true)" />
    <var name="section6add" pre="smartTable.AddTableBlock(section6)" />
    <var name="section7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Liabilities', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Provisions for liabilities&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Provisions for liabilities&lt;/para&gt;', 'Provisions', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section7subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Pension contribution provision&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section7subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('900-900', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section7subsection1subsectionitem1add" pre="section7subsection1.AddItem(section7subsection1subsectionitem1)" />
    <var name="section7subsection1add" pre="section7.AddItem(section7subsection1)" />
    <var name="section7subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Deferred tax&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section7subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('901-901', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section7subsection2subsectionitem1add" pre="section7subsection2.AddItem(section7subsection2subsectionitem1)" />
    <var name="section7subsection2add" pre="section7.AddItem(section7subsection2)" />
    <var name="section7subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other provision&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section7subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('902-902', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section7subsection3subsectionitem1add" pre="section7subsection3.AddItem(section7subsection3subsectionitem1)" />
    <var name="section7subsection3add" pre="section7.AddItem(section7subsection3)" />
    <var name="section7XBRLConceptNameSet" pre="section7.SetConceptName('uk-gaap:ProvisionsForLiabilitiesCharges')" />
    <var name="section7XBRLReverseSignSet" pre="section7.SetReverseSign(true)" />
    <var name="section7add" pre="smartTable.AddTableBlock(section7)" />
    <var name="section8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('NetAssetsExcludingPension', '&lt;para&gt;Net &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;assets/(liabilities)&amp;quot;)&lt;/data&gt;&lt;ws/&gt; excluding pension asset/liability&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section8item1" pre="section8.AddTotalItem(section5)" />
    <var name="section8item2" pre="section8.AddTotalItem(section6)" />
    <var name="section8item3" pre="section8.AddTotalItem(section7)" />
    <var name="section8XBRLConceptNameSet" pre="section8.SetConceptName('uk-gaap:NetAssetsLiabilityExcludingPensionAssetLiability')" />
    <var name="section8add" pre="smartTable.AddTableBlock(section8)" />
    <var name="section9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Pension', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section9subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Net pension &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;asset/(liability)&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section9subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('905', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section9subsection1subsectionitem1add" pre="section9subsection1.AddItem(section9subsection1subsectionitem1)" />
    <var name="section9subsection1XBRLConceptNameSet" pre="section9subsection1.SetConceptName('uk-gaap:RetirementBenefitObligationsSurplus')" />
    <var name="section9subsection1XBRLDimensionsSet" pre="section9subsection1.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="section9subsection1XBRLHypercubeNameSet" pre="section9subsection1.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section9subsection1XBRLReverseSignSet" pre="section9subsection1.SetReverseSign(true)" />
    <var name="section9subsection1add" pre="section9.AddItem(section9subsection1)" />
    <var name="section9subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Net pension &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;asset/(liability)&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; 2&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section9subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('906', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section9subsection2subsectionitem1add" pre="section9subsection2.AddItem(section9subsection2subsectionitem1)" />
    <var name="section9subsection2XBRLConceptNameSet" pre="section9subsection2.SetConceptName('uk-gaap:RetirementBenefitObligationsSurplus')" />
    <var name="section9subsection2XBRLDimensionsSet" pre="section9subsection2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="section9subsection2XBRLHypercubeNameSet" pre="section9subsection2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section9subsection2XBRLReverseSignSet" pre="section9subsection2.SetReverseSign(true)" />
    <var name="section9subsection2add" pre="section9.AddItem(section9subsection2)" />
    <var name="section9subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Net pension &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;asset/(liability)&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; 3&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section9subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('907', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section9subsection3subsectionitem1add" pre="section9subsection3.AddItem(section9subsection3subsectionitem1)" />
    <var name="section9subsection3XBRLConceptNameSet" pre="section9subsection3.SetConceptName('uk-gaap:RetirementBenefitObligationsSurplus')" />
    <var name="section9subsection3XBRLDimensionsSet" pre="section9subsection3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="section9subsection3XBRLHypercubeNameSet" pre="section9subsection3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section9subsection3XBRLReverseSignSet" pre="section9subsection3.SetReverseSign(true)" />
    <var name="section9subsection3add" pre="section9.AddItem(section9subsection3)" />
    <var name="section9subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Net pension &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;asset/(liability)&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; 4&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section9subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('908', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section9subsection4subsectionitem1add" pre="section9subsection4.AddItem(section9subsection4subsectionitem1)" />
    <var name="section9subsection4XBRLConceptNameSet" pre="section9subsection4.SetConceptName('uk-gaap:RetirementBenefitObligationsSurplus')" />
    <var name="section9subsection4XBRLDimensionsSet" pre="section9subsection4.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="section9subsection4XBRLHypercubeNameSet" pre="section9subsection4.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section9subsection4XBRLReverseSignSet" pre="section9subsection4.SetReverseSign(true)" />
    <var name="section9subsection4add" pre="section9.AddItem(section9subsection4)" />
    <var name="section9XBRLConceptNameSet" pre="section9.SetConceptName('uk-gaap:PensionAssetLiability')" />
    <var name="section9add" pre="smartTable.AddTableBlock(section9)" />
    <var name="section10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('NetAssets', '&lt;para&gt;Net &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;assets/(liabilities)&amp;quot;)&lt;/data&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section10item1" pre="section10.AddTotalItem(section8)" />
    <var name="section10item2" pre="section10.AddTotalItem(section9)" />
    <var name="section10XBRLConceptNameSet" pre="section10.SetConceptName('uk-gaap:NetAssetsLiabilitiesIncludingPensionAssetLiability')" />
    <var name="section10add" pre="smartTable.AddTableBlock(section10)" />
    <var name="section11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('CapitalAndReserves', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Capital and reserves&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section11subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Called up share capital &lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, 'ShareCapital')" />
    <var name="section11subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('910-929', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section11subsection1subsectionitem1add" pre="section11subsection1.AddItem(section11subsection1subsectionitem1)" />
    <var name="section11subsection1XBRLConceptNameSet" pre="section11subsection1.SetConceptName('uk-gaap:CalledUpShareCapital')" />
    <var name="section11subsection1add" pre="section11.AddItem(section11subsection1)" />
    <var name="section11subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Share premium account&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, 'Reserves')" />
    <var name="section11subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('930-939', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section11subsection2subsectionitem1add" pre="section11subsection2.AddItem(section11subsection2subsectionitem1)" />
    <var name="section11subsection2XBRLConceptNameSet" pre="section11subsection2.SetConceptName('uk-gaap:SharePremiumAccount')" />
    <var name="section11subsection2add" pre="section11.AddItem(section11subsection2)" />
    <var name="section11subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Capital redemption reserve&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, 'Reserves')" />
    <var name="section11subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('940-949', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section11subsection3subsectionitem1add" pre="section11subsection3.AddItem(section11subsection3subsectionitem1)" />
    <var name="section11subsection3XBRLConceptNameSet" pre="section11subsection3.SetConceptName('uk-gaap:CapitalRedemptionReserve')" />
    <var name="section11subsection3add" pre="section11.AddItem(section11subsection3)" />
    <var name="section11subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Revaluation reserve&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, 'Reserves')" />
    <var name="section11subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('950-959', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section11subsection4subsectionitem1add" pre="section11subsection4.AddItem(section11subsection4subsectionitem1)" />
    <var name="section11subsection4XBRLConceptNameSet" pre="section11subsection4.SetConceptName('uk-gaap:RevaluationReserve')" />
    <var name="section11subsection4add" pre="section11.AddItem(section11subsection4)" />
    <var name="section11subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other reserves&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, 'Reserves')" />
    <var name="section11subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('960-969', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section11subsection5subsectionitem1add" pre="section11subsection5.AddItem(section11subsection5subsectionitem1)" />
    <var name="section11subsection5subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('970-979', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section11subsection5subsectionitem2add" pre="section11subsection5.AddItem(section11subsection5subsectionitem2)" />
    <var name="section11subsection5XBRLConceptNameSet" pre="section11subsection5.SetConceptName('uk-gaap:OtherReserves')" />
    <var name="section11subsection5add" pre="section11.AddItem(section11subsection5)" />
    <var name="section11subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Profit and loss account&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, 'Reserves')" />
    <var name="section11subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('980-998', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section11subsection6subsectionitem1add" pre="section11subsection6.AddItem(section11subsection6subsectionitem1)" />
    <var name="section11subsection6subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('001-499', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section11subsection6subsectionitem2add" pre="section11subsection6.AddItem(section11subsection6subsectionitem2)" />
    <var name="section11subsection6XBRLConceptNameSet" pre="section11subsection6.SetConceptName('uk-gaap:ProfitLossAccountReserve')" />
    <var name="section11subsection6add" pre="section11.AddItem(section11subsection6)" />
    <var name="section11XBRLConceptNameSet" pre="section11.SetConceptName('uk-gaap:ShareholderFunds')" />
    <var name="section11add" pre="smartTable.AddTableBlock(section11)" />
    <var name="section12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('BSSuspense', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Balance sheet suspense&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Balance sheet suspense&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section12subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Suspense B/S&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section12subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('999-999', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section12subsection1subsectionitem1add" pre="section12subsection1.AddItem(section12subsection1subsectionitem1)" />
    <var name="section12subsection1add" pre="section12.AddItem(section12subsection1)" />
    <var name="section12add" pre="smartTable.AddTableBlock(section12)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="Small companies exemption" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="CompanySize = 'Small' or FRSSE = true" enabled="Conditional" section-name="SmallCompaniesExemption" page-break-before="False" keep-with-next-strength="0" template-guid="64ece5c1-e14b-477b-bdce-1e4a2615a847">
					<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:AccountsHaveBeenPreparedInAccordanceWithProvisionsSmallCompaniesRegime" xbrl-period="CurrentPeriod">The financial statements have been prepared in accordance with the special provisions in Part 15 of the Companies Act 2006 relating to small companies.</para>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="Audit exemption" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|CompanyStatus|CompanyStatus|CompanyStatus|Audited|Current Period&quot;)[0].Value = false" enabled="Conditional" section-name="AuditExemption" page-break-before="False" keep-with-next-strength="0" template-guid="55b6d8f8-b574-46c7-a066-6984f7247914">
					<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:CompanyEntitledToExemptionUnderSection477CompaniesAct2006" xbrl-period="CurrentPeriod">For the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> ending <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data><ws /> the company was entitled to exemption from audit under section 477 of the Companies Act 2006 relating to small companies.</para>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="Members not required audit statement" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|CompanyStatus|CompanyStatus|CompanyStatus|Audited|Current Period&quot;)[0].Value = false" enabled="Conditional" section-name="MembersNotRequiredAnAudit" page-break-before="False" keep-with-next-strength="0" template-guid="be7240ab-a00e-43f8-994a-3b67afb44e88">
					<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:MembersHaveNotRequiredCompanyToObtainAnAudit" xbrl-period="CurrentPeriod">The members have not required the company to obtain an audit of its accounts for the year in question in accordance with section 476</para>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="Directors responsibilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|CompanyStatus|CompanyStatus|CompanyStatus|Audited|Current Period&quot;)[0].Value = false" enabled="Conditional" section-name="DirectorsResponsibilitiesAcknowledgment" page-break-before="False" keep-with-next-strength="0" template-guid="300c5772-07d2-4044-9018-a8d1db1de4e8">
					<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-direp:DirectorsAcknowledgeTheirResponsibilitiesUnderCompaniesAct" xbrl-period="CurrentPeriod">The <ws /><inline condition="DirectorsActiveAtFinalisationCount  !=  1">directors acknowledge their</inline><inline condition="DirectorsActiveAtFinalisationCount  =1 and SingleActiveDirectorGender = 'Male'">director acknowledges his</inline><inline condition="DirectorsActiveAtFinalisationCount  =1 and SingleActiveDirectorGender = 'Female'">director acknowledges her</inline><ws /> responsibilities for complying with the requirements of the Act with respect to accounting records and the preparation of accounts.</para>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="Balance sheet signatories" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="BalanceSheetSignatories" page-break-before="False" keep-with-next-strength="0" template-guid="7b515cc3-7075-4d98-805f-a93082d3faec">
					<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="10mm" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|General|FinalisationDates')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Approved by the <ws /><inline condition="DirectorsActiveAtFinalisationCount != 1">Board</inline><inline condition="DirectorsActiveAtFinalisationCount = 1">director</inline><ws /> on <ws /><inline condition="HasFinalisation"><inline xbrl-concept="uk-gaap:DateApprovalAccounts" xbrl-period="EndCurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata('Disclosure|General|FinalisationDates|FinalisationDates|Directors|Current Period')[0].Value</data></inline></inline><inline condition="HasFinalisation = false">....................</inline><inline condition="DirectorsActiveAtFinalisationCount != 1"><ws /> and signed on its behalf by:</inline></para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|Officers|Officers|Officers|*:filter[*|General|Signatory|Current Period=Balance Sheet,*|General|Signatory|Current Period=Both]:filter[*|General|Cessation|Current Period=null]')[0].HasValue = false" toggle-expand-on-click="true" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|Officers')" base-style="Link To Data">
		Balance sheet signatories
	</para>
  <section>
    <var name="list" init="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|Officers|Officers|Officers|*:filter[*|General|Signatory|Current Period=Balance Sheet,*|General|Signatory|Current Period=Both]:filter[*|General|Cessation|Current Period=null]',null,true)" />
    <iterator iterate-over="list" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
      <var name="OfficerType" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer|General|Type|Current Period')[0].Value" />
      <var name="XBRLOfficerType" pre="if OfficerType = 'Chairman' then 'uk-bus:Chairman' else&#xD;&#xA;if OfficerType = 'Chief executive' then 'uk-bus:ChiefExecutive' else&#xD;&#xA;if OfficerType = 'Chairman and chief executive' then 'uk-bus:ChairmanChiefExecutive' else&#xD;&#xA;if OfficerType = 'Company secretary' then 'uk-bus:CompanySecretary' else&#xD;&#xA;if OfficerType = 'Company secretary and director' then 'uk-bus:CompanySecretaryDirector' else&#xD;&#xA;if OfficerType = 'Director' then 'uk-bus:Director'+(OfficersList.IndexOf(reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer')[0])+1)&#xD;&#xA;else 'uk-bus:AllEntityOfficers'" />
      <section tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('ClientSummaryTab|ClientDetails|Officers')">
        <para para-alignment="Full" outer-top-border-clearance="10mm" xbrl-hypercube="uk-bus:EntityOfficersHypercube" xbrl-dimensions="uk-bus:EntityOfficersDimension=XBRLOfficerType" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">.........................................
<br /><inline xbrl-concept="uk-gaap:NameDirectorSigningAccounts" xbrl-period="CurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer|General|Displayedas|Current Period')[0].Value</data></inline><br /><data>
	reporting.queries.client.lookupaccountingperioddata(item, '*|New/EditOfficer|General|Type|Current Period')[0].Value</data></para>
      </section>
    </iterator>
  </section>
</add-to-body></template>
				</report-template>
			</report-template>
			<report-template version="12" name="Cash Flow Statement" include-in-numbering="False" include-in-contents="True" include-in-report-map="True" isdir="True" condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|BasisofPreparation|Exemptions|CashFlowGroupExemption|Current Period&quot;)[0].Value = false and reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|BasisofPreparation|Exemptions|CashFlowSizeExemption|Current Period&quot;)[0].Value =false) and CompanySize != 'Small'" enabled="Conditional" section-name="CashFlow" page-break-before="False" keep-with-next-strength="0" template-guid="f8539bb8-0687-44bd-bc08-6f63e5f8df6a">
				<template><page-layout>
</page-layout></template>
				<report-template version="12" name="Cash flow header" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="CashFlowHeader" page-break-before="False" keep-with-next-strength="0" template-guid="d5cce5c6-d6a4-4449-a92b-5793618c9999">
					<template><add-to-body>
  <page-header>
    <para base-style="Page Header" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
      <data>reportHelper.Business.Name</data>
      <inline condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].HasValue and&#xD;&#xA;&#xD;&#xA;reportHelper.Business.Name !=&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].Value">
        <br />
        trading as <ws /><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|General|General|Tradingname|Current Period")[0]</data><inline><ws /></inline></inline>
      <br />
      <data condition="report.GetSection('CashFlow') != null">report.GetSection('CashFlow').Description</data>
      <ws /> for the <ws /><inline condition="reportHelper.CurrentPeriod.IsYear">
        Year Ended <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data></inline><inline condition="reportHelper.CurrentPeriod.IsYear=false">
       Period from <ws /><data>reportHelper.CurrentPeriod.StartDate.Value</data><ws /> to <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data></inline><inline para-alignment="left" condition="header.IsContinued" font-style="+Italic"><br />......... continued</inline></para>
  </page-header>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="Cash flow values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="CashFlowValues" page-break-before="False" keep-with-next-strength="0" template-guid="b4818828-bbce-4e25-81de-8f6a8d6b17ff">
					<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'CashFlowStatement', reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.PrimaryStatement, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.PrimaryStatement, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableNoteReferenceColumn.Create('Note', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, '2', '22', false, '&lt;para&gt;Note&lt;/para&gt;', 'centre-bottom', 'centre-bottom')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('CurrentPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column4filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column4XBRLDimensionsSet" pre="column4.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column4XBRLHypercubeNameSet" pre="column4.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column4XBRLPeriodSet" pre="column4.SetPeriod('PriorPeriod')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('OperatingActivities', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Reconciliation of &lt;ws/&gt;&lt;data&gt;reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(1m,1m).ComparativesUnfiltered.AllCategoriesRoot,&amp;apos;OpProfit&amp;apos;).Description.ToLower()&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; to net cash flow from operating activities&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Net cash &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;inflow/(outflow)&amp;apos;)&lt;/data&gt;&lt;ws/&gt; from operating activities&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Operating &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;)&lt;/data&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('001-049', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('050-159', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem2add" pre="section1subsection1.AddItem(section1subsection1subsectionitem2)" />
    <var name="section1subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('160-229', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem3add" pre="section1subsection1.AddItem(section1subsection1subsectionitem3)" />
    <var name="section1subsection1subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('230-399', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem4add" pre="section1subsection1.AddItem(section1subsection1subsectionitem4)" />
    <var name="section1subsection1subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('400-409', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem5add" pre="section1subsection1.AddItem(section1subsection1subsectionitem5)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:OperatingProfitLoss')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Depreciation, amortisation and impairment charges&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('140-143', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('144-154', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section1subsection2subsectionitem2add" pre="section1subsection2.AddItem(section1subsection2subsectionitem2)" />
    <var name="section1subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('210-213', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section1subsection2subsectionitem3add" pre="section1subsection2.AddItem(section1subsection2subsectionitem3)" />
    <var name="section1subsection2subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('214-224', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section1subsection2subsectionitem4add" pre="section1subsection2.AddItem(section1subsection2subsectionitem4)" />
    <var name="section1subsection2subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('370-373', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section1subsection2subsectionitem5add" pre="section1subsection2.AddItem(section1subsection2subsectionitem5)" />
    <var name="section1subsection2subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('374-384', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section1subsection2subsectionitem6add" pre="section1subsection2.AddItem(section1subsection2subsectionitem6)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:TotalDepreciationAmortisationImpairmentCharges')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;(profit)/loss&amp;apos;))&#xD;&#xA;&lt;/data&gt;&lt;ws/&gt; on disposal of fixed assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('155-155', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('156-159', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section1subsection3subsectionitem2add" pre="section1subsection3.AddItem(section1subsection3subsectionitem2)" />
    <var name="section1subsection3subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('225-225', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section1subsection3subsectionitem3add" pre="section1subsection3.AddItem(section1subsection3subsectionitem3)" />
    <var name="section1subsection3subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('226-229', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section1subsection3subsectionitem4add" pre="section1subsection3.AddItem(section1subsection3subsectionitem4)" />
    <var name="section1subsection3subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('386-399', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section1subsection3subsectionitem5add" pre="section1subsection3.AddItem(section1subsection3subsectionitem5)" />
    <var name="section1subsection3subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('385-385', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section1subsection3subsectionitem6add" pre="section1subsection3.AddItem(section1subsection3subsectionitem6)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:GainLossFromDisposalFixedAssets')" />
    <var name="section1subsection3XBRLReverseSignSet" pre="section1subsection3.SetReverseSign(true)" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;(increase)/decrease&amp;apos;))&lt;/data&gt;&lt;ws/&gt; in stocks&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('670-679', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:DecreaseIncreaseInStocks')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;(increase)/decrease&amp;apos;))&lt;/data&gt;&lt;ws/&gt; in debtors&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('680-684', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('685-685', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection5subsectionitem2add" pre="section1subsection5.AddItem(section1subsection5subsectionitem2)" />
    <var name="section1subsection5subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('686-686', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection5subsectionitem3add" pre="section1subsection5.AddItem(section1subsection5subsectionitem3)" />
    <var name="section1subsection5subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('687-688', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, true)" />
    <var name="section1subsection5subsectionitem4add" pre="section1subsection5.AddItem(section1subsection5subsectionitem4)" />
    <var name="section1subsection5subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('689-689', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, true)" />
    <var name="section1subsection5subsectionitem5add" pre="section1subsection5.AddItem(section1subsection5subsectionitem5)" />
    <var name="section1subsection5subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('690-690', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection5subsectionitem6add" pre="section1subsection5.AddItem(section1subsection5subsectionitem6)" />
    <var name="section1subsection5subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('691', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection5subsectionitem7add" pre="section1subsection5.AddItem(section1subsection5subsectionitem7)" />
    <var name="section1subsection5subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('694', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection5subsectionitem8add" pre="section1subsection5.AddItem(section1subsection5subsectionitem8)" />
    <var name="section1subsection5subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('695', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection5subsectionitem9add" pre="section1subsection5.AddItem(section1subsection5subsectionitem9)" />
    <var name="section1subsection5subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('699-699', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection5subsectionitem10add" pre="section1subsection5.AddItem(section1subsection5subsectionitem10)" />
    <var name="section1subsection5subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('700-702', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection5subsectionitem11add" pre="section1subsection5.AddItem(section1subsection5subsectionitem11)" />
    <var name="section1subsection5subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('703-704', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, true)" />
    <var name="section1subsection5subsectionitem12add" pre="section1subsection5.AddItem(section1subsection5subsectionitem12)" />
    <var name="section1subsection5subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('705-705', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, true)" />
    <var name="section1subsection5subsectionitem13add" pre="section1subsection5.AddItem(section1subsection5subsectionitem13)" />
    <var name="section1subsection5subsectionitem14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('706', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection5subsectionitem14add" pre="section1subsection5.AddItem(section1subsection5subsectionitem14)" />
    <var name="section1subsection5subsectionitem15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('708', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection5subsectionitem15add" pre="section1subsection5.AddItem(section1subsection5subsectionitem15)" />
    <var name="section1subsection5subsectionitem16" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('709', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection5subsectionitem16add" pre="section1subsection5.AddItem(section1subsection5subsectionitem16)" />
    <var name="section1subsection5subsectionitem17" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('816-819', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, true)" />
    <var name="section1subsection5subsectionitem17add" pre="section1subsection5.AddItem(section1subsection5subsectionitem17)" />
    <var name="section1subsection5subsectionitem18" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('830', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, true)" />
    <var name="section1subsection5subsectionitem18add" pre="section1subsection5.AddItem(section1subsection5subsectionitem18)" />
    <var name="section1subsection5subsectionitem19" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('831', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, true)" />
    <var name="section1subsection5subsectionitem19add" pre="section1subsection5.AddItem(section1subsection5subsectionitem19)" />
    <var name="section1subsection5subsectionitem20" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('832', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, true)" />
    <var name="section1subsection5subsectionitem20add" pre="section1subsection5.AddItem(section1subsection5subsectionitem20)" />
    <var name="section1subsection5subsectionitem21" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('833', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, true)" />
    <var name="section1subsection5subsectionitem21add" pre="section1subsection5.AddItem(section1subsection5subsectionitem21)" />
    <var name="section1subsection5subsectionitem22" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('834', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, true)" />
    <var name="section1subsection5subsectionitem22add" pre="section1subsection5.AddItem(section1subsection5subsectionitem22)" />
    <var name="section1subsection5subsectionitem23" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('835', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, true)" />
    <var name="section1subsection5subsectionitem23add" pre="section1subsection5.AddItem(section1subsection5subsectionitem23)" />
    <var name="section1subsection5subsectionitem24" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('836', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, true)" />
    <var name="section1subsection5subsectionitem24add" pre="section1subsection5.AddItem(section1subsection5subsectionitem24)" />
    <var name="section1subsection5subsectionitem25" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('837', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, true)" />
    <var name="section1subsection5subsectionitem25add" pre="section1subsection5.AddItem(section1subsection5subsectionitem25)" />
    <var name="section1subsection5subsectionitem26" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('838', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, true)" />
    <var name="section1subsection5subsectionitem26add" pre="section1subsection5.AddItem(section1subsection5subsectionitem26)" />
    <var name="section1subsection5subsectionitem27" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('839', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, true)" />
    <var name="section1subsection5subsectionitem27add" pre="section1subsection5.AddItem(section1subsection5subsectionitem27)" />
    <var name="section1subsection5subsectionitem28" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('697', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection5subsectionitem28add" pre="section1subsection5.AddItem(section1subsection5subsectionitem28)" />
    <var name="section1subsection5subsectionitem29" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('698.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection5subsectionitem29add" pre="section1subsection5.AddItem(section1subsection5subsectionitem29)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:DecreaseIncreaseInDebtors')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;increase/(decrease)&amp;apos;))&lt;/data&gt;&lt;ws/&gt; in creditors&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('792-792', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('793-798', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection6subsectionitem2add" pre="section1subsection6.AddItem(section1subsection6subsectionitem2)" />
    <var name="section1subsection6subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('799-799', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection6subsectionitem3add" pre="section1subsection6.AddItem(section1subsection6subsectionitem3)" />
    <var name="section1subsection6subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('687-688', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, true)" />
    <var name="section1subsection6subsectionitem4add" pre="section1subsection6.AddItem(section1subsection6subsectionitem4)" />
    <var name="section1subsection6subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('689-689', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, true)" />
    <var name="section1subsection6subsectionitem5add" pre="section1subsection6.AddItem(section1subsection6subsectionitem5)" />
    <var name="section1subsection6subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('813-815', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection6subsectionitem6add" pre="section1subsection6.AddItem(section1subsection6subsectionitem6)" />
    <var name="section1subsection6subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('816-819', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, true)" />
    <var name="section1subsection6subsectionitem7add" pre="section1subsection6.AddItem(section1subsection6subsectionitem7)" />
    <var name="section1subsection6subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('800-806', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection6subsectionitem8add" pre="section1subsection6.AddItem(section1subsection6subsectionitem8)" />
    <var name="section1subsection6subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('830', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, true)" />
    <var name="section1subsection6subsectionitem9add" pre="section1subsection6.AddItem(section1subsection6subsectionitem9)" />
    <var name="section1subsection6subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('831', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, true)" />
    <var name="section1subsection6subsectionitem10add" pre="section1subsection6.AddItem(section1subsection6subsectionitem10)" />
    <var name="section1subsection6subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('832', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, true)" />
    <var name="section1subsection6subsectionitem11add" pre="section1subsection6.AddItem(section1subsection6subsectionitem11)" />
    <var name="section1subsection6subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('833', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, true)" />
    <var name="section1subsection6subsectionitem12add" pre="section1subsection6.AddItem(section1subsection6subsectionitem12)" />
    <var name="section1subsection6subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('834', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, true)" />
    <var name="section1subsection6subsectionitem13add" pre="section1subsection6.AddItem(section1subsection6subsectionitem13)" />
    <var name="section1subsection6subsectionitem14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('835', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, true)" />
    <var name="section1subsection6subsectionitem14add" pre="section1subsection6.AddItem(section1subsection6subsectionitem14)" />
    <var name="section1subsection6subsectionitem15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('836', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, true)" />
    <var name="section1subsection6subsectionitem15add" pre="section1subsection6.AddItem(section1subsection6subsectionitem15)" />
    <var name="section1subsection6subsectionitem16" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('837', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, true)" />
    <var name="section1subsection6subsectionitem16add" pre="section1subsection6.AddItem(section1subsection6subsectionitem16)" />
    <var name="section1subsection6subsectionitem17" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('838', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, true)" />
    <var name="section1subsection6subsectionitem17add" pre="section1subsection6.AddItem(section1subsection6subsectionitem17)" />
    <var name="section1subsection6subsectionitem18" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('839', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, true)" />
    <var name="section1subsection6subsectionitem18add" pre="section1subsection6.AddItem(section1subsection6subsectionitem18)" />
    <var name="section1subsection6subsectionitem19" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('809', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection6subsectionitem19add" pre="section1subsection6.AddItem(section1subsection6subsectionitem19)" />
    <var name="section1subsection6subsectionitem20" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('881-881', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection6subsectionitem20add" pre="section1subsection6.AddItem(section1subsection6subsectionitem20)" />
    <var name="section1subsection6subsectionitem21" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('880-880', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection6subsectionitem21add" pre="section1subsection6.AddItem(section1subsection6subsectionitem21)" />
    <var name="section1subsection6subsectionitem22" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('882-882', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection6subsectionitem22add" pre="section1subsection6.AddItem(section1subsection6subsectionitem22)" />
    <var name="section1subsection6subsectionitem23" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('703-704', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, true)" />
    <var name="section1subsection6subsectionitem23add" pre="section1subsection6.AddItem(section1subsection6subsectionitem23)" />
    <var name="section1subsection6subsectionitem24" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('705-705', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, true)" />
    <var name="section1subsection6subsectionitem24add" pre="section1subsection6.AddItem(section1subsection6subsectionitem24)" />
    <var name="section1subsection6subsectionitem25" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('888', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, true)" />
    <var name="section1subsection6subsectionitem25add" pre="section1subsection6.AddItem(section1subsection6subsectionitem25)" />
    <var name="section1subsection6subsectionitem26" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('889', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, true)" />
    <var name="section1subsection6subsectionitem26add" pre="section1subsection6.AddItem(section1subsection6subsectionitem26)" />
    <var name="section1subsection6subsectionitem27" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('885', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection6subsectionitem27add" pre="section1subsection6.AddItem(section1subsection6subsectionitem27)" />
    <var name="section1subsection6subsectionitem28" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('887', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection6subsectionitem28add" pre="section1subsection6.AddItem(section1subsection6subsectionitem28)" />
    <var name="section1subsection6subsectionitem29" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('883-884', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection6subsectionitem29add" pre="section1subsection6.AddItem(section1subsection6subsectionitem29)" />
    <var name="section1subsection6subsectionitem30" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('807.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection6subsectionitem30add" pre="section1subsection6.AddItem(section1subsection6subsectionitem30)" />
    <var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:IncreaseDecreaseInCreditors')" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;increase/(decrease)&amp;apos;))&lt;/data&gt;&lt;ws/&gt; in provisions&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('902-902', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:DecreaseIncreaseInProvisions')" />
    <var name="section1subsection7XBRLReverseSignSet" pre="section1subsection7.SetReverseSign(true)" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Receipt/release of government grants&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('808', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, true)" />
    <var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
    <var name="section1subsection8subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('886', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, true)" />
    <var name="section1subsection8subsectionitem2add" pre="section1subsection8.AddItem(section1subsection8subsectionitem2)" />
    <var name="section1subsection8subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('402', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section1subsection8subsectionitem3add" pre="section1subsection8.AddItem(section1subsection8subsectionitem3)" />
    <var name="section1subsection8XBRLConceptNameSet" pre="section1subsection8.SetConceptName('uk-gaap:GrantsSubsidiesReceivedContributingToOtherOperatingIncome')" />
    <var name="section1subsection8XBRLReverseSignSet" pre="section1subsection8.SetReverseSign(true)" />
    <var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
    <var name="section1subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;(Profit)/loss on disposal of fixed asset investments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('408', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section1subsection9subsectionitem1add" pre="section1subsection9.AddItem(section1subsection9subsectionitem1)" />
    <var name="section1subsection9XBRLConceptNameSet" pre="section1subsection9.SetConceptName('uk-gaap:GainLossOnSalesFixedAssetInvestments')" />
    <var name="section1subsection9XBRLReverseSignSet" pre="section1subsection9.SetReverseSign(true)" />
    <var name="section1subsection9add" pre="section1.AddItem(section1subsection9)" />
    <var name="section1subsection10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;(Profit)/loss on disposal of current asset investments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection10subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('409', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section1subsection10subsectionitem1add" pre="section1subsection10.AddItem(section1subsection10subsectionitem1)" />
    <var name="section1subsection10XBRLConceptNameSet" pre="section1subsection10.SetConceptName('uk-gaap:GainLossOnSalesCurrentAssetInvestments')" />
    <var name="section1subsection10XBRLReverseSignSet" pre="section1subsection10.SetReverseSign(true)" />
    <var name="section1subsection10add" pre="section1.AddItem(section1subsection10)" />
    <var name="section1subsection11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Difference between defined benefit pension charge and cash contributions&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection11subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CashFlow|CashFlow|DefinedBenefit', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection11subsectionitem1add" pre="section1subsection11.AddItem(section1subsection11subsectionitem1)" />
    <var name="section1subsection11XBRLConceptNameSet" pre="section1subsection11.SetConceptName('uk-gaap:CashSurplusDeficitFromDifferenceBetweenPensionChargeCashContribution')" />
    <var name="section1subsection11add" pre="section1.AddItem(section1subsection11)" />
    <var name="section1subsection12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cost of fundamental restructuring &lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection12subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('412-412', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection12subsectionitem1add" pre="section1subsection12.AddItem(section1subsection12subsectionitem1)" />
    <var name="section1subsection12subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('413-419', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection12subsectionitem2add" pre="section1subsection12.AddItem(section1subsection12subsectionitem2)" />
    <var name="section1subsection12XBRLConceptNameSet" pre="section1subsection12.SetConceptName('uk-gaap:CashFlowOutflowArisingFromRestructuring')" />
    <var name="section1subsection12add" pre="section1.AddItem(section1subsection12)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:CashFlowOutflowFromOperatingActivities')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ROI', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Returns on investments and servicing of finance&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Interest received&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('430-439', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('421', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem2add" pre="section2subsection1.AddItem(section2subsection1subsectionitem2)" />
    <var name="section2subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('423', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem3add" pre="section2subsection1.AddItem(section2subsection1subsectionitem3)" />
    <var name="section2subsection1subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('425', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem4add" pre="section2subsection1.AddItem(section2subsection1subsectionitem4)" />
    <var name="section2subsection1subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('428', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem5add" pre="section2subsection1.AddItem(section2subsection1subsectionitem5)" />
    <var name="section2subsection1subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('698.06', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section2subsection1subsectionitem6add" pre="section2subsection1.AddItem(section2subsection1subsectionitem6)" />
    <var name="section2subsection1subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('698.05', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section2subsection1subsectionitem7add" pre="section2subsection1.AddItem(section2subsection1subsectionitem7)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:InterestReceived')" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;HP and finance lease interest&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('465-469', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2XBRLConceptNameSet" pre="section2subsection2.SetConceptName('uk-gaap:InterestElementFinanceLeaseRentalPayments')" />
    <var name="section2subsection2XBRLReverseSignSet" pre="section2subsection2.SetReverseSign(true)" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Interest paid&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('463-464', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem1add" pre="section2subsection3.AddItem(section2subsection3subsectionitem1)" />
    <var name="section2subsection3subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('444', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem2add" pre="section2subsection3.AddItem(section2subsection3subsectionitem2)" />
    <var name="section2subsection3subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('445', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem3add" pre="section2subsection3.AddItem(section2subsection3subsectionitem3)" />
    <var name="section2subsection3subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('448', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem4add" pre="section2subsection3.AddItem(section2subsection3subsectionitem4)" />
    <var name="section2subsection3subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('449', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem5add" pre="section2subsection3.AddItem(section2subsection3subsectionitem5)" />
    <var name="section2subsection3subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('450', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem6add" pre="section2subsection3.AddItem(section2subsection3subsectionitem6)" />
    <var name="section2subsection3subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('451', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem7add" pre="section2subsection3.AddItem(section2subsection3subsectionitem7)" />
    <var name="section2subsection3subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('452', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem8add" pre="section2subsection3.AddItem(section2subsection3subsectionitem8)" />
    <var name="section2subsection3subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('454', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem9add" pre="section2subsection3.AddItem(section2subsection3subsectionitem9)" />
    <var name="section2subsection3subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('455', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem10add" pre="section2subsection3.AddItem(section2subsection3subsectionitem10)" />
    <var name="section2subsection3subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('458', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem11add" pre="section2subsection3.AddItem(section2subsection3subsectionitem11)" />
    <var name="section2subsection3subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('461', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem12add" pre="section2subsection3.AddItem(section2subsection3subsectionitem12)" />
    <var name="section2subsection3subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('807.05', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section2subsection3subsectionitem13add" pre="section2subsection3.AddItem(section2subsection3subsectionitem13)" />
    <var name="section2subsection3subsectionitem14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('807.06', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section2subsection3subsectionitem14add" pre="section2subsection3.AddItem(section2subsection3subsectionitem14)" />
    <var name="section2subsection3XBRLConceptNameSet" pre="section2subsection3.SetConceptName('uk-gaap:InterestPaid')" />
    <var name="section2subsection3XBRLReverseSignSet" pre="section2subsection3.SetReverseSign(true)" />
    <var name="section2subsection3add" pre="section2.AddItem(section2subsection3)" />
    <var name="section2subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Dividends received&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('420', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection4subsectionitem1add" pre="section2subsection4.AddItem(section2subsection4subsectionitem1)" />
    <var name="section2subsection4subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('422', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection4subsectionitem2add" pre="section2subsection4.AddItem(section2subsection4subsectionitem2)" />
    <var name="section2subsection4subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('424', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection4subsectionitem3add" pre="section2subsection4.AddItem(section2subsection4subsectionitem3)" />
    <var name="section2subsection4subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('427', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection4subsectionitem4add" pre="section2subsection4.AddItem(section2subsection4subsectionitem4)" />
    <var name="section2subsection4XBRLConceptNameSet" pre="section2subsection4.SetConceptName('uk-gaap:DividendsReceived')" />
    <var name="section2subsection4add" pre="section2.AddItem(section2subsection4)" />
    <var name="section2subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Preference dividend paid&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('825-829', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section2subsection5subsectionitem1add" pre="section2subsection5.AddItem(section2subsection5subsectionitem1)" />
    <var name="section2subsection5subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('447', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection5subsectionitem2add" pre="section2subsection5.AddItem(section2subsection5subsectionitem2)" />
    <var name="section2subsection5subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('779-779', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section2subsection5subsectionitem3add" pre="section2subsection5.AddItem(section2subsection5subsectionitem3)" />
    <var name="section2subsection5subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('859-859', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section2subsection5subsectionitem4add" pre="section2subsection5.AddItem(section2subsection5subsectionitem4)" />
    <var name="section2subsection5XBRLConceptNameSet" pre="section2subsection5.SetConceptName('uk-gaap:PreferenceDividendsPaidCashFlow')" />
    <var name="section2subsection5XBRLReverseSignSet" pre="section2subsection5.SetReverseSign(true)" />
    <var name="section2subsection5add" pre="section2.AddItem(section2subsection5)" />
    <var name="section2XBRLConceptNameSet" pre="section2.SetConceptName('uk-gaap:CashFlowOutflowFromReturnsOnInvestmentsServicingFinance')" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Taxation', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Taxation&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Tax &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;received/(paid)&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section3subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Taxation paid&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section3subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('810-811', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section3subsection1subsectionitem1add" pre="section3subsection1.AddItem(section3subsection1subsectionitem1)" />
    <var name="section3subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('692', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section3subsection1subsectionitem2add" pre="section3subsection1.AddItem(section3subsection1subsectionitem2)" />
    <var name="section3subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('707', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section3subsection1subsectionitem3add" pre="section3subsection1.AddItem(section3subsection1subsectionitem3)" />
    <var name="section3subsection1subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('470', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem4add" pre="section3subsection1.AddItem(section3subsection1subsectionitem4)" />
    <var name="section3subsection1subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('471', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem5add" pre="section3subsection1.AddItem(section3subsection1subsectionitem5)" />
    <var name="section3subsection1subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('472', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem6add" pre="section3subsection1.AddItem(section3subsection1subsectionitem6)" />
    <var name="section3subsection1subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('473', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem7add" pre="section3subsection1.AddItem(section3subsection1subsectionitem7)" />
    <var name="section3subsection1subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('474', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem8add" pre="section3subsection1.AddItem(section3subsection1subsectionitem8)" />
    <var name="section3subsection1subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('475', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem9add" pre="section3subsection1.AddItem(section3subsection1subsectionitem9)" />
    <var name="section3subsection1subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('476', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem10add" pre="section3subsection1.AddItem(section3subsection1subsectionitem10)" />
    <var name="section3subsection1subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('480', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem11add" pre="section3subsection1.AddItem(section3subsection1subsectionitem11)" />
    <var name="section3subsection1subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('481', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem12add" pre="section3subsection1.AddItem(section3subsection1subsectionitem12)" />
    <var name="section3subsection1subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('693', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section3subsection1subsectionitem13add" pre="section3subsection1.AddItem(section3subsection1subsectionitem13)" />
    <var name="section3subsection1add" pre="section3.AddItem(section3subsection1)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:TaxationExpenseCredit')" />
    <var name="section3XBRLReverseSignSet" pre="section3.SetReverseSign(true)" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <var name="section4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('CapEx', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Capital expenditure and financial investment&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section4subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Purchase of intangible fixed assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('502', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection1subsectionitem1add" pre="section4subsection1.AddItem(section4subsection1subsectionitem1)" />
    <var name="section4subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('512', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection1subsectionitem2add" pre="section4subsection1.AddItem(section4subsection1subsectionitem2)" />
    <var name="section4subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('522', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection1subsectionitem3add" pre="section4subsection1.AddItem(section4subsection1subsectionitem3)" />
    <var name="section4subsection1XBRLConceptNameSet" pre="section4subsection1.SetConceptName('uk-gaap:PurchaseIntangibleFixedAssets')" />
    <var name="section4subsection1XBRLReverseSignSet" pre="section4subsection1.SetReverseSign(true)" />
    <var name="section4subsection1add" pre="section4.AddItem(section4subsection1)" />
    <var name="section4subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Sale of intangible fixed assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('504', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection2subsectionitem1add" pre="section4subsection2.AddItem(section4subsection2subsectionitem1)" />
    <var name="section4subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('514', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection2subsectionitem2add" pre="section4subsection2.AddItem(section4subsection2subsectionitem2)" />
    <var name="section4subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('524', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection2subsectionitem3add" pre="section4subsection2.AddItem(section4subsection2subsectionitem3)" />
    <var name="section4subsection2subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('155-155', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection2subsectionitem4add" pre="section4subsection2.AddItem(section4subsection2subsectionitem4)" />
    <var name="section4subsection2subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('225-225', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection2subsectionitem5add" pre="section4subsection2.AddItem(section4subsection2subsectionitem5)" />
    <var name="section4subsection2subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('385-385', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection2subsectionitem6add" pre="section4subsection2.AddItem(section4subsection2subsectionitem6)" />
    <var name="section4subsection2subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('507', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection2subsectionitem7add" pre="section4subsection2.AddItem(section4subsection2subsectionitem7)" />
    <var name="section4subsection2subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('517', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection2subsectionitem8add" pre="section4subsection2.AddItem(section4subsection2subsectionitem8)" />
    <var name="section4subsection2subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('527', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection2subsectionitem9add" pre="section4subsection2.AddItem(section4subsection2subsectionitem9)" />
    <var name="section4subsection2XBRLConceptNameSet" pre="section4subsection2.SetConceptName('uk-gaap:SaleIntangibleFixedAssets')" />
    <var name="section4subsection2add" pre="section4.AddItem(section4subsection2)" />
    <var name="section4subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Purchase of tangible fixed assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('562', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection3subsectionitem1add" pre="section4subsection3.AddItem(section4subsection3subsectionitem1)" />
    <var name="section4subsection3subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('572', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection3subsectionitem2add" pre="section4subsection3.AddItem(section4subsection3subsectionitem2)" />
    <var name="section4subsection3subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('582', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection3subsectionitem3add" pre="section4subsection3.AddItem(section4subsection3subsectionitem3)" />
    <var name="section4subsection3subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('592', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection3subsectionitem4add" pre="section4subsection3.AddItem(section4subsection3subsectionitem4)" />
    <var name="section4subsection3subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('602', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection3subsectionitem5add" pre="section4subsection3.AddItem(section4subsection3subsectionitem5)" />
    <var name="section4subsection3subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('612', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection3subsectionitem6add" pre="section4subsection3.AddItem(section4subsection3subsectionitem6)" />
    <var name="section4subsection3subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('542.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection3subsectionitem7add" pre="section4subsection3.AddItem(section4subsection3subsectionitem7)" />
    <var name="section4subsection3subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('542.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection3subsectionitem8add" pre="section4subsection3.AddItem(section4subsection3subsectionitem8)" />
    <var name="section4subsection3subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('542.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection3subsectionitem9add" pre="section4subsection3.AddItem(section4subsection3subsectionitem9)" />
    <var name="section4subsection3subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('552.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection3subsectionitem10add" pre="section4subsection3.AddItem(section4subsection3subsectionitem10)" />
    <var name="section4subsection3subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('552.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection3subsectionitem11add" pre="section4subsection3.AddItem(section4subsection3subsectionitem11)" />
    <var name="section4subsection3subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('552.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection3subsectionitem12add" pre="section4subsection3.AddItem(section4subsection3subsectionitem12)" />
    <var name="section4subsection3subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CashFlow|CashFlow|TFAOnHP', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section4subsection3subsectionitem13add" pre="section4subsection3.AddItem(section4subsection3subsectionitem13)" />
    <var name="section4subsection3XBRLConceptNameSet" pre="section4subsection3.SetConceptName('uk-gaap:PurchaseTangibleFixedAssets')" />
    <var name="section4subsection3XBRLReverseSignSet" pre="section4subsection3.SetReverseSign(true)" />
    <var name="section4subsection3add" pre="section4.AddItem(section4subsection3)" />
    <var name="section4subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Sale of tangible fixed assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('564', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem1add" pre="section4subsection4.AddItem(section4subsection4subsectionitem1)" />
    <var name="section4subsection4subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('574', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem2add" pre="section4subsection4.AddItem(section4subsection4subsectionitem2)" />
    <var name="section4subsection4subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('584', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem3add" pre="section4subsection4.AddItem(section4subsection4subsectionitem3)" />
    <var name="section4subsection4subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('594', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem4add" pre="section4subsection4.AddItem(section4subsection4subsectionitem4)" />
    <var name="section4subsection4subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('604', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem5add" pre="section4subsection4.AddItem(section4subsection4subsectionitem5)" />
    <var name="section4subsection4subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('614', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem6add" pre="section4subsection4.AddItem(section4subsection4subsectionitem6)" />
    <var name="section4subsection4subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('156-159', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem7add" pre="section4subsection4.AddItem(section4subsection4subsectionitem7)" />
    <var name="section4subsection4subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('226-229', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem8add" pre="section4subsection4.AddItem(section4subsection4subsectionitem8)" />
    <var name="section4subsection4subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('386-399', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem9add" pre="section4subsection4.AddItem(section4subsection4subsectionitem9)" />
    <var name="section4subsection4subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('410-410', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem10add" pre="section4subsection4.AddItem(section4subsection4subsectionitem10)" />
    <var name="section4subsection4subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('547.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem11add" pre="section4subsection4.AddItem(section4subsection4subsectionitem11)" />
    <var name="section4subsection4subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('547.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem12add" pre="section4subsection4.AddItem(section4subsection4subsectionitem12)" />
    <var name="section4subsection4subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('547.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem13add" pre="section4subsection4.AddItem(section4subsection4subsectionitem13)" />
    <var name="section4subsection4subsectionitem14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('544.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem14add" pre="section4subsection4.AddItem(section4subsection4subsectionitem14)" />
    <var name="section4subsection4subsectionitem15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('544.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem15add" pre="section4subsection4.AddItem(section4subsection4subsectionitem15)" />
    <var name="section4subsection4subsectionitem16" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('544.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem16add" pre="section4subsection4.AddItem(section4subsection4subsectionitem16)" />
    <var name="section4subsection4subsectionitem17" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('557.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem17add" pre="section4subsection4.AddItem(section4subsection4subsectionitem17)" />
    <var name="section4subsection4subsectionitem18" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('557.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem18add" pre="section4subsection4.AddItem(section4subsection4subsectionitem18)" />
    <var name="section4subsection4subsectionitem19" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('557.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem19add" pre="section4subsection4.AddItem(section4subsection4subsectionitem19)" />
    <var name="section4subsection4subsectionitem20" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('554.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem20add" pre="section4subsection4.AddItem(section4subsection4subsectionitem20)" />
    <var name="section4subsection4subsectionitem21" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('554.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem21add" pre="section4subsection4.AddItem(section4subsection4subsectionitem21)" />
    <var name="section4subsection4subsectionitem22" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('554.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem22add" pre="section4subsection4.AddItem(section4subsection4subsectionitem22)" />
    <var name="section4subsection4subsectionitem23" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('567', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem23add" pre="section4subsection4.AddItem(section4subsection4subsectionitem23)" />
    <var name="section4subsection4subsectionitem24" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('577', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem24add" pre="section4subsection4.AddItem(section4subsection4subsectionitem24)" />
    <var name="section4subsection4subsectionitem25" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('587', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem25add" pre="section4subsection4.AddItem(section4subsection4subsectionitem25)" />
    <var name="section4subsection4subsectionitem26" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('597', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem26add" pre="section4subsection4.AddItem(section4subsection4subsectionitem26)" />
    <var name="section4subsection4subsectionitem27" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('607', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem27add" pre="section4subsection4.AddItem(section4subsection4subsectionitem27)" />
    <var name="section4subsection4subsectionitem28" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('617', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem28add" pre="section4subsection4.AddItem(section4subsection4subsectionitem28)" />
    <var name="section4subsection4XBRLConceptNameSet" pre="section4subsection4.SetConceptName('uk-gaap:SaleTangibleFixedAssets')" />
    <var name="section4subsection4add" pre="section4.AddItem(section4subsection4)" />
    <var name="section4subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Purchase of investments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('652', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection5subsectionitem1add" pre="section4subsection5.AddItem(section4subsection5subsectionitem1)" />
    <var name="section4subsection5subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('662', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection5subsectionitem2add" pre="section4subsection5.AddItem(section4subsection5subsectionitem2)" />
    <var name="section4subsection5subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('731', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection5subsectionitem3add" pre="section4subsection5.AddItem(section4subsection5subsectionitem3)" />
    <var name="section4subsection5subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('741', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection5subsectionitem4add" pre="section4subsection5.AddItem(section4subsection5subsectionitem4)" />
    <var name="section4subsection5XBRLConceptNameSet" pre="section4subsection5.SetConceptName('uk-gaap:PurchaseFixedAssetInvestments')" />
    <var name="section4subsection5XBRLReverseSignSet" pre="section4subsection5.SetReverseSign(true)" />
    <var name="section4subsection5add" pre="section4.AddItem(section4subsection5)" />
    <var name="section4subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Sale of investments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('654', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection6subsectionitem1add" pre="section4subsection6.AddItem(section4subsection6subsectionitem1)" />
    <var name="section4subsection6subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('664', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection6subsectionitem2add" pre="section4subsection6.AddItem(section4subsection6subsectionitem2)" />
    <var name="section4subsection6subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('732', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection6subsectionitem3add" pre="section4subsection6.AddItem(section4subsection6subsectionitem3)" />
    <var name="section4subsection6subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('742', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection6subsectionitem4add" pre="section4subsection6.AddItem(section4subsection6subsectionitem4)" />
    <var name="section4subsection6subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('657', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection6subsectionitem5add" pre="section4subsection6.AddItem(section4subsection6subsectionitem5)" />
    <var name="section4subsection6subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('667', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection6subsectionitem6add" pre="section4subsection6.AddItem(section4subsection6subsectionitem6)" />
    <var name="section4subsection6subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('408.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection6subsectionitem7add" pre="section4subsection6.AddItem(section4subsection6subsectionitem7)" />
    <var name="section4subsection6subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('409.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection6subsectionitem8add" pre="section4subsection6.AddItem(section4subsection6subsectionitem8)" />
    <var name="section4subsection6XBRLConceptNameSet" pre="section4subsection6.SetConceptName('uk-gaap:SaleFixedAssetInvestments')" />
    <var name="section4subsection6add" pre="section4.AddItem(section4subsection6)" />
    <var name="section4subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Receipts from the repayment of loans to other entities&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('622', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection7subsectionitem1add" pre="section4subsection7.AddItem(section4subsection7subsectionitem1)" />
    <var name="section4subsection7subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('627', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection7subsectionitem2add" pre="section4subsection7.AddItem(section4subsection7subsectionitem2)" />
    <var name="section4subsection7XBRLConceptNameSet" pre="section4subsection7.SetConceptName('uk-gaap:RepaymentLoansAdvancedToOtherEntities')" />
    <var name="section4subsection7add" pre="section4.AddItem(section4subsection7)" />
    <var name="section4subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Receipts of government grants&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('402', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection8subsectionitem1add" pre="section4subsection8.AddItem(section4subsection8subsectionitem1)" />
    <var name="section4subsection8XBRLConceptNameSet" pre="section4subsection8.SetConceptName('uk-gaap:GrantsSubsidiesReceivedContributingToOtherOperatingIncome')" />
    <var name="section4subsection8add" pre="section4.AddItem(section4subsection8)" />
    <var name="section4subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Loans made to other entities&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('621', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection9subsectionitem1add" pre="section4subsection9.AddItem(section4subsection9subsectionitem1)" />
    <var name="section4subsection9subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('626', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection9subsectionitem2add" pre="section4subsection9.AddItem(section4subsection9subsectionitem2)" />
    <var name="section4subsection9XBRLConceptNameSet" pre="section4subsection9.SetConceptName('uk-gaap:LoansToOtherEntities')" />
    <var name="section4subsection9XBRLReverseSignSet" pre="section4subsection9.SetReverseSign(true)" />
    <var name="section4subsection9add" pre="section4.AddItem(section4subsection9)" />
    <var name="section4XBRLConceptNameSet" pre="section4.SetConceptName('uk-gaap:CashFlowOutflowFromCapitalExpenditureFinancialInvestment')" />
    <var name="section4add" pre="smartTable.AddTableBlock(section4)" />
    <var name="section5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('AcquisitionsDisposals', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Acquisitions and disposals&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section5subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Acquisition of investments in subsidiary undertakings&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('632', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection1subsectionitem1add" pre="section5subsection1.AddItem(section5subsection1subsectionitem1)" />
    <var name="section5subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('711.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection1subsectionitem2add" pre="section5subsection1.AddItem(section5subsection1subsectionitem2)" />
    <var name="section5subsection1XBRLConceptNameSet" pre="section5subsection1.SetConceptName('uk-gaap:NetCashPaymentsToAcquireSubsidiaries')" />
    <var name="section5subsection1XBRLReverseSignSet" pre="section5subsection1.SetReverseSign(true)" />
    <var name="section5subsection1add" pre="section5.AddItem(section5subsection1)" />
    <var name="section5subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Disposal of investments in subsidiary undertakings&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('634', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection2subsectionitem1add" pre="section5subsection2.AddItem(section5subsection2subsectionitem1)" />
    <var name="section5subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('637', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection2subsectionitem2add" pre="section5subsection2.AddItem(section5subsection2subsectionitem2)" />
    <var name="section5subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('712', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection2subsectionitem3add" pre="section5subsection2.AddItem(section5subsection2subsectionitem3)" />
    <var name="section5subsection2subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('408.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection2subsectionitem4add" pre="section5subsection2.AddItem(section5subsection2subsectionitem4)" />
    <var name="section5subsection2subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('409.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection2subsectionitem5add" pre="section5subsection2.AddItem(section5subsection2subsectionitem5)" />
    <var name="section5subsection2subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('411-411', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection2subsectionitem6add" pre="section5subsection2.AddItem(section5subsection2subsectionitem6)" />
    <var name="section5subsection2XBRLConceptNameSet" pre="section5subsection2.SetConceptName('uk-gaap:NetCashReceiptsOnSaleSubsidiaries')" />
    <var name="section5subsection2add" pre="section5.AddItem(section5subsection2)" />
    <var name="section5subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Acquisition of investments in associates and joint ventures&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('642', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection3subsectionitem1add" pre="section5subsection3.AddItem(section5subsection3subsectionitem1)" />
    <var name="section5subsection3subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('721', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection3subsectionitem2add" pre="section5subsection3.AddItem(section5subsection3subsectionitem2)" />
    <var name="section5subsection3XBRLConceptNameSet" pre="section5subsection3.SetConceptName('uk-gaap:TotalCashPaymentsToAcquireJoint-venturesAssociates')" />
    <var name="section5subsection3XBRLReverseSignSet" pre="section5subsection3.SetReverseSign(true)" />
    <var name="section5subsection3add" pre="section5.AddItem(section5subsection3)" />
    <var name="section5subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Sale of  investments in associates and joint ventures&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('644', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection4subsectionitem1add" pre="section5subsection4.AddItem(section5subsection4subsectionitem1)" />
    <var name="section5subsection4subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('647', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection4subsectionitem2add" pre="section5subsection4.AddItem(section5subsection4subsectionitem2)" />
    <var name="section5subsection4subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('722', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection4subsectionitem3add" pre="section5subsection4.AddItem(section5subsection4subsectionitem3)" />
    <var name="section5subsection4subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('408.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection4subsectionitem4add" pre="section5subsection4.AddItem(section5subsection4subsectionitem4)" />
    <var name="section5subsection4subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('409.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection4subsectionitem5add" pre="section5subsection4.AddItem(section5subsection4subsectionitem5)" />
    <var name="section5subsection4XBRLConceptNameSet" pre="section5subsection4.SetConceptName('uk-gaap:TotalCashReceiptsOnSaleJoint-venturesAssociates')" />
    <var name="section5subsection4add" pre="section5.AddItem(section5subsection4)" />
    <var name="section5XBRLConceptNameSet" pre="section5.SetConceptName('uk-gaap:CashFlowOutflowFromAcquisitionsDisposals')" />
    <var name="section5add" pre="smartTable.AddTableBlock(section5)" />
    <var name="section6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('EquityDividends', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Equity dividends paid&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section6subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Ordinary dividend paid&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section6subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('988', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem1add" pre="section6subsection1.AddItem(section6subsection1subsectionitem1)" />
    <var name="section6subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('990', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem2add" pre="section6subsection1.AddItem(section6subsection1subsectionitem2)" />
    <var name="section6subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('992', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem3add" pre="section6subsection1.AddItem(section6subsection1subsectionitem3)" />
    <var name="section6subsection1subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('989', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem4add" pre="section6subsection1.AddItem(section6subsection1subsectionitem4)" />
    <var name="section6subsection1subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('991', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem5add" pre="section6subsection1.AddItem(section6subsection1subsectionitem5)" />
    <var name="section6subsection1subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('993', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem6add" pre="section6subsection1.AddItem(section6subsection1subsectionitem6)" />
    <var name="section6subsection1add" pre="section6.AddItem(section6subsection1)" />
    <var name="section6subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Ordinary dividends proposed&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section6subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('820-824', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section6subsection2subsectionitem1add" pre="section6subsection2.AddItem(section6subsection2subsectionitem1)" />
    <var name="section6subsection2add" pre="section6.AddItem(section6subsection2)" />
    <var name="section6subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Preference dividend paid&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section6subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('994', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection3subsectionitem1add" pre="section6subsection3.AddItem(section6subsection3subsectionitem1)" />
    <var name="section6subsection3add" pre="section6.AddItem(section6subsection3)" />
    <var name="section6subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Preference dividend proposed&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section6subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('995', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection4subsectionitem1add" pre="section6subsection4.AddItem(section6subsection4subsectionitem1)" />
    <var name="section6subsection4add" pre="section6.AddItem(section6subsection4)" />
    <var name="section6XBRLConceptNameSet" pre="section6.SetConceptName('uk-gaap:EquityDividendsPaid')" />
    <var name="section6XBRLReverseSignSet" pre="section6.SetReverseSign(true)" />
    <var name="section6add" pre="smartTable.AddTableBlock(section6)" />
    <var name="section7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('InflowOutflowBefore', '&lt;para&gt;Net cash &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;inflow/(outflow)&amp;quot;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; before financing&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.Always, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section7item1" pre="section7.AddTotalItem(section1)" />
    <var name="section7item2" pre="section7.AddTotalItem(section2)" />
    <var name="section7item3" pre="section7.AddTotalItem(section3)" />
    <var name="section7item4" pre="section7.AddTotalItem(section4)" />
    <var name="section7item5" pre="section7.AddTotalItem(section5)" />
    <var name="section7item6" pre="section7.AddTotalItem(section6)" />
    <var name="section7XBRLConceptNameSet" pre="section7.SetConceptName('uk-gaap:CashFlowOutflowBeforeManagementLiquidResourcesFinancing')" />
    <var name="section7add" pre="smartTable.AddTableBlock(section7)" />
    <var name="section8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Financing', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Financing&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section8subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Value of new loans obtained during the period&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section8subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CashFlow|CashFlow|NewLoans', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section8subsection1subsectionitem1add" pre="section8subsection1.AddItem(section8subsection1subsectionitem1)" />
    <var name="section8subsection1XBRLConceptNameSet" pre="section8subsection1.SetConceptName('uk-gaap:IncreaseInBorrowings')" />
    <var name="section8subsection1add" pre="section8.AddItem(section8subsection1)" />
    <var name="section8subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Repayment of loans and borrowings&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section8subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('780-784', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section8subsection2subsectionitem1add" pre="section8subsection2.AddItem(section8subsection2subsectionitem1)" />
    <var name="section8subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('860-862', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section8subsection2subsectionitem2add" pre="section8subsection2.AddItem(section8subsection2subsectionitem2)" />
    <var name="section8subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('863-865', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section8subsection2subsectionitem3add" pre="section8subsection2.AddItem(section8subsection2subsectionitem3)" />
    <var name="section8subsection2subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('866-868', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section8subsection2subsectionitem4add" pre="section8subsection2.AddItem(section8subsection2subsectionitem4)" />
    <var name="section8subsection2subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('869-869', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section8subsection2subsectionitem5add" pre="section8subsection2.AddItem(section8subsection2subsectionitem5)" />
    <var name="section8subsection2subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('870-872', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section8subsection2subsectionitem6add" pre="section8subsection2.AddItem(section8subsection2subsectionitem6)" />
    <var name="section8subsection2subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('873-875', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section8subsection2subsectionitem7add" pre="section8subsection2.AddItem(section8subsection2subsectionitem7)" />
    <var name="section8subsection2subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('876-878', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section8subsection2subsectionitem8add" pre="section8subsection2.AddItem(section8subsection2subsectionitem8)" />
    <var name="section8subsection2subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('879-879', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section8subsection2subsectionitem9add" pre="section8subsection2.AddItem(section8subsection2subsectionitem9)" />
    <var name="section8subsection2subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('785-789', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section8subsection2subsectionitem10add" pre="section8subsection2.AddItem(section8subsection2subsectionitem10)" />
    <var name="section8subsection2subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CashFlow|CashFlow|NewLoans', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section8subsection2subsectionitem11add" pre="section8subsection2.AddItem(section8subsection2subsectionitem11)" />
    <var name="section8subsection2XBRLConceptNameSet" pre="section8subsection2.SetConceptName('uk-gaap:RepaymentBorrowings')" />
    <var name="section8subsection2XBRLReverseSignSet" pre="section8subsection2.SetReverseSign(true)" />
    <var name="section8subsection2add" pre="section8.AddItem(section8subsection2)" />
    <var name="section8subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Issue of shares&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section8subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('911-911', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section8subsection3subsectionitem1add" pre="section8subsection3.AddItem(section8subsection3subsectionitem1)" />
    <var name="section8subsection3subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('921-921', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section8subsection3subsectionitem2add" pre="section8subsection3.AddItem(section8subsection3subsectionitem2)" />
    <var name="section8subsection3subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('931', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section8subsection3subsectionitem3add" pre="section8subsection3.AddItem(section8subsection3subsectionitem3)" />
    <var name="section8subsection3subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('932', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section8subsection3subsectionitem4add" pre="section8subsection3.AddItem(section8subsection3subsectionitem4)" />
    <var name="section8subsection3subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('699-699', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section8subsection3subsectionitem5add" pre="section8subsection3.AddItem(section8subsection3subsectionitem5)" />
    <var name="section8subsection3subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CashFlow|CashFlow|NonEquityIssued', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section8subsection3subsectionitem6add" pre="section8subsection3.AddItem(section8subsection3subsectionitem6)" />
    <var name="section8subsection3XBRLConceptNameSet" pre="section8subsection3.SetConceptName('uk-gaap:ProceedsFromIssueSharesOtherEquityInstrumentsExcludingSharesIssuedToMinorityInterests')" />
    <var name="section8subsection3add" pre="section8.AddItem(section8subsection3)" />
    <var name="section8subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Purchase of own shares&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section8subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('913-913', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section8subsection4subsectionitem1add" pre="section8subsection4.AddItem(section8subsection4subsectionitem1)" />
    <var name="section8subsection4subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('923-923', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section8subsection4subsectionitem2add" pre="section8subsection4.AddItem(section8subsection4subsectionitem2)" />
    <var name="section8subsection4subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CashFlow|CashFlow|NonEquityPurchased', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section8subsection4subsectionitem3add" pre="section8subsection4.AddItem(section8subsection4subsectionitem3)" />
    <var name="section8subsection4XBRLConceptNameSet" pre="section8subsection4.SetConceptName('uk-gaap:NetPaymentsForReacquisitionOrRedemptionShares')" />
    <var name="section8subsection4XBRLReverseSignSet" pre="section8subsection4.SetReverseSign(true)" />
    <var name="section8subsection4add" pre="section8.AddItem(section8subsection4)" />
    <var name="section8subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Repayment of capital element of finance leases and HP contracts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section8subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('840-844', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section8subsection5subsectionitem1add" pre="section8subsection5.AddItem(section8subsection5subsectionitem1)" />
    <var name="section8subsection5subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('890-892', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section8subsection5subsectionitem2add" pre="section8subsection5.AddItem(section8subsection5subsectionitem2)" />
    <var name="section8subsection5subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('893-895', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section8subsection5subsectionitem3add" pre="section8subsection5.AddItem(section8subsection5subsectionitem3)" />
    <var name="section8subsection5subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('896-898', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section8subsection5subsectionitem4add" pre="section8subsection5.AddItem(section8subsection5subsectionitem4)" />
    <var name="section8subsection5subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('899-899', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section8subsection5subsectionitem5add" pre="section8subsection5.AddItem(section8subsection5subsectionitem5)" />
    <var name="section8subsection5subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CashFlow|CashFlow|TFAOnHP', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section8subsection5subsectionitem6add" pre="section8subsection5.AddItem(section8subsection5subsectionitem6)" />
    <var name="section8subsection5XBRLConceptNameSet" pre="section8subsection5.SetConceptName('uk-gaap:CapitalElementFinanceLeaseRentalPayments')" />
    <var name="section8subsection5XBRLReverseSignSet" pre="section8subsection5.SetReverseSign(true)" />
    <var name="section8subsection5add" pre="section8.AddItem(section8subsection5)" />
    <var name="section8subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;issue/(repayment)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; of debenture loans&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section8subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('770-774', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section8subsection6subsectionitem1add" pre="section8subsection6.AddItem(section8subsection6subsectionitem1)" />
    <var name="section8subsection6subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('775-777', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section8subsection6subsectionitem2add" pre="section8subsection6.AddItem(section8subsection6subsectionitem2)" />
    <var name="section8subsection6subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('845-849', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section8subsection6subsectionitem3add" pre="section8subsection6.AddItem(section8subsection6subsectionitem3)" />
    <var name="section8subsection6subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('850-854', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section8subsection6subsectionitem4add" pre="section8subsection6.AddItem(section8subsection6subsectionitem4)" />
    <var name="section8subsection6add" pre="section8.AddItem(section8subsection6)" />
    <var name="section8XBRLConceptNameSet" pre="section8.SetConceptName('uk-gaap:CashFlowOutflowFromFinancing')" />
    <var name="section8add" pre="smartTable.AddTableBlock(section8)" />
    <var name="section9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('IncreaseDecreaseInCash', '&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;quot;increase/(decrease)&amp;quot;))&lt;/data&gt;&lt;ws/&gt; in cash&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.Always, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, 'AnalysisOfNetDebt')" />
    <var name="section9item1" pre="section9.AddTotalItem(section7)" />
    <var name="section9item2" pre="section9.AddTotalItem(section8)" />
    <var name="section9XBRLConceptNameSet" pre="section9.SetConceptName('uk-gaap:IncreaseDecreaseInNetCashForPeriod')" />
    <var name="section9add" pre="smartTable.AddTableBlock(section9)" />
    <var name="section10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('BankAndCashMovement', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Never, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Bank and cash movement&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Movement in bank and cash balances&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section10subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cash at bank and in hand&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section10subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('750-769', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section10subsection1subsectionitem1add" pre="section10subsection1.AddItem(section10subsection1subsectionitem1)" />
    <var name="section10subsection1add" pre="section10.AddItem(section10subsection1)" />
    <var name="section10add" pre="smartTable.AddTableBlock(section10)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="Reconciliation of net cash flow to movement in net debt" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="ReconcliationOfCashFlowToNetDebt" page-break-before="False" keep-with-next-strength="0" template-guid="e40691e3-fe55-41b9-8c17-03b1ebc8ba5f">
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Reconciliation net cash flow to movement in net debt values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="Reconciliation net cash flow to movement in net debt values" page-break-before="False" keep-with-next-strength="0" template-guid="def00a24-7648-48d5-ac3f-d95953ece93e">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'MyFirstTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.PrimaryStatement, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.PrimaryStatement, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'bottom-left', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableNoteReferenceColumn.Create('NoteNumbers', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, '2', '22', false, '&lt;para&gt;Note&lt;/para&gt;', 'centre-bottom', 'centre-bottom')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('Current')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column4filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column4XBRLDimensionsSet" pre="column4.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column4XBRLHypercubeNameSet" pre="column4.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column4XBRLPeriodSet" pre="column4.SetPeriod('Prior')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Change in net debt resulting from cash flows&lt;/para&gt;', 'AnalysisOfNetDebt', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;increase/(decrease)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; in cash&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('750-769', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:IncreaseDecreaseInNetCashForPeriod')" />
    <var name="section1subsection1XBRLPeriodSet" pre="section1subsection1.SetPeriod('Duration')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cash inflow from increase in loans&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CashFlow|CashFlow|NewLoans', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:IncreaseInBorrowings')" />
    <var name="section1subsection2XBRLPeriodSet" pre="section1subsection2.SetPeriod('Duration')" />
    <var name="section1subsection2XBRLReverseSignSet" pre="section1subsection2.SetReverseSign(true)" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cash  outflow from repayment of loans&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('785-789', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('780-784', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection3subsectionitem2add" pre="section1subsection3.AddItem(section1subsection3subsectionitem2)" />
    <var name="section1subsection3subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('876-878', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection3subsectionitem3add" pre="section1subsection3.AddItem(section1subsection3subsectionitem3)" />
    <var name="section1subsection3subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('863-865', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection3subsectionitem4add" pre="section1subsection3.AddItem(section1subsection3subsectionitem4)" />
    <var name="section1subsection3subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('879-879', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection3subsectionitem5add" pre="section1subsection3.AddItem(section1subsection3subsectionitem5)" />
    <var name="section1subsection3subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('873-875', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection3subsectionitem6add" pre="section1subsection3.AddItem(section1subsection3subsectionitem6)" />
    <var name="section1subsection3subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('869-869', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection3subsectionitem7add" pre="section1subsection3.AddItem(section1subsection3subsectionitem7)" />
    <var name="section1subsection3subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('860-862', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection3subsectionitem8add" pre="section1subsection3.AddItem(section1subsection3subsectionitem8)" />
    <var name="section1subsection3subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('866-868', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection3subsectionitem9add" pre="section1subsection3.AddItem(section1subsection3subsectionitem9)" />
    <var name="section1subsection3subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('870-872', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection3subsectionitem10add" pre="section1subsection3.AddItem(section1subsection3subsectionitem10)" />
    <var name="section1subsection3subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CashFlow|CashFlow|NewLoans', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem11add" pre="section1subsection3.AddItem(section1subsection3subsectionitem11)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:RepaymentBorrowings')" />
    <var name="section1subsection3XBRLPeriodSet" pre="section1subsection3.SetPeriod('Duration')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cash outflow from repayment of capital element of finance leases and hire purchase contracts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('840-844', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('896-898', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection4subsectionitem2add" pre="section1subsection4.AddItem(section1subsection4subsectionitem2)" />
    <var name="section1subsection4subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('890-892', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection4subsectionitem3add" pre="section1subsection4.AddItem(section1subsection4subsectionitem3)" />
    <var name="section1subsection4subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('899-899', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection4subsectionitem4add" pre="section1subsection4.AddItem(section1subsection4subsectionitem4)" />
    <var name="section1subsection4subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('893-895', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection4subsectionitem5add" pre="section1subsection4.AddItem(section1subsection4subsectionitem5)" />
    <var name="section1subsection4subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CashFlow|CashFlow|TFAOnHP', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem6add" pre="section1subsection4.AddItem(section1subsection4subsectionitem6)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:CapitalElementFinanceLeaseRentalPayments')" />
    <var name="section1subsection4XBRLPeriodSet" pre="section1subsection4.SetPeriod('Duration')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cash &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;outflow/(inflow)&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; from &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;decrease/(increase)&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; in other debt&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('778-778', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('770-774', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection5subsectionitem2add" pre="section1subsection5.AddItem(section1subsection5subsectionitem2)" />
    <var name="section1subsection5subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('775-777', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection5subsectionitem3add" pre="section1subsection5.AddItem(section1subsection5subsectionitem3)" />
    <var name="section1subsection5subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('845-849', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection5subsectionitem4add" pre="section1subsection5.AddItem(section1subsection5subsectionitem4)" />
    <var name="section1subsection5subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('850-854', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection5subsectionitem5add" pre="section1subsection5.AddItem(section1subsection5subsectionitem5)" />
    <var name="section1subsection5subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('855-858', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, true)" />
    <var name="section1subsection5subsectionitem6add" pre="section1subsection5.AddItem(section1subsection5subsectionitem6)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:OtherPaymentsWhichContributeToCashOutflowFromFinancing')" />
    <var name="section1subsection5XBRLPeriodSet" pre="section1subsection5.SetPeriod('Duration')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:DecreaseIncreaseInNetDebtResultingFromCashFlows')" />
    <var name="section1XBRLPeriodSet" pre="section1.SetPeriod('Duration')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('NewSection', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Exchange differences&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CashFlow|NetDebt|NetDebtFunds|Columns|Exchange', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:DecreaseIncreaseInNetDebtFromExchangeAdjustments')" />
    <var name="section2subsection1XBRLPeriodSet" pre="section2subsection1.SetPeriod('Duration')" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other non-cash movements&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CashFlow|NetDebt|BankCash|Columns|Other', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CashFlow|NetDebt|DebtFLHP|Rows|*:item[0]|Other', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem2add" pre="section2subsection2.AddItem(section2subsection2subsectionitem2)" />
    <var name="section2subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CashFlow|NetDebt|DebtFLHP|Rows|*:item[1]|Other', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem3add" pre="section2subsection2.AddItem(section2subsection2subsectionitem3)" />
    <var name="section2subsection2subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CashFlow|NetDebt|LiquidResources|Rows|*:item[0]|Other', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem4add" pre="section2subsection2.AddItem(section2subsection2subsectionitem4)" />
    <var name="section2subsection2XBRLConceptNameSet" pre="section2subsection2.SetConceptName('uk-gaap:OtherNon-cashMovementsServingToDecreaseIncreaseNetDebt')" />
    <var name="section2subsection2XBRLPeriodSet" pre="section2subsection2.SetPeriod('Duration')" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;New finance leases&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CashFlow|CashFlow|TFAOnHP', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section2subsection3subsectionitem1add" pre="section2subsection3.AddItem(section2subsection3subsectionitem1)" />
    <var name="section2subsection3XBRLConceptNameSet" pre="section2subsection3.SetConceptName('uk-gaap:NewFinanceLeases')" />
    <var name="section2subsection3XBRLPeriodSet" pre="section2subsection3.SetPeriod('Duration')" />
    <var name="section2subsection3XBRLReverseSignSet" pre="section2subsection3.SetReverseSign(true)" />
    <var name="section2subsection3add" pre="section2.AddItem(section2subsection3)" />
    <var name="section2XBRLPeriodSet" pre="section2.SetPeriod('Duration')" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('MovementInNetDebt', '&lt;para&gt;Movement in net debt&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, 'AnalysisOfNetDebt')" />
    <var name="section3item1" pre="section3.AddTotalItem(section1)" />
    <var name="section3item2" pre="section3.AddTotalItem(section2)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:DecreaseIncreaseInNetDebtDuringPeriod')" />
    <var name="section3XBRLPeriodSet" pre="section3.SetPeriod('Duration')" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <var name="section4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('NetDebtBFwd', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Net &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;funds/(debt)&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; at &lt;ws/&gt;&lt;inline condition=&quot;reportHelper.IsAnnual&quot;&gt;&lt;data&gt;reportHelper.CurrentPeriod.StartDate.Value.ToString(&amp;apos;d MMMM&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;reportHelper.isannual = false&quot;&gt;start of period&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'AnalysisOfNetDebt', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section4subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Net debt movement&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('BankOD', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, true)" />
    <var name="section4subsection1subsectionitem1add" pre="section4subsection1.AddItem(section4subsection1subsectionitem1)" />
    <var name="section4subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Cash', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, true)" />
    <var name="section4subsection1subsectionitem2add" pre="section4subsection1.AddItem(section4subsection1subsectionitem2)" />
    <var name="section4subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Debt&lt;1yr', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, true)" />
    <var name="section4subsection1subsectionitem3add" pre="section4subsection1.AddItem(section4subsection1subsectionitem3)" />
    <var name="section4subsection1subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Debt&gt;1yr', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, true)" />
    <var name="section4subsection1subsectionitem4add" pre="section4subsection1.AddItem(section4subsection1subsectionitem4)" />
    <var name="section4subsection1subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('HPFL', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, true)" />
    <var name="section4subsection1subsectionitem5add" pre="section4subsection1.AddItem(section4subsection1subsectionitem5)" />
    <var name="section4subsection1add" pre="section4.AddItem(section4subsection1)" />
    <var name="section4subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Net debt closing balance&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('BankOD', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection2subsectionitem1add" pre="section4subsection2.AddItem(section4subsection2subsectionitem1)" />
    <var name="section4subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Debt&lt;1yr', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection2subsectionitem2add" pre="section4subsection2.AddItem(section4subsection2subsectionitem2)" />
    <var name="section4subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Debt&gt;1yr', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection2subsectionitem3add" pre="section4subsection2.AddItem(section4subsection2subsectionitem3)" />
    <var name="section4subsection2subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Cash', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection2subsectionitem4add" pre="section4subsection2.AddItem(section4subsection2subsectionitem4)" />
    <var name="section4subsection2subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('HPFL', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection2subsectionitem5add" pre="section4subsection2.AddItem(section4subsection2subsectionitem5)" />
    <var name="section4subsection2add" pre="section4.AddItem(section4subsection2)" />
    <var name="section4XBRLConceptNameSet" pre="section4.SetConceptName('uk-gaap:NetDebtFunds')" />
    <var name="section4XBRLPeriodSet" pre="section4.SetPeriod('Start')" />
    <var name="section4XBRLReverseSignSet" pre="section4.SetReverseSign(true)" />
    <var name="section4add" pre="smartTable.AddTableBlock(section4)" />
    <var name="section5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('NetDebtCFwd', '&lt;para&gt;Net &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;funds/(debt)&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; at &lt;ws/&gt;&lt;inline condition=&quot;reportHelper.IsAnnual&quot;&gt;&lt;data&gt;reportHelper.CurrentPeriod.EndDate.Value.ToString(&amp;apos;d MMMM&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;reportHelper.IsAnnual = false&quot;&gt;end of period&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.Always, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, 'AnalysisOfNetDebt')" />
    <var name="section5item1" pre="section5.AddTotalItem(section3)" />
    <var name="section5item2" pre="section5.AddTotalItem(section4)" />
    <var name="section5XBRLConceptNameSet" pre="section5.SetConceptName('uk-gaap:NetDebtFunds')" />
    <var name="section5XBRLPeriodSet" pre="section5.SetPeriod('End')" />
    <var name="section5XBRLReverseSignSet" pre="section5.SetReverseSign(true)" />
    <var name="section5add" pre="smartTable.AddTableBlock(section5)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
				</report-template>
			</report-template>
			<report-template version="12" name="Notes to the Financial Statements" include-in-numbering="False" include-in-contents="True" include-in-report-map="True" isdir="True" condition="true" enabled="Always" section-name="Notes" page-break-before="False" keep-with-next-strength="0" template-guid="a45736ce-f5cf-4903-b72d-0bf3cf27eacf">
				<template><page-layout>
</page-layout></template>
				<report-template version="12" name="Notes header" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="NotesHeader" page-break-before="False" keep-with-next-strength="0" template-guid="079f62ba-f749-4406-a0d5-521edfa8d0b8">
					<template><add-to-body>
  <page-header>
    <para para-alignment="Centre" base-style="Page Header" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
      <data>reportHelper.Business.Name</data>
      <inline condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].HasValue and&#xD;&#xA;&#xD;&#xA;reportHelper.Business.Name !=&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].Value">
        <br />trading as <ws /><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|General|General|Tradingname|Current Period")[0]</data><ws /></inline>
      <br />
      <inline condition="report.GetSection('Notes') != null">
        <data>report.GetSection('Notes').Description</data>
      </inline>
      <ws /> for the <ws /><inline condition="reportHelper.CurrentPeriod.IsYear">Year Ended <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data></inline><inline condition="reportHelper.CurrentPeriod.IsYear=false">Period from <ws /><data>reportHelper.CurrentPeriod.StartDate.Value</data><ws /> to <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data></inline><inline condition="report.GetSection('Notes') != null and (header.CurrentPage != report.GetSection('Notes').PageNumberFrom)" font-style="+italic"><br /><inline para-alignment="Left" font-style="+italic">......... continued</inline></inline></para>
  </page-header>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="Notes footer" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="NotesFooter" page-break-before="False" keep-with-next-strength="0" template-guid="b6a834ce-e99f-492e-9428-1d27e6682c95">
					<template><add-to-body>
  <page-footer>
    <para base-style="Page Footer" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
      Page <ws /><data>
		footer.CurrentPage
	</data></para>
  </page-footer>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="Accounting policies" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="true" enabled="Always" section-name="AccountingPolicies" page-break-before="False" keep-with-next-strength="0" template-guid="55e4f0b4-06c4-4519-aa47-e87867b2d875">
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Basis of preparation" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|BasisOfPreparation|PreparationOfAccounts|PreparationOfAccounts|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="BasisOfPreparation" page-break-before="False" keep-with-next-strength="0" template-guid="5ccd7618-968e-49d5-bf59-60cf6dc17b64">
						<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|BasisOfPreparation')" xbrl-concept="uk-gaap:StatementOnBasisMeasurementPreparationAccounts" xbrl-period="CurrentPeriod">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|AccountingPolicies|BasisOfPreparation|PreparationOfAccounts|PreparationOfAccounts|Current Period")[0].Value</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|BasisOfPreparation|PreparationOfAccounts|PreparationOfAccounts|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|BasisOfPreparation')" toggle-expand-on-click="true" base-style="Link To Data">
	Basis of prepation accounting policy
	</para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Exemption from preparing a cash flow statement" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|BasisofPreparation|Exemptions|CashFlowGroupExemption|Current Period&quot;)[0].Value = true) or (reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|BasisofPreparation|Exemptions|CashFlowSizeExemption|Current Period&quot;)[0].Value =true)" enabled="Conditional" section-name="CashFlowExemption" page-break-before="False" keep-with-next-strength="0" template-guid="4fe7f86f-8b04-4919-87fc-789cddce6f75">
						<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para para-alignment="Full" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|BasisOfPreparation')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:CompanyExemptFromPreparingCashFlowStatementUnderFRS1" xbrl-period="CurrentPeriod">
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|BasisofPreparation|Exemptions|CashFlowGroupExemption|Current Period&quot;)[0].Value = true&#xD;&#xA;&#xD;&#xA;and &#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|BasisofPreparation|Exemptions|CashFlowSizeExemption|Current Period&quot;)[0].Value =false">The company is exempt from preparing a cash flow statement as 90% or more of the voting rights are held within the group.</inline>
    <ws />
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|BasisofPreparation|Exemptions|CashFlowSizeExemption|Current Period&quot;)[0].Value =true&#xD;&#xA;&#xD;&#xA;and CompanySize = 'Small'">The accounts do not include a cash flow statement because the company, as a small reporting entity, is exempt from the requirements to prepare such a statement.</inline>
  </para>
  <para condition="((reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|BasisofPreparation|Exemptions|CashFlowGroupExemption|Current Period')[0].Value = true) or (reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|BasisofPreparation|Exemptions|CashFlowSizeExemption|Current Period')[0].Value =true)) = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|BasisOfPreparation')" toggle-expand-on-click="true" base-style="Link To Data">
	Cash flow exemption
	</para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Exemption from preparing group accounts " include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|BasisOfPreparation|Exemptions|SmallGroupExemption|Current Period&quot;)[0].Value = true" enabled="Conditional" section-name="GroupExemption" page-break-before="False" keep-with-next-strength="0" template-guid="22c5c8d9-1992-40fc-a26e-cd7ce283cee6">
						<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|BasisOfPreparation')">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para para-alignment="Full" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|BasisOfPreparation')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:ExplanationIfAnEntityWithSubsidiariesNotRequiredToPrepareGroupAccounts" xbrl-period="CurrentPeriod">
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|BasisOfPreparation|Exemptions|SmallGroupExemption|Current Period&quot;)[0].Value = true">The company is part of a small group. The company has taken advantage of the exemption provided by Section 399 of the Companies Act 2006 and has not prepared group accounts.</inline>
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|BasisOfPreparation|Exemptions|LargerGroupExemption|Current Period&quot;)[0].Value = true&#xD;&#xA;&#xD;&#xA;and &#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|BasisOfPreparation|Exemptions|SmallGroupExemption|Current Period&quot;)[0].Value = false">The company has taken exemption from preparing group accounts as it is included in consolidated accounts for a larger group which are drawn up as full consolidated audited accounts which are filed at Companies House.</inline>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|BasisOfPreparation|Exemptions|SmallGroupExemption|Current Period')[0].Value = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|BasisOfPreparation')" toggle-expand-on-click="true" base-style="Link To Data">
 Exemption from preparing group accounts
	</para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Departures from Companies Act requirements" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|BasisofPreparation|DeparturesfromCompaniesAct|DeparturesFromCompaniesAct|Rows|*')[0].HasValue" enabled="Conditional" section-name="Departures from Companies Act" page-break-before="False" keep-with-next-strength="0" template-guid="4d4803cc-e247-4749-a922-696e02f538ad">
						<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <section tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|BasisOfPreparation')">
    <table>
      <table-row-iterator iterate-over="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|BasisofPreparation|DeparturesfromCompaniesAct|DeparturesFromCompaniesAct|Rows|*')" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
        <table-column-iterator iterate-over="item.Children" instance-name="child" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
          <table-row>
            <table-cell>
              <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:TrueFairOverridesGrouping">
                <inline xbrl-concept="uk-gaap:DescriptionNatureReasonsForDepartureFromStandardItsEffect" xbrl-period="CurrentPeriod">
                  <data>child.Children[0].Value</data>
                </inline>
              </para>
            </table-cell>
          </table-row>
        </table-column-iterator>
      </table-row-iterator>
    </table>
  </section>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|BasisofPreparation|DeparturesfromCompaniesAct|DeparturesFromCompaniesAct|Rows|*')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|BasisOfPreparation')" toggle-expand-on-click="true" base-style="Link To Data">
 Departures from Companies Act
	</para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Changes in accounting policy" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|BasisofPreparation|ChangesinAccountingPolicy|ChangesInAccountingPolicy|Rows|*')[0].HasValue" enabled="Conditional" section-name="ChangesInAccountingPolicy" page-break-before="False" keep-with-next-strength="0" template-guid="a2466aa4-d556-4d69-8f18-70f9ffc4cad9">
						<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <section tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|BasisOfPreparation')">
    <table>
      <table-row-iterator iterate-over="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|BasisofPreparation|ChangesinAccountingPolicy|ChangesInAccountingPolicy|Rows|*')" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
        <table-column-iterator iterate-over="item.Children" instance-name="child" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
          <table-row>
            <table-cell>
              <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:AccountingPolicyChangesGrouping">
                <inline xbrl-concept="uk-gaap:DescriptionChangeInAccountingPolicyItsImpact" xbrl-period="CurrentPeriod">
                  <data>child.Children[0].Value</data>
                </inline>
              </para>
            </table-cell>
          </table-row>
        </table-column-iterator>
      </table-row-iterator>
    </table>
  </section>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|BasisofPreparation|ChangesinAccountingPolicy|ChangesInAccountingPolicy|Rows|*')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|BasisOfPreparation')" toggle-expand-on-click="true" base-style="Link To Data">
 Changes in accounting policy
	</para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Going concern" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="'No going concern policy required'=reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|GoingConcern|GoingConcern|GoingConcernOptions|Current Period&quot;)[0].Value  =  false" enabled="Conditional" section-name="GoingConcern" page-break-before="False" keep-with-next-strength="0" template-guid="8d1fc6cd-7a1e-44f6-9a66-4372b96f784b">
						<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|GoingConcern')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" condition="'Prepared on a going concern basis'  =  reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|GoingConcern|GoingConcern|GoingConcernOptions|Current Period&quot;)[0].Value">
    <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("Disclosure|AccountingPolicies|GoingConcern|GoingConcern|GoingConcern|Current Period")[0].Value</data>
  </para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|GoingConcern')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" condition="'Not prepared on a going concern basis'  =  reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|GoingConcern|GoingConcern|GoingConcernOptions|Current Period&quot;)[0].Value" xbrl-concept="uk-gaap:GoingConcernStatements" xbrl-period="CurrentPeriod">
    <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("Disclosure|AccountingPolicies|GoingConcern|GoingConcern|NonGoingConcern|Current Period")[0].Value</data>
  </para>
  <para condition="'No going concern policy required'=reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|GoingConcern|GoingConcern|GoingConcernOptions|Current Period')[0].Value" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|GoingConcern')" toggle-expand-on-click="true" base-style="Link To Data">
 Going concern
	</para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Turnover" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|RevenueRecognition|Turnover|Turnover|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="TurnoverAccountingPolicy" page-break-before="False" keep-with-next-strength="0" template-guid="fc3dd35e-06d9-4879-b833-9075a6722930">
						<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|RevenueRecognition')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:TurnoverPolicy" xbrl-period="CurrentPeriod">
    <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("Disclosure|AccountingPolicies|RevenueRecognition|Turnover|Turnover|Current Period")[0].Value</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|RevenueRecognition|Turnover|Turnover|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|RevenueRecognition')" toggle-expand-on-click="true" base-style="Link To Data">
 Turnover accounting policy
	</para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Government grants" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|RevenueRecognition|Grants|Governmentgrants|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="GovernmentGrants" page-break-before="False" keep-with-next-strength="0" template-guid="9c979a9d-6ed9-4336-ae78-c2b92af57d67">
						<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|RevenueRecognition')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:GovernmentGrantPolicies" xbrl-period="CurrentPeriod">
    <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("Disclosure|AccountingPolicies|RevenueRecognition|Grants|GovernmentGrants|Current Period")[0].Value</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|RevenueRecognition|Grants|Governmentgrants|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|RevenueRecognition')" toggle-expand-on-click="true" base-style="Link To Data">
 Government grants accounting policy
	</para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Other grants" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|RevenueRecognition|Grants|Othergrants|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="OtherGrants" page-break-before="False" keep-with-next-strength="0" template-guid="8e151836-b19f-4f45-9ab0-fb16f1c26c5a">
						<template><add-to-body>
  <section xbrl-concept="uk-gaap:OtherSpecificAccountingPolicyGrouping">
    <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:TitleOtherSpecificAccountingPolicy" xbrl-period="CurrentPeriod">
      Other grants
    </para>
    <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|RevenueRecognition')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:ContentOtherSpecificAccountingPolicy" xbrl-period="CurrentPeriod">
      <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("Disclosure|AccountingPolicies|RevenueRecognition|Grants|OtherGrants|Current Period")[0].Value</data>
    </para>
  </section>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|RevenueRecognition|Grants|Othergrants|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|RevenueRecognition')" toggle-expand-on-click="true" base-style="Link To Data">
 Other grants accounting policy
	</para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Goodwill" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|FixedAssetsandInvestments|Goodwill|Goodwill|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="Goodwill" page-break-before="False" keep-with-next-strength="0" template-guid="a6e3c8ee-c2ed-4f0c-a84c-98078d10b899">
						<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|FixedAssetsandInvestments')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
    <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("Disclosure|AccountingPolicies|FixedAssetsandInvestments|Goodwill|Goodwill|Current Period")[0].Value</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|FixedAssetsandInvestments|Goodwill|Goodwill|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|FixedAssetsandInvestments')" toggle-expand-on-click="true" base-style="Link To Data">
 Goodwill accounting policy
	</para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Amortisation" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryRange(500,539).HasTransactions" enabled="Conditional" section-name="Amortisation" page-break-before="False" keep-with-next-strength="0" template-guid="1e265e1e-ac8a-407d-9b8d-7fa5ef0258b4">
						<variables>
							<variable name="list">reporting.queries.client.lookupaccountingperioddata("Disclosure|AccountingPolicies|FixedAssetsAndInvestments|Amortisation|MethodsAndRates|Rows|*")</variable>
						</variables>
						<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|FixedAssetsAndInvestments|Amortisation|Amortisation|Current Period')[0].HasValue = false" toggle-expand-on-click="true" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|FixedAssetsAndInvestments')" para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" base-style="Link To Data">
	General amortisation accounting policy
	</para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|FixedAssetsAndInvestments')" para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|AccountingPolicies|FixedAssetsAndInvestments|Amortisation|Amortisation|Current Period")[0].Value</data>
  </para>
  <section condition="list[0].HasValue = false" toggle-expand-on-click="true" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|FixedAssetsAndInvestments')" base-style="Link To Data">
    <para>
		Amortisation rates
	</para>
  </section>
  <section condition="list[0].HasValue = true" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|FixedAssetsAndInvestments')">
    <table>
      <table-row base-style="Table Column Heading">
        <table-cell align="Bottom-left">
          <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Asset class</para>
        </table-cell>
        <table-cell align="Bottom-left">
          <para para-alignment="Full" outer-left-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Amortisation method and rate</para>
        </table-cell>
      </table-row>
      <table-row-iterator iterate-over="list" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
        <var name="AssetClass" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|XBRLAssetClass|Current Period')[0].Value" />
        <var name="XBRLAssetClass" pre="&#xD;&#xA;			&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;	if AssetClass = 'Net goodwill' then 'uk-gaap:NetGoodwill' else&#xD;&#xA;        if AssetClass = 'Positive goodwill' then 'uk-gaap:PositiveGoodwill' else&#xD;&#xA;        if AssetClass = 'Negative goodwill' then 'uk-gaap:NegativeGoodwill' else&#xD;&#xA;        if AssetClass = 'Intangible assets other than goodwill' then 'uk-gaap:IntangibleAssetsOtherThanGoodwill' else&#xD;&#xA;        if AssetClass = 'Development costs, patents and similar' then 'uk-gaap:DevelopmentCostsPatentsSimilar' else&#xD;&#xA;        if AssetClass = 'Development costs' then 'uk-gaap:DevelopmentCosts' else&#xD;&#xA;        if AssetClass = 'Patents, concessions, licences, trade marks and similar' then 'uk-gaap:PatentsConcessionsLicencesTradeMarksSimilar' else&#xD;&#xA;        if AssetClass = 'Concessions, licences, franchises' then 'uk-gaap:ConcessionsLicencesFranchises' else&#xD;&#xA;        if AssetClass = 'Patents, copyrights, trademarks and similar' then 'uk-gaap:PatentsCopyrightsTrademarksSimilar' else&#xD;&#xA;        if AssetClass = 'Intellectual property' then 'uk-gaap:IntellectualProperty' else&#xD;&#xA;        if AssetClass = 'Other exploitation rights' then 'uk-gaap:OtherExploitationRights' else&#xD;&#xA;        if AssetClass = 'Mastheads and publishing titles' then 'uk-gaap:MastheadsPublishingTitles' else&#xD;&#xA;        if AssetClass = 'Brand names' then 'uk-gaap:BrandNames' else&#xD;&#xA;        if AssetClass = 'Customer relationships' then 'uk-gaap:CustomerRelationships' else&#xD;&#xA;        if AssetClass = 'Payments on account, intangible fixed assets' then 'uk-gaap:PaymentsOnAccountIntangibleFixedAssets' else&#xD;&#xA;        if AssetClass = 'Other intangible fixed assets' then 'uk-gaap:OtherIntangibleFixedAssets' else&#xD;&#xA;	'uk-gaap:AllIntangibleFixedAssetsDefault'" />
        <table-row>
          <table-cell align="top-left">
            <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
              <data>reporting.queries.client.lookupaccountingperioddata(item, "*|Description|Current Period")[0].Value</data>
            </para>
          </table-cell>
          <table-cell align="top-left">
            <para para-alignment="Full" outer-left-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:DescriptionGoodwillIntangibleAssetAmortisationMethodPeriods" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:IntangibleFixedAssetsHypercube" xbrl-dimensions="uk-gaap:IntangibleFixedAssetClassesDimension=XBRLAssetClass">
              <data>reporting.queries.client.lookupaccountingperioddata(item, "*|MethodsAndRates|Current Period")[0].Value</data>
            </para>
          </table-cell>
        </table-row>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Depreciation" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryRange(540,619).HasTransactions" enabled="Conditional" section-name="Depreciation" page-break-before="False" keep-with-next-strength="0" template-guid="4d225838-40cb-4b23-81a8-771e2b2f91db">
						<variables>
							<variable name="list">reporting.queries.client.lookupaccountingperioddata("Disclosure|AccountingPolicies|FixedAssetsAndInvestments|Depreciation|MethodsAndRates|Rows|*")</variable>
						</variables>
						<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|FixedAssetsAndInvestments|Depreciation|Depreciation|Current Period')[0].HasValue = false" toggle-expand-on-click="true" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|FixedAssetsAndInvestments')" base-style="Link To Data">
	
General depreciation accounting policy

</para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|FixedAssetsAndInvestments')" para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|AccountingPolicies|FixedAssetsAndInvestments|Depreciation|Depreciation|Current Period")[0].Value</data>
  </para>
  <section condition="list[0].HasValue = false" toggle-expand-on-click="true" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|FixedAssetsAndInvestments')" base-style="Link To Data">
    <para>
		Depreciation rates
	</para>
  </section>
  <section condition="list[0].HasValue = true" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|FixedAssetsAndInvestments')">
    <table>
      <table-row base-style="Table Column Heading">
        <table-cell align="Bottom-left">
          <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Asset class</para>
        </table-cell>
        <table-cell align="Bottom-left">
          <para para-alignment="Full" outer-left-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Depreciation method and rate</para>
        </table-cell>
      </table-row>
      <table-row-iterator iterate-over="list" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
        <var name="AssetClass" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|XBRLAssetClass|Current Period')[0].Value" />
        <var name="XBRLAssetClass" pre="&#xD;&#xA;			if AssetClass = 'Land and Buildings' then 'uk-gaap:LandBuildings' else &#xD;&#xA;			if AssetClass = 'Land' then 'uk-gaap:Land' else&#xD;&#xA;			if AssetClass = 'Buildings' then 'uk-gaap:Buildings' else&#xD;&#xA;			if AssetClass = 'Investment Properties' then 'uk-gaap:InvestmentProperties' else&#xD;&#xA;			if AssetClass = 'Properties under construction' then 'uk-gaap:PropertiesUnderConstruction' else&#xD;&#xA;			if AssetClass = 'Vehicles, plant and machinery' then 'uk-gaap:VehiclesPlantMachinery' else&#xD;&#xA;			if AssetClass = 'Plant and machinery' then 'uk-gaap:PlantMachinery' else&#xD;&#xA;			if AssetClass = 'Vehicles' then 'uk-gaap:Vehicles' else&#xD;&#xA;			if AssetClass = 'Aircraft' then 'uk-gaap:Aircraft' else&#xD;&#xA;			if AssetClass = 'Boats' then 'uk-gaap:Boats' else&#xD;&#xA;			if AssetClass = 'Motor vehicles' then 'uk-gaap:MotorVehicles' else&#xD;&#xA;			if AssetClass = 'Commercial motor vehicles' then 'uk-gaap:CommercialMotorVehicles' else&#xD;&#xA;			if AssetClass = 'Motor cars' then 'uk-gaap:MotorCars' else&#xD;&#xA;			if AssetClass = 'Other vehicles' then 'uk-gaap:OtherVehicles' else&#xD;&#xA;			if AssetClass = 'Fixtures, fittings, tools and equipment' then 'uk-gaap:FixturesFittingsToolsEquipment' else&#xD;&#xA;			if AssetClass = 'Fixtures and fittings' then 'uk-gaap:FixturesFittings' else&#xD;&#xA;			if AssetClass = 'Tools and equipment' then 'uk-gaap:ToolsEquipment' else&#xD;&#xA;			if AssetClass = 'Office equipment' then 'uk-gaap:OfficeEquipment' else&#xD;&#xA;			if AssetClass = 'Computer equipment' then 'uk-gaap:ComputerEquipment' else &#xD;&#xA;			if AssetClass = 'Payments on account and assets under development' then 'uk-gaap:PaymentsOnAccountAssetsUnderDevelopment' else&#xD;&#xA;			if AssetClass = 'Payments on account' then 'uk-gaap:PaymentsOnAccount' else&#xD;&#xA;			if AssetClass = 'Improvement or development of assets' then 'uk-gaap:ImprovementsOrDevelopmentAssets' else&#xD;&#xA;			if AssetClass = 'Tangible exploration or evaluation assets' then 'uk-gaap:TangibleExplorationOrEvaluationAssets' else&#xD;&#xA;			if AssetClass = 'Other tangible fixed assets' then 'uk-gaap:OtherTangibleFixedAssets' else&#xD;&#xA;			'uk-gaap:AllTangibleFixedAssetsDefault'" />
        <table-row>
          <table-cell align="top-left">
            <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
              <data>reporting.queries.client.lookupaccountingperioddata(item, "*|Description|Current Period")[0].Value</data>
            </para>
          </table-cell>
          <table-cell align="top-left">
            <para para-alignment="Full" outer-left-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:DescriptionDepreciationMethodRateOrUsefulEconomicLifeForTangibleFixedAssets" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:TangibleFixedAssetsHypercube" xbrl-dimensions="uk-gaap:TangibleFixedAssetClassesDimension=XBRLAssetClass">
              <data>reporting.queries.client.lookupaccountingperioddata(item, "*|MethodsAndRates|Current Period")[0].Value</data>
            </para>
          </table-cell>
        </table-row>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Research and development" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|FixedAssetsandInvestments|ResearchandDevelopment|ResearchandDevelopment|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="ResearchAndDevelopment" page-break-before="False" keep-with-next-strength="0" template-guid="d18f2024-60ab-44e8-87bb-b26e4dd991d8">
						<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|FixedAssetsandInvestments')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:ResearchDevelopmentPolicy" xbrl-period="CurrentPeriod">
    <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("Disclosure|AccountingPolicies|FixedAssetsandInvestments|ResearchandDevelopment|ResearchandDevelopment|Current Period")[0].Value</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|FixedAssetsandInvestments|ResearchandDevelopment|ResearchandDevelopment|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|FixedAssetsandInvestments')" toggle-expand-on-click="true" base-style="Link To Data">
 Research and development accounting policy
	</para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Investment properties" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|FixedAssetsandInvestments|InvestmentProperties|InvestmentProperties|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="InvestmentProperties" page-break-before="False" keep-with-next-strength="0" template-guid="01ee9179-87ef-49c8-9dee-7218d9e6defb">
						<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|FixedAssetsandInvestments')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:InvestmentPropertiesPolicy" xbrl-period="CurrentPeriod">
    <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("Disclosure|AccountingPolicies|FixedAssetsandInvestments|InvestmentProperties|InvestmentProperties|Current Period")[0].Value</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|FixedAssetsandInvestments|InvestmentProperties|InvestmentProperties|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|FixedAssetsandInvestments')" toggle-expand-on-click="true" base-style="Link To Data">
Investment properties accounting policy
	</para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Fixed asset investments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|FixedAssetsandInvestments|FixedAssetInvestment|FixedAssetInvestment|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="FixedAssetInvestments" page-break-before="False" keep-with-next-strength="0" template-guid="c4082896-8677-47c7-93fa-187ff7770666">
						<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|FixedAssetsandInvestments')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:FixedAssetInvestmentsPolicy" xbrl-period="CurrentPeriod">
    <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("Disclosure|AccountingPolicies|FixedAssetsandInvestments|FixedAssetInvestment|FixedAssetInvestment|Current Period")[0].Value</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|FixedAssetsandInvestments|FixedAssetInvestment|FixedAssetInvestment|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|FixedAssetsandInvestments')" toggle-expand-on-click="true" base-style="Link To Data">
Fixed asset investments accounting policy
	</para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Current asset investments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|FixedAssetsandInvestments|CurrentAssetInvestment|CurrentAssetInvestment|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="CAInvestments" page-break-before="False" keep-with-next-strength="0" template-guid="778f6166-5b3a-4665-9bef-41f00798ab64">
						<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|FixedAssetsandInvestments')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:CurrentAssetsInvestmentsPolicy" xbrl-period="CurrentPeriod">
    <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("Disclosure|AccountingPolicies|FixedAssetsandInvestments|CurrentAssetInvestment|CurrentAssetInvestment|Current Period")[0].Value</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|FixedAssetsandInvestments|CurrentAssetInvestment|CurrentAssetInvestment|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|FixedAssetsandInvestments')" toggle-expand-on-click="true" base-style="Link To Data">
Current asset investments accounting policy
	</para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Stocks, work in progress and long-term contracts" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|StockWIPLongTermContracts|StockWIPLongTermContracts|StockWIPLongTermContracts|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="StocksWIPAndLongTermContracts" page-break-before="False" keep-with-next-strength="0" template-guid="6c91466a-9a9c-43bf-b81e-64851ae8ddaf">
						<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|StockWIPLongTermContracts')" para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:StocksWorkInProgressLong-termContractsPolicy" xbrl-period="CurrentPeriod">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|AccountingPolicies|StockWIPLongTermContracts|StockWIPLongTermContracts|StockWIPLongTermContracts|Current Period")[0].Value</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|StockWIPLongTermContracts|StockWIPLongTermContracts|StockWIPLongTermContracts|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|StockWIPLongTermContracts')" toggle-expand-on-click="true" base-style="Link To Data">
Stocks accounting policy
	</para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Deferred tax" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|DeferredTaxPolicy|DeferredTax|DeferredTax|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="DeferredTax" page-break-before="False" keep-with-next-strength="0" template-guid="594f0e9a-d87f-4105-9866-231cf4f0523e">
						<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para para-alignment="Full" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|DeferredTaxPolicy')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:TaxationDeferredTaxationPolicy" xbrl-period="CurrentPeriod">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|AccountingPolicies|DeferredTaxPolicy|DeferredTax|DeferredTax|Current Period")[0].Value</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|DeferredTaxPolicy|DeferredTax|DeferredTax|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|DeferredTaxPolicy')" toggle-expand-on-click="true" base-style="Link To Data">
Deferred tax accounting policy
	</para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Foreign currency" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|ForeignCurrency|ForeignCurrency|ForeignCurrency|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="ForeignCurrency" page-break-before="False" keep-with-next-strength="0" template-guid="f6f7bdd2-b36a-4138-9cb5-9b8f933b3fc9">
						<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|ForeignCurrency')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:ForeignCurrencyTranslationPolicies" xbrl-period="CurrentPeriod">
    <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("Disclosure|AccountingPolicies|ForeignCurrency|ForeignCurrency|ForeignCurrency|Current Period")[0].Value</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|ForeignCurrency|ForeignCurrency|ForeignCurrency|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|ForeignCurrency')" toggle-expand-on-click="true" base-style="Link To Data">
Foreign currency accounting policy
	</para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Hire purchase and leasing" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|HPandLeasing|LesseePolicies|Lesseeoperatingleasepolicy|Current Period&quot;)[0].HasValue)or(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|HPandLeasing|LesseePolicies|LesseeFLHPPolicy|Current Period&quot;)[0].HasValue)or(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|HPAndLeasing|LessorPolicies|OperatingLeasePolicyRequired|Current Period&quot;)[0].Value =true)or(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|HPAndLeasing|LessorPolicies|FLHPPolicyRequired|Current Period&quot;)[0].Value =true)" enabled="Conditional" section-name="HirePurchaseAndLeasing" page-break-before="False" keep-with-next-strength="0" template-guid="81e712fd-ab73-4704-8d24-7b65bf74e826">
						<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|HPandLeasing')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|HPandLeasing|LesseePolicies|Lesseeoperatingleasepolicy|Current Period&quot;)[0].HasValue" para-alignment="Left" xbrl-concept="uk-gaap:LesseeOperatingLeasePolicy" xbrl-period="CurrentPeriod">
    <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("Disclosure|AccountingPolicies|HPandLeasing|LesseePolicies|Lesseeoperatingleasepolicy|Current Period")[0].Value</data>
  </para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|HPandLeasing')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|HPandLeasing|LesseePolicies|LesseeFLHPPolicy|Current Period')[0].HasValue" xbrl-concept="uk-gaap:LesseeFinanceLeaseHirePurchaseContractsPolicy" xbrl-period="CurrentPeriod">
    <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("Disclosure|AccountingPolicies|HPandLeasing|LesseePolicies|LesseeFLHPPolicy|Current Period")[0].Value</data>
  </para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|HPandLeasing')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|HPAndLeasing|LessorPolicies|OperatingLeasePolicyRequired|Current Period')[0].Value=true" xbrl-concept="uk-gaap:LessorOperatingLeasePolicy" xbrl-period="CurrentPeriod">
    <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("Disclosure|AccountingPolicies|HPandLeasing|LessorPolicies|LessorOperatingLease|Current Period")[0].Value</data>
  </para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|HPandLeasing')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|HPAndLeasing|LessorPolicies|FLHPPolicyRequired|Current Period')[0].Value=true" xbrl-concept="uk-gaap:LessorFinanceLeaseHirePurchaseContractsPolicy" xbrl-period="CurrentPeriod">
    <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("Disclosure|AccountingPolicies|HPandLeasing|LessorPolicies|LessorFLHP|Current Period")[0].Value</data>
  </para>
  <para condition="((reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|HPandLeasing|LesseePolicies|Lesseeoperatingleasepolicy|Current Period')[0].HasValue)or(reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|HPandLeasing|LesseePolicies|LesseeFLHPPolicy|Current Period')[0].HasValue)or(reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|HPAndLeasing|LessorPolicies|OperatingLeasePolicyRequired|Current Period')[0].Value =true)or(reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|HPAndLeasing|LessorPolicies|FLHPPolicyRequired|Current Period')[0].Value =true)) = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|HPandLeasing')" toggle-expand-on-click="true" base-style="Link To Data">
HP and leasing accounting policy
	</para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Financial instruments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|FinancialInstrumentsPolicy|FinancialInstruments|FinancialInstruments|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="FinancialInstrumentsPolicy" page-break-before="False" keep-with-next-strength="0" template-guid="e0c40143-97a8-460b-9a27-38e6d3735681">
						<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data>report.Sections.ActiveSection.Description</data>
  </para>
  <para para-alignment="Full" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|FinancialInstrumentsPolicy')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:FinancialInstrumentsPolicy" xbrl-period="CurrentPeriod">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|AccountingPolicies|FinancialInstrumentsPolicy|FinancialInstruments|FinancialInstruments|Current Period")[0].Value</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|FinancialInstrumentsPolicy|FinancialInstruments|FinancialInstruments|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|FinancialInstrumentsPolicy')" toggle-expand-on-click="true" base-style="Link To Data">
Financial instruments accounting policy
	</para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Pensions" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|Pensions|Pensions|Pensions|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="Pensions" page-break-before="False" keep-with-next-strength="0" template-guid="1ca0b2f2-9ed1-4713-be1d-16f83186d726">
						<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data para-alignment="Left">report.Sections.ActiveSection.Description</data>
  </para>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|Pensions')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:PensionsSchemePolicy" xbrl-period="CurrentPeriod">
    <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("Disclosure|AccountingPolicies|Pensions|Pensions|Pensions|Current Period")[0].Value</data>
  </para>
  <para condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|AccountingPolicies|Pensions|Pensions|Pensions|Current Period')[0].HasValue = false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AccountingPolicies|Pensions')" toggle-expand-on-click="true" base-style="Link To Data">
Pensions accounting policy
	</para>
</add-to-body></template>
					</report-template>
				</report-template>
				<report-template version="12" name="Turnover" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="HasExportsCY or HasExportsPY or ((HasBusinessSegmentsCY or HasBusinessSegmentsPY) and CompanySize != 'Small')" enabled="Conditional" section-name="Turnover" page-break-before="False" keep-with-next-strength="0" template-guid="596bb7d1-be59-4214-ba77-869db2364334">
					<variables>
						<variable name="DomesticSales">reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange(1,9)</variable>
						<variable name="HasBusinessSegmentsCY">(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("002").Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("002").Totals[0].HasTransactions)

or


(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("003").Totals!=null

and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("003").Totals[0].HasTransactions)

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("011").Totals!=null

and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("011").Totals[0].HasTransactions)

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("012").Totals!=null 

and

reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("012").Totals[0].HasTransactions)

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("021").Totals!=null

and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("021").Totals[0].HasTransactions)

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("022").Totals!=null

and

reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("022").Totals[0].HasTransactions)</variable>
						<variable name="SalesEurope">reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange(10,19)</variable>
						<variable name="HasBusinessSegmentsPY">reportHelper.HasPriorPeriod and

((reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("002").Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("002").Totals[1].HasTransactions)

or


(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("003").Totals!=null

and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("003").Totals[1].HasTransactions)

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("011").Totals!=null

and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("011").Totals[1].HasTransactions)

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("012").Totals!=null 

and

reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("012").Totals[1].HasTransactions)

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("021").Totals!=null

and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("021").Totals[1].HasTransactions)

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("022").Totals!=null

and

reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("022").Totals[1].HasTransactions))</variable>
						<variable name="SalesROW">reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange(20,29)</variable>
						<variable name="HasExportsCY">(SalesEurope.Totals !=null and SalesEurope.Totals[0].HasTransactions)

or

(SalesROW.Totals!=null and
SalesROW.Totals[0].HasTransactions)</variable>
						<variable name="HasExportsPY">reportHelper.HasPriorPeriod and ((SalesEurope.Totals !=null and SalesEurope.Totals[1].HasTransactions)
or

(SalesROW.Totals!=null and
SalesROW.Totals[1].HasTransactions))</variable>
					</variables>
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Exports" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="CompanySize = 'Small' and HasExportsCY or HasExportsPY" enabled="Conditional" section-name="Exports" page-break-before="False" keep-with-next-strength="1" template-guid="f40de762-885f-4146-8083-29ec143b424a">
						<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">During the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /><inline xbrl-concept="uk-gaap:PercentageTurnoverAttributableToMarketsOutsideUK" xbrl-period="CurrentPeriod"><data base-style="Percentage">(SalesEurope.Totals[0].Value + SalesROW.Totals[0].Value) *100 /

(DomesticSales.Totals[0].Value + SalesEurope.Totals[0].Value + SalesROW.Totals[0].Value)</data></inline><inline base-style="Percentage"><ws /> of the company's turnover related to exports</inline><inline condition="reportHelper.HasPriorPeriod" base-style="Percentage"><ws /> (<data>reportHelper.PriorPeriod.EndDate.Value.Year</data><ws /> - <ws /><inline xbrl-concept="uk-gaap:PercentageTurnoverAttributableToMarketsOutsideUK" xbrl-period="PriorPeriod"><data>(SalesEurope.Totals[1].Value + SalesROW.Totals[1].Value) *100 /

(DomesticSales.Totals[1].Value + SalesEurope.Totals[1].Value + SalesROW.Totals[1].Value)</data></inline>
)</inline><inline base-style="Percentage">.</inline></para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Geographical" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="CompanySize != 'Small' and (HasExportsCY or HasExportsPY)" enabled="Conditional" section-name="GeographicalAnalysisOfTurnover" page-break-before="False" keep-with-next-strength="0" template-guid="2288dc6f-6a41-406f-b254-36214fcc6814">
						<template><add-to-body>
</add-to-body></template>
						<report-template version="12" name="Geographical text" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="GeographicalText" page-break-before="False" keep-with-next-strength="1" template-guid="68d98295-05a8-4a88-b28d-1cea4d39252e">
							<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">An analysis of turnover by geographical location is given below:</para>
</add-to-body></template>
						</report-template>
						<report-template version="12" name="Geographical values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="GeographicalValues" page-break-before="False" keep-with-next-strength="1" template-guid="d8d10f84-cad9-40c5-85a3-6a37ff577937">
							<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'TurnoverGeographical', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Geographical', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Sales - UK&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('001-009', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:GeographicSegmentRevenueByDestination')" />
    <var name="section1subsection1XBRLDimensionsSet" pre="section1subsection1.SetDimensions('uk-countries:CountriesDimension=uk-countries:UnitedKingdom')" />
    <var name="section1subsection1XBRLHypercubeNameSet" pre="section1subsection1.SetHypercubeName('uk-gaap:GeographicSegmentsIncomeDataHypercube')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Sales - Europe&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('010-019', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:GeographicSegmentRevenueByDestination')" />
    <var name="section1subsection2XBRLDimensionsSet" pre="section1subsection2.SetDimensions('uk-countries:CountriesDimension=uk-countries:RestEuropeOutsideUK')" />
    <var name="section1subsection2XBRLHypercubeNameSet" pre="section1subsection2.SetHypercubeName('uk-gaap:GeographicSegmentsIncomeDataHypercube')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Sales - Rest of world&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('020-029', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:GeographicSegmentRevenueByDestination')" />
    <var name="section1subsection3XBRLDimensionsSet" pre="section1subsection3.SetDimensions('uk-countries:CountriesDimension=uk-countries:RestWorldOutsideUK')" />
    <var name="section1subsection3XBRLHypercubeNameSet" pre="section1subsection3.SetHypercubeName('uk-gaap:GeographicSegmentsIncomeDataHypercube')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:GeographicSegmentRevenueByDestination')" />
    <var name="section1XBRLDimensionsSet" pre="section1.SetDimensions('uk-countries:CountriesDimension=uk-countries:AllCountries')" />
    <var name="section1XBRLHypercubeNameSet" pre="section1.SetHypercubeName('uk-gaap:GeographicSegmentsIncomeDataHypercube')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('OtherSalesIncome', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Other sales income&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other sales income&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('030-048', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('049-049', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem2add" pre="section2subsection1.AddItem(section2subsection1subsectionitem2)" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('GeographicalTotal', '&lt;para&gt;Turnover&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section3item1" pre="section3.AddTotalItem(section1)" />
    <var name="section3item2" pre="section3.AddTotalItem(section2)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:TurnoverGrossOperatingRevenue')" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
						</report-template>
					</report-template>
					<report-template version="12" name="Segmental" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="CompanySize != 'Small' and (HasBusinessSegmentsCY or HasBusinessSegmentsPY)" enabled="Conditional" section-name="SegmentalAnalysisOfTurnover" page-break-before="False" keep-with-next-strength="0" template-guid="1c22d04a-1c55-4df4-a99c-656d0376074c">
						<template><add-to-body>
</add-to-body></template>
						<report-template version="12" name="Segmental text" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="Segmental text" page-break-before="False" keep-with-next-strength="1" template-guid="514bd2e9-3bab-44cc-8460-00c5a0279718">
							<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">An analysis of turnover by class of business is given below:</para>
</add-to-body></template>
						</report-template>
						<report-template version="12" name="BusinessSegmentAnalysisTables" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="BusinessSegmentAnalysisTables" page-break-before="False" keep-with-next-strength="0" template-guid="464545a9-bc2d-4d72-bbb7-34e2a9db9f5f">
							<template><add-to-body>
</add-to-body></template>
							<report-template version="12" name="Business segment 1" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="Business segment 1" page-break-before="False" keep-with-next-strength="0" template-guid="99b25850-e241-4501-bcdf-d9410aab588f">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'TurnoverSegmental', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Text')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Table Text')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Table Text')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Table Text')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Table Text')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Table Text')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Table Text')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Table Text')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1XBRLConceptNameSet" pre="column1.SetConceptName('uk-gaap:NameBusinessSegment')" />
    <var name="column1XBRLDimensionsSet" pre="column1.SetDimensions('uk-gaap:BusinessSegmentsDimension=uk-gaap:BusinessSegment1')" />
    <var name="column1XBRLHypercubeNameSet" pre="column1.SetHypercubeName('uk-gaap:BusinessSegmentsBasicHypercube')" />
    <var name="column1XBRLPeriodSet" pre="column1.SetPeriod('CurrentPeriod')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLConceptNameSet" pre="column2.SetConceptName('uk-gaap:TurnoverGrossOperatingRevenue')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:BusinessSegmentsDimension=uk-gaap:BusinessSegment1')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:IncomeDataAllDimensionsHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLConceptNameSet" pre="column3.SetConceptName('uk-gaap:TurnoverGrossOperatingRevenue')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:BusinessSegmentsDimension=uk-gaap:BusinessSegment1')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:IncomeDataAllDimensionsHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('BusinessSegment1', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Business segment 1&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Business segment 1&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('001', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('011', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem2add" pre="section1subsection1.AddItem(section1subsection1subsectionitem2)" />
    <var name="section1subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('021', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem3add" pre="section1subsection1.AddItem(section1subsection1subsectionitem3)" />
    <var name="section1subsection1XBRLDimensionsSet" pre="section1subsection1.SetDimensions('uk-gaap:BusinessSegmentsDimension=uk-gaap:BusinessSegment1')" />
    <var name="section1subsection1XBRLHypercubeNameSet" pre="section1subsection1.SetHypercubeName('uk-gaap:BusinessSegmentsBasicHypercube')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Business segment 2" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="Business segment 2" page-break-before="False" keep-with-next-strength="0" template-guid="36b8516d-d9e0-4ba5-b287-352da89c3bea">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Text')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Table Text')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Table Text')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Table Text')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Table Text')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Table Text')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Table Text')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Table Text')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-left', 'bottom-left')" />
    <var name="column1XBRLConceptNameSet" pre="column1.SetConceptName('uk-gaap:NameBusinessSegment')" />
    <var name="column1XBRLDimensionsSet" pre="column1.SetDimensions('uk-gaap:BusinessSegmentsDimension=uk-gaap:BusinessSegment2')" />
    <var name="column1XBRLHypercubeNameSet" pre="column1.SetHypercubeName('uk-gaap:BusinessSegmentsBasicHypercube')" />
    <var name="column1XBRLPeriodSet" pre="column1.SetPeriod('CurrentPeriod')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLConceptNameSet" pre="column2.SetConceptName('uk-gaap:TurnoverGrossOperatingRevenue')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:BusinessSegmentsDimension=uk-gaap:BusinessSegment2')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:IncomeDataAllDimensionsHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLConceptNameSet" pre="column3.SetConceptName('uk-gaap:TurnoverGrossOperatingRevenue')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:BusinessSegmentsDimension=uk-gaap:BusinessSegment2')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:IncomeDataAllDimensionsHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('BusinessSegment2', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Business segment 2&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Sales - type 2, UK&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('002', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Sales - type 2, Europe&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('012', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Sales - type 2, rest of world&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('022', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Business segment 3" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="Business segment 3" page-break-before="False" keep-with-next-strength="0" template-guid="bb7f163a-e173-4bcd-a8be-db53d9e73dcf">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Text')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Table Text')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Table Text')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Table Text')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Table Text')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Table Text')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Table Text')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Table Text')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-left', 'bottom-left')" />
    <var name="column1XBRLConceptNameSet" pre="column1.SetConceptName('uk-gaap:NameBusinessSegment')" />
    <var name="column1XBRLDimensionsSet" pre="column1.SetDimensions('uk-gaap:BusinessSegmentsDimension=uk-gaap:BusinessSegment3')" />
    <var name="column1XBRLHypercubeNameSet" pre="column1.SetHypercubeName('uk-gaap:BusinessSegmentsBasicHypercube')" />
    <var name="column1XBRLPeriodSet" pre="column1.SetPeriod('CurrentPeriod')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLConceptNameSet" pre="column2.SetConceptName('uk-gaap:TurnoverGrossOperatingRevenue')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:BusinessSegmentsDimension=uk-gaap:BusinessSegment3')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:IncomeDataAllDimensionsHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLConceptNameSet" pre="column3.SetConceptName('uk-gaap:TurnoverGrossOperatingRevenue')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:BusinessSegmentsDimension=uk-gaap:BusinessSegment3')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:IncomeDataAllDimensionsHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('BusinessSegment2', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Business segment 3&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Sales - type 3, UK&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('003', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Sales - type 3, Europe&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('013', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Sales - type 3, rest of world&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('023', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Total turnover" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="Total turnover" page-break-before="False" keep-with-next-strength="0" template-guid="4496995b-b35e-49ad-8485-5ec8a5aea4e0">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total Overline')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total Overline')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-left', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('AllSegments', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Sales - UK&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('001-009', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Sales - Europe&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('010-019', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Sales - Rest of world&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('020-029', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('OtherSalesIncome', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Other sales income&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other sales income&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('030-048', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Exceptional income&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('049-049', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('Turnover', '&lt;para&gt;Turnover&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section3item1" pre="section3.AddTotalItem(section1)" />
    <var name="section3item2" pre="section3.AddTotalItem(section2)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:TurnoverGrossOperatingRevenue')" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
						</report-template>
					</report-template>
				</report-template>
				<report-template version="12" name="Cost of sales and operating expenses" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:filter[Acquisitions|Current Period&gt;0,Acquisitions|Prior Period&lt;&gt;0]&quot;,null, true).Count+reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:filter[Discontinued|Current Period&gt;0,Discontinued|Prior Period&lt;&gt;0]&quot;,null, true).Count &gt; 0 and FRSSE = false" enabled="Conditional" section-name="CostOfSalesAndOperatingExpenses" page-break-before="False" keep-with-next-strength="0" template-guid="0b050cc7-d9a8-4307-8403-82de3fb5217b">
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Continuing and discontinued analysis" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="ContinuingAndDiscontinuedAnalysis" page-break-before="False" keep-with-next-strength="0" template-guid="a94a992c-7843-49b9-8b3e-56cbbfc34b71">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'ContinuingAndDiscontinuedAnalysis', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('CostOfSales', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Cost of sales&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Continuing operations&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:item[1]|Continuing', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:item[1]|Acquisitions', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem2add" pre="section1subsection1.AddItem(section1subsection1subsectionitem2)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:CostSales')" />
    <var name="section1subsection1XBRLDimensionsSet" pre="section1subsection1.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:ContinuingOperationsIncludingAcquisitions')" />
    <var name="section1subsection1XBRLHypercubeNameSet" pre="section1subsection1.SetHypercubeName('uk-gaap:OperatingActivitiesExceptionalItemsAmortisationHypercube')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Discontinued operations&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:item[1]|Discontinued', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:CostSales')" />
    <var name="section1subsection2XBRLDimensionsSet" pre="section1subsection2.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:DiscontinuedOperations')" />
    <var name="section1subsection2XBRLHypercubeNameSet" pre="section1subsection2.SetHypercubeName('uk-gaap:OperatingActivitiesExceptionalItemsAmortisationHypercube')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:CostSales')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('DistributionCosts', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Distribution costs&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Continuing operations&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:item[2]|Continuing', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:item[2]|Acquisitions', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem2add" pre="section2subsection1.AddItem(section2subsection1subsectionitem2)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:DistributionCosts')" />
    <var name="section2subsection1XBRLDimensionsSet" pre="section2subsection1.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:ContinuingOperationsIncludingAcquisitions')" />
    <var name="section2subsection1XBRLHypercubeNameSet" pre="section2subsection1.SetHypercubeName('uk-gaap:OperatingActivitiesExceptionalItemsAmortisationHypercube')" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Discontinued operations&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:item[2]|Discontinued', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2XBRLConceptNameSet" pre="section2subsection2.SetConceptName('uk-gaap:DistributionCosts')" />
    <var name="section2subsection2XBRLDimensionsSet" pre="section2subsection2.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:DiscontinuedOperations')" />
    <var name="section2subsection2XBRLHypercubeNameSet" pre="section2subsection2.SetHypercubeName('uk-gaap:OperatingActivitiesExceptionalItemsAmortisationHypercube')" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2XBRLConceptNameSet" pre="section2.SetConceptName('uk-gaap:DistributionCosts')" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('AdministrativeExpenses', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Administrative expenses&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section3subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Continuing operations&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section3subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:item[3]|Continuing', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem1add" pre="section3subsection1.AddItem(section3subsection1subsectionitem1)" />
    <var name="section3subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:item[3]|Acquisitions', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection1subsectionitem2add" pre="section3subsection1.AddItem(section3subsection1subsectionitem2)" />
    <var name="section3subsection1XBRLConceptNameSet" pre="section3subsection1.SetConceptName('uk-gaap:AdministrativeExpenses')" />
    <var name="section3subsection1XBRLDimensionsSet" pre="section3subsection1.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:ContinuingOperationsIncludingAcquisitions')" />
    <var name="section3subsection1XBRLHypercubeNameSet" pre="section3subsection1.SetHypercubeName('uk-gaap:OperatingActivitiesExceptionalItemsAmortisationHypercube')" />
    <var name="section3subsection1add" pre="section3.AddItem(section3subsection1)" />
    <var name="section3subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Discontinued operations&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section3subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:item[3]|Discontinued', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section3subsection2subsectionitem1add" pre="section3subsection2.AddItem(section3subsection2subsectionitem1)" />
    <var name="section3subsection2XBRLConceptNameSet" pre="section3subsection2.SetConceptName('uk-gaap:AdministrativeExpenses')" />
    <var name="section3subsection2XBRLDimensionsSet" pre="section3subsection2.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:DiscontinuedOperations')" />
    <var name="section3subsection2XBRLHypercubeNameSet" pre="section3subsection2.SetHypercubeName('uk-gaap:OperatingActivitiesExceptionalItemsAmortisationHypercube')" />
    <var name="section3subsection2add" pre="section3.AddItem(section3subsection2)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:AdministrativeExpenses')" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <var name="section4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('OtherOperatingIncome', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Other operating income&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section4subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Continuing operations&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:item[4]|Continuing', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection1subsectionitem1add" pre="section4subsection1.AddItem(section4subsection1subsectionitem1)" />
    <var name="section4subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:item[4]|Acquisitions', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection1subsectionitem2add" pre="section4subsection1.AddItem(section4subsection1subsectionitem2)" />
    <var name="section4subsection1XBRLConceptNameSet" pre="section4subsection1.SetConceptName('uk-gaap:OtherOperatingIncome')" />
    <var name="section4subsection1XBRLDimensionsSet" pre="section4subsection1.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:ContinuingOperationsIncludingAcquisitions')" />
    <var name="section4subsection1XBRLHypercubeNameSet" pre="section4subsection1.SetHypercubeName('uk-gaap:OperatingActivitiesExceptionalItemsAmortisationHypercube')" />
    <var name="section4subsection1add" pre="section4.AddItem(section4subsection1)" />
    <var name="section4subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Discontinued operations&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:item[4]|Discontinued', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection2subsectionitem1add" pre="section4subsection2.AddItem(section4subsection2subsectionitem1)" />
    <var name="section4subsection2XBRLConceptNameSet" pre="section4subsection2.SetConceptName('uk-gaap:OtherOperatingIncome')" />
    <var name="section4subsection2XBRLDimensionsSet" pre="section4subsection2.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:DiscontinuedOperations')" />
    <var name="section4subsection2XBRLHypercubeNameSet" pre="section4subsection2.SetHypercubeName('uk-gaap:OperatingActivitiesExceptionalItemsAmortisationHypercube')" />
    <var name="section4subsection2add" pre="section4.AddItem(section4subsection2)" />
    <var name="section4XBRLConceptNameSet" pre="section4.SetConceptName('uk-gaap:OtherOperatingIncome')" />
    <var name="section4add" pre="smartTable.AddTableBlock(section4)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Acquisitions intro" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="if reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:item[1]|Acquisitions|Current Period&quot;)[0].HasValue or reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:item[2]|Acquisitions|Current Period&quot;)[0].HasValue or reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:item[3]|Acquisitions|Current Period&quot;)[0].HasValue or reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:item[4]|Acquisitions|Current Period&quot;)[0].HasValue or reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:item[5]|Acquisitions|Current Period&quot;)[0].HasValue then true else false" enabled="Conditional" section-name="AcquisitionsIntro" page-break-before="False" keep-with-next-strength="0" template-guid="fd12b9be-e837-490a-844d-38be779250a6">
						<template><add-to-body>
  <para inner-top-border-clearance="5mm" para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The total figures for continuing operations in the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> ending <ws /><data>reportHelper.CurrentPeriod.EndDate.value</data><ws /> includes the following amounts relating to acquisitions:</para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Acquisitions values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="if reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:item[1]|Acquisitions|Current Period&quot;)[0].HasValue or reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:item[2]|Acquisitions|Current Period&quot;)[0].HasValue or reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:item[3]|Acquisitions|Current Period&quot;)[0].HasValue or reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:item[4]|Acquisitions|Current Period&quot;)[0].HasValue or reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Rows|*:item[5]|Acquisitions|Current Period&quot;)[0].HasValue then true else false" enabled="Conditional" section-name="NewSmartTable" page-break-before="False" keep-with-next-strength="0" template-guid="922a3225-ff71-4bbd-bd62-15f4cf2263c2">
						<template><add-to-body>
  <section width="100%" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations')">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'AcquisitionsAnalysis', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Text')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Table Text')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Table Text')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Table Text')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Table Text')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Table Text')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Table Text')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Final Value In List')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Section1', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cost of sales&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Columns|Acquisitions|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:CostSales')" />
    <var name="section1subsection1XBRLDimensionsSet" pre="section1subsection1.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:Acquisitions')" />
    <var name="section1subsection1XBRLHypercubeNameSet" pre="section1subsection1.SetHypercubeName('uk-gaap:OperatingActivitiesExceptionalItemsAmortisationHypercube')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Distribution costs&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Columns|Acquisitions|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:DistributionCosts')" />
    <var name="section1subsection2XBRLDimensionsSet" pre="section1subsection2.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:Acquisitions')" />
    <var name="section1subsection2XBRLHypercubeNameSet" pre="section1subsection2.SetHypercubeName('uk-gaap:OperatingActivitiesExceptionalItemsAmortisationHypercube')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Administrative expenses&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Columns|Acquisitions|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:AdministrativeExpenses')" />
    <var name="section1subsection3XBRLDimensionsSet" pre="section1subsection3.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:Acquisitions')" />
    <var name="section1subsection3XBRLHypercubeNameSet" pre="section1subsection3.SetHypercubeName('uk-gaap:OperatingActivitiesExceptionalItemsAmortisationHypercube')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other operating income&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|AcquisitionsAndDiscontinuedOperations|Columns|Acquisitions|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, true, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:OtherOperatingIncome')" />
    <var name="section1subsection4XBRLDimensionsSet" pre="section1subsection4.SetDimensions('uk-gaap:OperatingActivitiesDimension=uk-gaap:Acquisitions')" />
    <var name="section1subsection4XBRLHypercubeNameSet" pre="section1subsection4.SetHypercubeName('uk-gaap:OperatingActivitiesExceptionalItemsAmortisationHypercube')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
				</report-template>
				<report-template version="12" name="Operating profit / loss" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="HasOperatingProfitLossItems=true" enabled="Conditional" section-name="OperatingProfitLoss" page-break-before="False" keep-with-next-strength="0" template-guid="10d54d71-a360-453b-8bc1-e90e7c54bdba">
					<variables>
						<variable name="OperatingLeases">(reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalSubCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.BalanceRoot,95,0),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.HasValue)
	
	or (reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalSubCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.BalanceRoot,96,0),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.HasValue)
	
	or (reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalSubCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.BalanceRoot,97,0),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.HasValue)
	
	or (reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.BalanceRoot,120),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.HasValue)
	
	or (reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalSubCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.BalanceRoot,177,0),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.HasValue)
	
	or (reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalSubCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.BalanceRoot,178,0),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.HasValue)
	
	or (reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalSubCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.BalanceRoot,179,0),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.HasValue)
	
	or (reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.BalanceRoot,185),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.HasValue)
	
	or (reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.BalanceRoot,251),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.HasValue)
	
	or (reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalSubCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.BalanceRoot,290,0),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.HasValue)
	
	or (reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalSubCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.BalanceRoot,292,0),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.HasValue)
	
	or (reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalSubCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.BalanceRoot,294,0),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.HasValue)
	
	or (reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalSubCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.BalanceRoot,314,0),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.HasValue)
	
	or (reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalSubCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.BalanceRoot,316,0),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.HasValue)</variable>
						<variable name="Amortisation">(reportHelper.Computation(reportHelper.PrimaryStatementRounding, reportHelper.PrimaryStatementScaling).GetPrimarySubRange('140-143').HasTransactions)
	
	or (reportHelper.Computation(reportHelper.PrimaryStatementRounding, reportHelper.PrimaryStatementScaling).GetPrimarySubRange('210-213').HasTransactions)
	
	or (reportHelper.Computation(reportHelper.PrimaryStatementRounding, reportHelper.PrimaryStatementScaling).GetPrimarySubRange('370-373').HasTransactions)
	</variable>
						<variable name="Depreciation">(reportHelper.Computation(reportHelper.PrimaryStatementRounding, reportHelper.PrimaryStatementScaling).GetPrimarySubRange('144-154').HasTransactions)
	
	or (reportHelper.Computation(reportHelper.PrimaryStatementRounding, reportHelper.PrimaryStatementScaling).GetPrimarySubRange('214-224').HasTransactions)
	
	or (reportHelper.Computation(reportHelper.PrimaryStatementRounding, reportHelper.PrimaryStatementScaling).GetPrimarySubRange('374-384').HasTransactions)
	</variable>
						<variable name="SaleOfIntangible">(reportHelper.Computation(reportHelper.PrimaryStatementRounding, reportHelper.PrimaryStatementScaling).GetPrimarySubRange('155-155').HasTransactions)
	
	or (reportHelper.Computation(reportHelper.PrimaryStatementRounding, reportHelper.PrimaryStatementScaling).GetPrimarySubRange('225-225').HasTransactions)
	
	or (reportHelper.Computation(reportHelper.PrimaryStatementRounding, reportHelper.PrimaryStatementScaling).GetPrimarySubRange('385-385').HasTransactions)
	</variable>
						<variable name="SaleOfTangible">(reportHelper.Computation(reportHelper.PrimaryStatementRounding, reportHelper.PrimaryStatementScaling).GetPrimarySubRange('156-159').HasTransactions)
	
	or (reportHelper.Computation(reportHelper.PrimaryStatementRounding, reportHelper.PrimaryStatementScaling).GetPrimarySubRange('226-229').HasTransactions)
	
	or (reportHelper.Computation(reportHelper.PrimaryStatementRounding, reportHelper.PrimaryStatementScaling).GetPrimarySubRange('386-399').HasTransactions)
	</variable>
						<variable name="SaleOfInvestments">(reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalSubCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.BalanceRoot,418,0-99),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.HasValue)
	
	or (reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalSubCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.BalanceRoot,419,0-99),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.HasValue)
</variable>
						<variable name="CurrencyExchange">(reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalSubCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.BalanceRoot,109,0-99),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.HasValue)
	
	or (reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalSubCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.BalanceRoot,204,0-99),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.HasValue)

or (reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalSubCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.BalanceRoot,364,0-99),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.HasValue)

</variable>
						<variable name="HPInterest">reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalSubCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.BalanceRoot,362,0-99),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.HasValue</variable>
						<variable name="AuditFees">(reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalSubCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.BalanceRoot,341,0-99),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.HasValue)
	
	or (reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalSubCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.BalanceRoot,342,0-99),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementScaling).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.HasValue)
</variable>
						<variable name="HasOperatingProfitLossItems">(OperatingLeases) or (Amortisation) or (Depreciation) or (SaleOfIntangible) or (SaleOfTangible) or (SaleOfInvestments) or (CurrencyExchange) or (HPInterest) or (AuditFees)</variable>
					</variables>
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Operating profit/ loss text" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="OperatingProfitLossText" page-break-before="False" keep-with-next-strength="1" template-guid="04995f74-7ba4-4550-a294-67c90d34185a">
						<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">Operating profit/loss is stated after charging:</para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Operating profit / loss values - FRSSE" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="FRSSE = true" enabled="Conditional" section-name="OperatingProfitLossValuesFRSSE" page-break-before="False" keep-with-next-strength="1" template-guid="f6b42214-0597-4c39-b1b1-96b8a1f56600">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'OperatingProfitFRSSE', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Text')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Table Text')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Table Text')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Table Text')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Table Text')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Table Text')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Table Text')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Final Value In List')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('OperatingProfitFRSSE', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Auditor&amp;apos;s remuneration - The audit of the company&amp;apos;s annual accounts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('341.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-aurep:AuditFeesExpenses')" />
    <var name="section1subsection1XBRLDimensionsSet" pre="section1subsection1.SetDimensions('uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors')" />
    <var name="section1subsection1XBRLHypercubeNameSet" pre="section1subsection1.SetHypercubeName('uk-bus:ThirdPartyAgentsHypercube')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Foreign currency (gains)/losses&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('109', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('204', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem2add" pre="section1subsection2.AddItem(section1subsection2subsectionitem2)" />
    <var name="section1subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('364', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem3add" pre="section1subsection2.AddItem(section1subsection2subsectionitem3)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:ForeignExchangeGainLossRecognisedInProfitLoss')" />
    <var name="section1subsection2XBRLReverseSignSet" pre="section1subsection2.SetReverseSign(true)" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;(Profit)/loss on sale of tangible fixed assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('156-159', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('226-229', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem2add" pre="section1subsection3.AddItem(section1subsection3subsectionitem2)" />
    <var name="section1subsection3subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('386-399', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem3add" pre="section1subsection3.AddItem(section1subsection3subsectionitem3)" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;(Profit)/loss on sale of intangible fixed assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('155-155', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('225-225', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem2add" pre="section1subsection4.AddItem(section1subsection4subsectionitem2)" />
    <var name="section1subsection4subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('385-385', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem3add" pre="section1subsection4.AddItem(section1subsection4subsectionitem3)" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Depreciation of tangible fixed assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('144-154', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('214-224', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem2add" pre="section1subsection5.AddItem(section1subsection5subsectionitem2)" />
    <var name="section1subsection5subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('374-384', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem3add" pre="section1subsection5.AddItem(section1subsection5subsectionitem3)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:DepreciationTangibleFixedAssetsExpense')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;(Profit)/loss on disposal of investments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('408', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('409', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem2add" pre="section1subsection6.AddItem(section1subsection6subsectionitem2)" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amortisation&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('140-143', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('210-213', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem2add" pre="section1subsection7.AddItem(section1subsection7subsectionitem2)" />
    <var name="section1subsection7subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('370-373', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem3add" pre="section1subsection7.AddItem(section1subsection7subsectionitem3)" />
    <var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:AmortisationIntangibleAssetsExpense')" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Government grants receivable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('402', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
    <var name="section1subsection8XBRLConceptNameSet" pre="section1subsection8.SetConceptName('uk-gaap:GovernmentGrantReceipts-Net')" />
    <var name="section1subsection8XBRLReverseSignSet" pre="section1subsection8.SetReverseSign(true)" />
    <var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Operating profit / loss values - Small" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="CompanySize = 'Small' and FRSSE = false" enabled="Conditional" section-name="OperatingProfitLossValuesSmall" page-break-before="False" keep-with-next-strength="1" template-guid="9ff93418-78af-4699-bfb2-336683f5b82c">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'OperatingProfitSmall', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Text')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Table Text')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Table Text')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Table Text')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Table Text')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Table Text')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Table Text')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Final Value In List')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('OperatingProfitSmall', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Operating leases - plant and machinery&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('095.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('177.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem2add" pre="section1subsection1.AddItem(section1subsection1subsectionitem2)" />
    <var name="section1subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('290.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem3add" pre="section1subsection1.AddItem(section1subsection1subsectionitem3)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:HireLeasingPlantMachineryCosts')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Operating leases - other assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('096.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('178.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem2add" pre="section1subsection2.AddItem(section1subsection2subsectionitem2)" />
    <var name="section1subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('292.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem3add" pre="section1subsection2.AddItem(section1subsection2subsectionitem3)" />
    <var name="section1subsection2subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('097.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem4add" pre="section1subsection2.AddItem(section1subsection2subsectionitem4)" />
    <var name="section1subsection2subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('120.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem5add" pre="section1subsection2.AddItem(section1subsection2subsectionitem5)" />
    <var name="section1subsection2subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('179.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem6add" pre="section1subsection2.AddItem(section1subsection2subsectionitem6)" />
    <var name="section1subsection2subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('185.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem7add" pre="section1subsection2.AddItem(section1subsection2subsectionitem7)" />
    <var name="section1subsection2subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('251.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem8add" pre="section1subsection2.AddItem(section1subsection2subsectionitem8)" />
    <var name="section1subsection2subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('294.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem9add" pre="section1subsection2.AddItem(section1subsection2subsectionitem9)" />
    <var name="section1subsection2subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('314.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem10add" pre="section1subsection2.AddItem(section1subsection2subsectionitem10)" />
    <var name="section1subsection2subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('316.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem11add" pre="section1subsection2.AddItem(section1subsection2subsectionitem11)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:HirePropertyOtherLeaseExpenditure')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Auditor&amp;apos;s remuneration - The audit of the company&amp;apos;s annual accounts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('341.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-aurep:AuditFeesExpenses')" />
    <var name="section1subsection3XBRLDimensionsSet" pre="section1subsection3.SetDimensions('uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors')" />
    <var name="section1subsection3XBRLHypercubeNameSet" pre="section1subsection3.SetHypercubeName('uk-bus:ThirdPartyAgentsHypercube')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Foreign currency (gains)/losses&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('109', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('204', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem2add" pre="section1subsection4.AddItem(section1subsection4subsectionitem2)" />
    <var name="section1subsection4subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('364', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem3add" pre="section1subsection4.AddItem(section1subsection4subsectionitem3)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:ForeignExchangeGainLossRecognisedInProfitLoss')" />
    <var name="section1subsection4XBRLReverseSignSet" pre="section1subsection4.SetReverseSign(true)" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;(Profit)/loss on sale of tangible fixed assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('156-159', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('226-229', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem2add" pre="section1subsection5.AddItem(section1subsection5subsectionitem2)" />
    <var name="section1subsection5subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('386-399', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem3add" pre="section1subsection5.AddItem(section1subsection5subsectionitem3)" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;(Profit)/loss on sale of intangible fixed assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('155-155', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('225-225', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem2add" pre="section1subsection6.AddItem(section1subsection6subsectionitem2)" />
    <var name="section1subsection6subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('385-385', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem3add" pre="section1subsection6.AddItem(section1subsection6subsectionitem3)" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Depreciation of owned assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('147.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('144.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem2add" pre="section1subsection7.AddItem(section1subsection7subsectionitem2)" />
    <var name="section1subsection7subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('148.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem3add" pre="section1subsection7.AddItem(section1subsection7subsectionitem3)" />
    <var name="section1subsection7subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('149.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem4add" pre="section1subsection7.AddItem(section1subsection7subsectionitem4)" />
    <var name="section1subsection7subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('150.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem5add" pre="section1subsection7.AddItem(section1subsection7subsectionitem5)" />
    <var name="section1subsection7subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('151.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem6add" pre="section1subsection7.AddItem(section1subsection7subsectionitem6)" />
    <var name="section1subsection7subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('214', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem7add" pre="section1subsection7.AddItem(section1subsection7subsectionitem7)" />
    <var name="section1subsection7subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('217.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem8add" pre="section1subsection7.AddItem(section1subsection7subsectionitem8)" />
    <var name="section1subsection7subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('218.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem9add" pre="section1subsection7.AddItem(section1subsection7subsectionitem9)" />
    <var name="section1subsection7subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('219.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem10add" pre="section1subsection7.AddItem(section1subsection7subsectionitem10)" />
    <var name="section1subsection7subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('220.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem11add" pre="section1subsection7.AddItem(section1subsection7subsectionitem11)" />
    <var name="section1subsection7subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('374', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem12add" pre="section1subsection7.AddItem(section1subsection7subsectionitem12)" />
    <var name="section1subsection7subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('377.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem13add" pre="section1subsection7.AddItem(section1subsection7subsectionitem13)" />
    <var name="section1subsection7subsectionitem14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('378.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem14add" pre="section1subsection7.AddItem(section1subsection7subsectionitem14)" />
    <var name="section1subsection7subsectionitem15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('379.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem15add" pre="section1subsection7.AddItem(section1subsection7subsectionitem15)" />
    <var name="section1subsection7subsectionitem16" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('380.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem16add" pre="section1subsection7.AddItem(section1subsection7subsectionitem16)" />
    <var name="section1subsection7subsectionitem17" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('381.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem17add" pre="section1subsection7.AddItem(section1subsection7subsectionitem17)" />
    <var name="section1subsection7subsectionitem18" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('221.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem18add" pre="section1subsection7.AddItem(section1subsection7subsectionitem18)" />
    <var name="section1subsection7subsectionitem19" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('375', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem19add" pre="section1subsection7.AddItem(section1subsection7subsectionitem19)" />
    <var name="section1subsection7subsectionitem20" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('376', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem20add" pre="section1subsection7.AddItem(section1subsection7subsectionitem20)" />
    <var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:DepreciationTangibleFixedAssetsExpense')" />
    <var name="section1subsection7XBRLDimensionsSet" pre="section1subsection7.SetDimensions('uk-gaap:TangibleFixedAssetOwnershipDimension=uk-gaap:OwnedOrFreeholdTangibleFixedAssets')" />
    <var name="section1subsection7XBRLHypercubeNameSet" pre="section1subsection7.SetHypercubeName('uk-gaap:TangibleAssetExpensesHypercube')" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Depreciation of assets held under finance lease and hire purchase contracts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('147.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
    <var name="section1subsection8subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('148.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem2add" pre="section1subsection8.AddItem(section1subsection8subsectionitem2)" />
    <var name="section1subsection8subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('149.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem3add" pre="section1subsection8.AddItem(section1subsection8subsectionitem3)" />
    <var name="section1subsection8subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('150.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem4add" pre="section1subsection8.AddItem(section1subsection8subsectionitem4)" />
    <var name="section1subsection8subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('151.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem5add" pre="section1subsection8.AddItem(section1subsection8subsectionitem5)" />
    <var name="section1subsection8subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('146', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem6add" pre="section1subsection8.AddItem(section1subsection8subsectionitem6)" />
    <var name="section1subsection8subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('145', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem7add" pre="section1subsection8.AddItem(section1subsection8subsectionitem7)" />
    <var name="section1subsection8subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('215', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem8add" pre="section1subsection8.AddItem(section1subsection8subsectionitem8)" />
    <var name="section1subsection8subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('216', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem9add" pre="section1subsection8.AddItem(section1subsection8subsectionitem9)" />
    <var name="section1subsection8subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('217.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem10add" pre="section1subsection8.AddItem(section1subsection8subsectionitem10)" />
    <var name="section1subsection8subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('218.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem11add" pre="section1subsection8.AddItem(section1subsection8subsectionitem11)" />
    <var name="section1subsection8subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('219.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem12add" pre="section1subsection8.AddItem(section1subsection8subsectionitem12)" />
    <var name="section1subsection8subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('220.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem13add" pre="section1subsection8.AddItem(section1subsection8subsectionitem13)" />
    <var name="section1subsection8subsectionitem14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('377.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem14add" pre="section1subsection8.AddItem(section1subsection8subsectionitem14)" />
    <var name="section1subsection8subsectionitem15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('378.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem15add" pre="section1subsection8.AddItem(section1subsection8subsectionitem15)" />
    <var name="section1subsection8subsectionitem16" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('379.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem16add" pre="section1subsection8.AddItem(section1subsection8subsectionitem16)" />
    <var name="section1subsection8subsectionitem17" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('380.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem17add" pre="section1subsection8.AddItem(section1subsection8subsectionitem17)" />
    <var name="section1subsection8subsectionitem18" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('381.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem18add" pre="section1subsection8.AddItem(section1subsection8subsectionitem18)" />
    <var name="section1subsection8XBRLConceptNameSet" pre="section1subsection8.SetConceptName('uk-gaap:DepreciationTangibleFixedAssetsExpense')" />
    <var name="section1subsection8XBRLDimensionsSet" pre="section1subsection8.SetDimensions('uk-gaap:TangibleFixedAssetOwnershipDimension=uk-gaap:LeasedTangibleFixedAssets')" />
    <var name="section1subsection8XBRLHypercubeNameSet" pre="section1subsection8.SetHypercubeName('uk-gaap:TangibleAssetExpensesHypercube')" />
    <var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
    <var name="section1subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;(Profit)/loss on disposal of investments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('409', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection9subsectionitem1add" pre="section1subsection9.AddItem(section1subsection9subsectionitem1)" />
    <var name="section1subsection9subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('408', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection9subsectionitem2add" pre="section1subsection9.AddItem(section1subsection9subsectionitem2)" />
    <var name="section1subsection9add" pre="section1.AddItem(section1subsection9)" />
    <var name="section1subsection10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amortisation&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection10subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('140-143', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection10subsectionitem1add" pre="section1subsection10.AddItem(section1subsection10subsectionitem1)" />
    <var name="section1subsection10subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('210-213', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection10subsectionitem2add" pre="section1subsection10.AddItem(section1subsection10subsectionitem2)" />
    <var name="section1subsection10subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('370-373', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection10subsectionitem3add" pre="section1subsection10.AddItem(section1subsection10subsectionitem3)" />
    <var name="section1subsection10XBRLConceptNameSet" pre="section1subsection10.SetConceptName('uk-gaap:AmortisationIntangibleAssetsExpense')" />
    <var name="section1subsection10add" pre="section1.AddItem(section1subsection10)" />
    <var name="section1subsection11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Government grants receivable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection11subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('402', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection11subsectionitem1add" pre="section1subsection11.AddItem(section1subsection11subsectionitem1)" />
    <var name="section1subsection11XBRLConceptNameSet" pre="section1subsection11.SetConceptName('uk-gaap:GovernmentGrantReceipts-Net')" />
    <var name="section1subsection11XBRLReverseSignSet" pre="section1subsection11.SetReverseSign(true)" />
    <var name="section1subsection11add" pre="section1.AddItem(section1subsection11)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Operating profit / loss values - Medium" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="CompanySize = 'Medium'" enabled="Conditional" section-name="OperatingProfitLossValuesMedium" page-break-before="False" keep-with-next-strength="1" template-guid="fee52644-7ef1-43c2-bd72-6d60aa9775f5">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'OperatingProfitMedium', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Text')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Table Text')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Table Text')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Table Text')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Table Text')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Table Text')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Table Text')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Final Value In List')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('OperatingProfitMedium', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Operating leases - plant and machinery&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('095.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('177.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem2add" pre="section1subsection1.AddItem(section1subsection1subsectionitem2)" />
    <var name="section1subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('290.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem3add" pre="section1subsection1.AddItem(section1subsection1subsectionitem3)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:HireLeasingPlantMachineryCosts')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Operating leases - other assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('096.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('178.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem2add" pre="section1subsection2.AddItem(section1subsection2subsectionitem2)" />
    <var name="section1subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('292.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem3add" pre="section1subsection2.AddItem(section1subsection2subsectionitem3)" />
    <var name="section1subsection2subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('097.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem4add" pre="section1subsection2.AddItem(section1subsection2subsectionitem4)" />
    <var name="section1subsection2subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('120.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem5add" pre="section1subsection2.AddItem(section1subsection2subsectionitem5)" />
    <var name="section1subsection2subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('179.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem6add" pre="section1subsection2.AddItem(section1subsection2subsectionitem6)" />
    <var name="section1subsection2subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('185.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem7add" pre="section1subsection2.AddItem(section1subsection2subsectionitem7)" />
    <var name="section1subsection2subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('251.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem8add" pre="section1subsection2.AddItem(section1subsection2subsectionitem8)" />
    <var name="section1subsection2subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('294.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem9add" pre="section1subsection2.AddItem(section1subsection2subsectionitem9)" />
    <var name="section1subsection2subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('314.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem10add" pre="section1subsection2.AddItem(section1subsection2subsectionitem10)" />
    <var name="section1subsection2subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('316.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem11add" pre="section1subsection2.AddItem(section1subsection2subsectionitem11)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:HirePropertyOtherLeaseExpenditure')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Auditor&amp;apos;s remuneration - The audit of the company&amp;apos;s annual accounts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('341.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-aurep:AuditFeesExpenses')" />
    <var name="section1subsection3XBRLDimensionsSet" pre="section1subsection3.SetDimensions('uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors')" />
    <var name="section1subsection3XBRLHypercubeNameSet" pre="section1subsection3.SetHypercubeName('uk-bus:ThirdPartyAgentsHypercube')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Foreign currency (gains)/losses&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('109', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('204', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem2add" pre="section1subsection4.AddItem(section1subsection4subsectionitem2)" />
    <var name="section1subsection4subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('364', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem3add" pre="section1subsection4.AddItem(section1subsection4subsectionitem3)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:ForeignExchangeGainLossRecognisedInProfitLoss')" />
    <var name="section1subsection4XBRLReverseSignSet" pre="section1subsection4.SetReverseSign(true)" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;(Profit)/loss on sale of tangible fixed assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('156-159', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('226-229', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem2add" pre="section1subsection5.AddItem(section1subsection5subsectionitem2)" />
    <var name="section1subsection5subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('386-399', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem3add" pre="section1subsection5.AddItem(section1subsection5subsectionitem3)" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;(Profit)/loss on sale of intangible fixed assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('155-155', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('225-225', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem2add" pre="section1subsection6.AddItem(section1subsection6subsectionitem2)" />
    <var name="section1subsection6subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('385-385', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem3add" pre="section1subsection6.AddItem(section1subsection6subsectionitem3)" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Depreciation of owned assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('147.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('144.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem2add" pre="section1subsection7.AddItem(section1subsection7subsectionitem2)" />
    <var name="section1subsection7subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('148.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem3add" pre="section1subsection7.AddItem(section1subsection7subsectionitem3)" />
    <var name="section1subsection7subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('149.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem4add" pre="section1subsection7.AddItem(section1subsection7subsectionitem4)" />
    <var name="section1subsection7subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('150.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem5add" pre="section1subsection7.AddItem(section1subsection7subsectionitem5)" />
    <var name="section1subsection7subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('151.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem6add" pre="section1subsection7.AddItem(section1subsection7subsectionitem6)" />
    <var name="section1subsection7subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('214', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem7add" pre="section1subsection7.AddItem(section1subsection7subsectionitem7)" />
    <var name="section1subsection7subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('217.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem8add" pre="section1subsection7.AddItem(section1subsection7subsectionitem8)" />
    <var name="section1subsection7subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('218.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem9add" pre="section1subsection7.AddItem(section1subsection7subsectionitem9)" />
    <var name="section1subsection7subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('219.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem10add" pre="section1subsection7.AddItem(section1subsection7subsectionitem10)" />
    <var name="section1subsection7subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('220.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem11add" pre="section1subsection7.AddItem(section1subsection7subsectionitem11)" />
    <var name="section1subsection7subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('374', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem12add" pre="section1subsection7.AddItem(section1subsection7subsectionitem12)" />
    <var name="section1subsection7subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('377.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem13add" pre="section1subsection7.AddItem(section1subsection7subsectionitem13)" />
    <var name="section1subsection7subsectionitem14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('378.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem14add" pre="section1subsection7.AddItem(section1subsection7subsectionitem14)" />
    <var name="section1subsection7subsectionitem15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('379.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem15add" pre="section1subsection7.AddItem(section1subsection7subsectionitem15)" />
    <var name="section1subsection7subsectionitem16" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('380.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem16add" pre="section1subsection7.AddItem(section1subsection7subsectionitem16)" />
    <var name="section1subsection7subsectionitem17" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('381.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem17add" pre="section1subsection7.AddItem(section1subsection7subsectionitem17)" />
    <var name="section1subsection7subsectionitem18" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('221.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem18add" pre="section1subsection7.AddItem(section1subsection7subsectionitem18)" />
    <var name="section1subsection7subsectionitem19" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('375', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem19add" pre="section1subsection7.AddItem(section1subsection7subsectionitem19)" />
    <var name="section1subsection7subsectionitem20" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('376', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem20add" pre="section1subsection7.AddItem(section1subsection7subsectionitem20)" />
    <var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:DepreciationTangibleFixedAssetsExpense')" />
    <var name="section1subsection7XBRLDimensionsSet" pre="section1subsection7.SetDimensions('uk-gaap:TangibleFixedAssetOwnershipDimension=uk-gaap:OwnedOrFreeholdTangibleFixedAssets')" />
    <var name="section1subsection7XBRLHypercubeNameSet" pre="section1subsection7.SetHypercubeName('uk-gaap:TangibleAssetExpensesHypercube')" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Depreciation of assets held under finance lease and hire purchase contracts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('147.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
    <var name="section1subsection8subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('148.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem2add" pre="section1subsection8.AddItem(section1subsection8subsectionitem2)" />
    <var name="section1subsection8subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('149.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem3add" pre="section1subsection8.AddItem(section1subsection8subsectionitem3)" />
    <var name="section1subsection8subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('150.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem4add" pre="section1subsection8.AddItem(section1subsection8subsectionitem4)" />
    <var name="section1subsection8subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('151.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem5add" pre="section1subsection8.AddItem(section1subsection8subsectionitem5)" />
    <var name="section1subsection8subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('146', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem6add" pre="section1subsection8.AddItem(section1subsection8subsectionitem6)" />
    <var name="section1subsection8subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('145', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem7add" pre="section1subsection8.AddItem(section1subsection8subsectionitem7)" />
    <var name="section1subsection8subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('215', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem8add" pre="section1subsection8.AddItem(section1subsection8subsectionitem8)" />
    <var name="section1subsection8subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('216', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem9add" pre="section1subsection8.AddItem(section1subsection8subsectionitem9)" />
    <var name="section1subsection8subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('217.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem10add" pre="section1subsection8.AddItem(section1subsection8subsectionitem10)" />
    <var name="section1subsection8subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('218.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem11add" pre="section1subsection8.AddItem(section1subsection8subsectionitem11)" />
    <var name="section1subsection8subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('219.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem12add" pre="section1subsection8.AddItem(section1subsection8subsectionitem12)" />
    <var name="section1subsection8subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('220.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem13add" pre="section1subsection8.AddItem(section1subsection8subsectionitem13)" />
    <var name="section1subsection8subsectionitem14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('377.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem14add" pre="section1subsection8.AddItem(section1subsection8subsectionitem14)" />
    <var name="section1subsection8subsectionitem15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('378.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem15add" pre="section1subsection8.AddItem(section1subsection8subsectionitem15)" />
    <var name="section1subsection8subsectionitem16" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('379.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem16add" pre="section1subsection8.AddItem(section1subsection8subsectionitem16)" />
    <var name="section1subsection8subsectionitem17" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('380.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem17add" pre="section1subsection8.AddItem(section1subsection8subsectionitem17)" />
    <var name="section1subsection8subsectionitem18" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('381.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem18add" pre="section1subsection8.AddItem(section1subsection8subsectionitem18)" />
    <var name="section1subsection8XBRLConceptNameSet" pre="section1subsection8.SetConceptName('uk-gaap:DepreciationTangibleFixedAssetsExpense')" />
    <var name="section1subsection8XBRLDimensionsSet" pre="section1subsection8.SetDimensions('uk-gaap:TangibleFixedAssetOwnershipDimension=uk-gaap:LeasedTangibleFixedAssets')" />
    <var name="section1subsection8XBRLHypercubeNameSet" pre="section1subsection8.SetHypercubeName('uk-gaap:TangibleAssetExpensesHypercube')" />
    <var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
    <var name="section1subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Hire purchase interest&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('362', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection9subsectionitem1add" pre="section1subsection9.AddItem(section1subsection9subsectionitem1)" />
    <var name="section1subsection9add" pre="section1.AddItem(section1subsection9)" />
    <var name="section1subsection10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;(Profit)/loss on disposal of investments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection10subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('409', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection10subsectionitem1add" pre="section1subsection10.AddItem(section1subsection10subsectionitem1)" />
    <var name="section1subsection10subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('408', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection10subsectionitem2add" pre="section1subsection10.AddItem(section1subsection10subsectionitem2)" />
    <var name="section1subsection10add" pre="section1.AddItem(section1subsection10)" />
    <var name="section1subsection11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amortisation&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection11subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('140-143', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection11subsectionitem1add" pre="section1subsection11.AddItem(section1subsection11subsectionitem1)" />
    <var name="section1subsection11subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('210-213', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection11subsectionitem2add" pre="section1subsection11.AddItem(section1subsection11subsectionitem2)" />
    <var name="section1subsection11subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('370-373', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection11subsectionitem3add" pre="section1subsection11.AddItem(section1subsection11subsectionitem3)" />
    <var name="section1subsection11XBRLConceptNameSet" pre="section1subsection11.SetConceptName('uk-gaap:AmortisationIntangibleAssetsExpense')" />
    <var name="section1subsection11add" pre="section1.AddItem(section1subsection11)" />
    <var name="section1subsection12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Government grants receivable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection12subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('402', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection12subsectionitem1add" pre="section1subsection12.AddItem(section1subsection12subsectionitem1)" />
    <var name="section1subsection12XBRLConceptNameSet" pre="section1subsection12.SetConceptName('uk-gaap:GovernmentGrantReceipts-Net')" />
    <var name="section1subsection12XBRLReverseSignSet" pre="section1subsection12.SetReverseSign(true)" />
    <var name="section1subsection12add" pre="section1.AddItem(section1subsection12)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Operating profit / loss values - Large" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="CompanySize = 'Large'" enabled="Conditional" section-name="OperatingProfitLossValuesLarge" page-break-before="False" keep-with-next-strength="1" template-guid="f3dc2da2-888d-4533-a813-89686508d801">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'OperatingProfitLarge', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Text')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Table Text')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Table Text')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Table Text')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Table Text')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Table Text')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Table Text')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Final Value In List')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('OperatingProfitLarge', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Operating leases - plant and machinery&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('095.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('177.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem2add" pre="section1subsection1.AddItem(section1subsection1subsectionitem2)" />
    <var name="section1subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('290.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem3add" pre="section1subsection1.AddItem(section1subsection1subsectionitem3)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:HireLeasingPlantMachineryCosts')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Operating leases - other assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('096.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('178.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem2add" pre="section1subsection2.AddItem(section1subsection2subsectionitem2)" />
    <var name="section1subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('292.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem3add" pre="section1subsection2.AddItem(section1subsection2subsectionitem3)" />
    <var name="section1subsection2subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('097.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem4add" pre="section1subsection2.AddItem(section1subsection2subsectionitem4)" />
    <var name="section1subsection2subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('120.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem5add" pre="section1subsection2.AddItem(section1subsection2subsectionitem5)" />
    <var name="section1subsection2subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('179.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem6add" pre="section1subsection2.AddItem(section1subsection2subsectionitem6)" />
    <var name="section1subsection2subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('185.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem7add" pre="section1subsection2.AddItem(section1subsection2subsectionitem7)" />
    <var name="section1subsection2subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('251.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem8add" pre="section1subsection2.AddItem(section1subsection2subsectionitem8)" />
    <var name="section1subsection2subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('294.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem9add" pre="section1subsection2.AddItem(section1subsection2subsectionitem9)" />
    <var name="section1subsection2subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('314.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem10add" pre="section1subsection2.AddItem(section1subsection2subsectionitem10)" />
    <var name="section1subsection2subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('316.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem11add" pre="section1subsection2.AddItem(section1subsection2subsectionitem11)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:HirePropertyOtherLeaseExpenditure')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Foreign currency (gains)/losses&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('109', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('204', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem2add" pre="section1subsection3.AddItem(section1subsection3subsectionitem2)" />
    <var name="section1subsection3subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('364', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem3add" pre="section1subsection3.AddItem(section1subsection3subsectionitem3)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:ForeignExchangeGainLossRecognisedInProfitLoss')" />
    <var name="section1subsection3XBRLReverseSignSet" pre="section1subsection3.SetReverseSign(true)" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;(Profit)/loss on sale of tangible fixed assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('156-159', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('226-229', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem2add" pre="section1subsection4.AddItem(section1subsection4subsectionitem2)" />
    <var name="section1subsection4subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('386-399', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem3add" pre="section1subsection4.AddItem(section1subsection4subsectionitem3)" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;(Profit)/loss on sale of intangible fixed assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('155-155', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('225-225', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem2add" pre="section1subsection5.AddItem(section1subsection5subsectionitem2)" />
    <var name="section1subsection5subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('385-385', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem3add" pre="section1subsection5.AddItem(section1subsection5subsectionitem3)" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Depreciation of owned assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('147.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('144.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem2add" pre="section1subsection6.AddItem(section1subsection6subsectionitem2)" />
    <var name="section1subsection6subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('148.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem3add" pre="section1subsection6.AddItem(section1subsection6subsectionitem3)" />
    <var name="section1subsection6subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('149.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem4add" pre="section1subsection6.AddItem(section1subsection6subsectionitem4)" />
    <var name="section1subsection6subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('150.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem5add" pre="section1subsection6.AddItem(section1subsection6subsectionitem5)" />
    <var name="section1subsection6subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('151.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem6add" pre="section1subsection6.AddItem(section1subsection6subsectionitem6)" />
    <var name="section1subsection6subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('214', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem7add" pre="section1subsection6.AddItem(section1subsection6subsectionitem7)" />
    <var name="section1subsection6subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('217.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem8add" pre="section1subsection6.AddItem(section1subsection6subsectionitem8)" />
    <var name="section1subsection6subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('218.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem9add" pre="section1subsection6.AddItem(section1subsection6subsectionitem9)" />
    <var name="section1subsection6subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('219.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem10add" pre="section1subsection6.AddItem(section1subsection6subsectionitem10)" />
    <var name="section1subsection6subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('220.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem11add" pre="section1subsection6.AddItem(section1subsection6subsectionitem11)" />
    <var name="section1subsection6subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('374', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem12add" pre="section1subsection6.AddItem(section1subsection6subsectionitem12)" />
    <var name="section1subsection6subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('377.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem13add" pre="section1subsection6.AddItem(section1subsection6subsectionitem13)" />
    <var name="section1subsection6subsectionitem14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('378.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem14add" pre="section1subsection6.AddItem(section1subsection6subsectionitem14)" />
    <var name="section1subsection6subsectionitem15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('379.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem15add" pre="section1subsection6.AddItem(section1subsection6subsectionitem15)" />
    <var name="section1subsection6subsectionitem16" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('380.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem16add" pre="section1subsection6.AddItem(section1subsection6subsectionitem16)" />
    <var name="section1subsection6subsectionitem17" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('381.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem17add" pre="section1subsection6.AddItem(section1subsection6subsectionitem17)" />
    <var name="section1subsection6subsectionitem18" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('221.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem18add" pre="section1subsection6.AddItem(section1subsection6subsectionitem18)" />
    <var name="section1subsection6subsectionitem19" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('375', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem19add" pre="section1subsection6.AddItem(section1subsection6subsectionitem19)" />
    <var name="section1subsection6subsectionitem20" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('376', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem20add" pre="section1subsection6.AddItem(section1subsection6subsectionitem20)" />
    <var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:DepreciationTangibleFixedAssetsExpense')" />
    <var name="section1subsection6XBRLDimensionsSet" pre="section1subsection6.SetDimensions('uk-gaap:TangibleFixedAssetOwnershipDimension=uk-gaap:OwnedOrFreeholdTangibleFixedAssets')" />
    <var name="section1subsection6XBRLHypercubeNameSet" pre="section1subsection6.SetHypercubeName('uk-gaap:TangibleAssetExpensesHypercube')" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Depreciation of assets held under finance lease and hire purchase contracts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('147.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('148.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem2add" pre="section1subsection7.AddItem(section1subsection7subsectionitem2)" />
    <var name="section1subsection7subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('149.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem3add" pre="section1subsection7.AddItem(section1subsection7subsectionitem3)" />
    <var name="section1subsection7subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('150.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem4add" pre="section1subsection7.AddItem(section1subsection7subsectionitem4)" />
    <var name="section1subsection7subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('151.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem5add" pre="section1subsection7.AddItem(section1subsection7subsectionitem5)" />
    <var name="section1subsection7subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('146', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem6add" pre="section1subsection7.AddItem(section1subsection7subsectionitem6)" />
    <var name="section1subsection7subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('145', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem7add" pre="section1subsection7.AddItem(section1subsection7subsectionitem7)" />
    <var name="section1subsection7subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('215', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem8add" pre="section1subsection7.AddItem(section1subsection7subsectionitem8)" />
    <var name="section1subsection7subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('216', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem9add" pre="section1subsection7.AddItem(section1subsection7subsectionitem9)" />
    <var name="section1subsection7subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('217.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem10add" pre="section1subsection7.AddItem(section1subsection7subsectionitem10)" />
    <var name="section1subsection7subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('218.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem11add" pre="section1subsection7.AddItem(section1subsection7subsectionitem11)" />
    <var name="section1subsection7subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('219.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem12add" pre="section1subsection7.AddItem(section1subsection7subsectionitem12)" />
    <var name="section1subsection7subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('220.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem13add" pre="section1subsection7.AddItem(section1subsection7subsectionitem13)" />
    <var name="section1subsection7subsectionitem14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('377.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem14add" pre="section1subsection7.AddItem(section1subsection7subsectionitem14)" />
    <var name="section1subsection7subsectionitem15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('378.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem15add" pre="section1subsection7.AddItem(section1subsection7subsectionitem15)" />
    <var name="section1subsection7subsectionitem16" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('379.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem16add" pre="section1subsection7.AddItem(section1subsection7subsectionitem16)" />
    <var name="section1subsection7subsectionitem17" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('380.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem17add" pre="section1subsection7.AddItem(section1subsection7subsectionitem17)" />
    <var name="section1subsection7subsectionitem18" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('381.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem18add" pre="section1subsection7.AddItem(section1subsection7subsectionitem18)" />
    <var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:DepreciationTangibleFixedAssetsExpense')" />
    <var name="section1subsection7XBRLDimensionsSet" pre="section1subsection7.SetDimensions('uk-gaap:TangibleFixedAssetOwnershipDimension=uk-gaap:LeasedTangibleFixedAssets')" />
    <var name="section1subsection7XBRLHypercubeNameSet" pre="section1subsection7.SetHypercubeName('uk-gaap:TangibleAssetExpensesHypercube')" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Hire purchase interest&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('362', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
    <var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
    <var name="section1subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;(Profit)/loss on disposal of investments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('408', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection9subsectionitem1add" pre="section1subsection9.AddItem(section1subsection9subsectionitem1)" />
    <var name="section1subsection9subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('409', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection9subsectionitem2add" pre="section1subsection9.AddItem(section1subsection9subsectionitem2)" />
    <var name="section1subsection9add" pre="section1.AddItem(section1subsection9)" />
    <var name="section1subsection10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amortisation&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection10subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('140-143', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection10subsectionitem1add" pre="section1subsection10.AddItem(section1subsection10subsectionitem1)" />
    <var name="section1subsection10subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('210-213', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection10subsectionitem2add" pre="section1subsection10.AddItem(section1subsection10subsectionitem2)" />
    <var name="section1subsection10subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('370-373', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection10subsectionitem3add" pre="section1subsection10.AddItem(section1subsection10subsectionitem3)" />
    <var name="section1subsection10XBRLConceptNameSet" pre="section1subsection10.SetConceptName('uk-gaap:AmortisationIntangibleAssetsExpense')" />
    <var name="section1subsection10add" pre="section1.AddItem(section1subsection10)" />
    <var name="section1subsection11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Government grants receivable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection11subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('402', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection11subsectionitem1add" pre="section1subsection11.AddItem(section1subsection11subsectionitem1)" />
    <var name="section1subsection11XBRLConceptNameSet" pre="section1subsection11.SetConceptName('uk-gaap:GovernmentGrantReceipts-Net')" />
    <var name="section1subsection11add" pre="section1.AddItem(section1subsection11)" />
    <var name="section1subsection12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Auditor&amp;apos;s remuneration&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, 'AuditorsRemuneration')" />
    <var name="section1subsection12subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('341', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection12subsectionitem1add" pre="section1subsection12.AddItem(section1subsection12subsectionitem1)" />
    <var name="section1subsection12subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('342', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection12subsectionitem2add" pre="section1subsection12.AddItem(section1subsection12subsectionitem2)" />
    <var name="section1subsection12subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('343', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection12subsectionitem3add" pre="section1subsection12.AddItem(section1subsection12subsectionitem3)" />
    <var name="section1subsection12XBRLConceptNameSet" pre="section1subsection12.SetConceptName('uk-aurep:TotalFeesToAuditors')" />
    <var name="section1subsection12XBRLDimensionsSet" pre="section1subsection12.SetDimensions('uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors')" />
    <var name="section1subsection12XBRLHypercubeNameSet" pre="section1subsection12.SetHypercubeName('uk-bus:ThirdPartyAgentsHypercube')" />
    <var name="section1subsection12add" pre="section1.AddItem(section1subsection12)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
				</report-template>
				<report-template version="12" name="Auditor's remuneration" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="CompanySize = 'Large' and (reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('341').HasTransactions or reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('342').HasTransactions or reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('343').HasTransactions)" enabled="Conditional" section-name="AuditorsRemuneration" page-break-before="False" keep-with-next-strength="0" template-guid="4e8f7785-56f1-4b20-a560-7c102791a829">
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Auditor's remuneration values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="AuditorsRemunerationValues" page-break-before="False" keep-with-next-strength="0" template-guid="c1c99a04-afb8-4b8e-a821-5303db1033b3">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'MyFirstTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-bus:ThirdPartyAgentsHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-bus:ThirdPartyAgentTypeDimension=uk-bus:EntityAccountantsOrAuditors,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-bus:ThirdPartyAgentsHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('AuditOfTheFinancialStatement', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Audit of the financial statements&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Auditor&amp;apos;s remuneration - The audit of the company&amp;apos;s annual accounts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('341.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-aurep:AuditFeesExpenses')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('OtherFees', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Other fees to auditors&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;The audit of the company&amp;apos;s subsidiaries&amp;apos; annual accounts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('341.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-aurep:AuditingAccountsOfAssociatesPursuantToLegislationEntityAndSubsidiariesFees')" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other services pursuant to legislation&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('341.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2XBRLConceptNameSet" pre="section2subsection2.SetConceptName('uk-aurep:OtherServicesPursuantToSuchLegislationFees')" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Tax services&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('341.03', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem1add" pre="section2subsection3.AddItem(section2subsection3subsectionitem1)" />
    <var name="section2subsection3XBRLConceptNameSet" pre="section2subsection3.SetConceptName('uk-aurep:TaxationServicesFees')" />
    <var name="section2subsection3add" pre="section2.AddItem(section2subsection3)" />
    <var name="section2subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;IT services&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('341.04', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection4subsectionitem1add" pre="section2subsection4.AddItem(section2subsection4subsectionitem1)" />
    <var name="section2subsection4XBRLConceptNameSet" pre="section2subsection4.SetConceptName('uk-aurep:InformationTechnologyServicesFees')" />
    <var name="section2subsection4add" pre="section2.AddItem(section2subsection4)" />
    <var name="section2subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Internal audit services&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('341.05', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection5subsectionitem1add" pre="section2subsection5.AddItem(section2subsection5subsectionitem1)" />
    <var name="section2subsection5XBRLConceptNameSet" pre="section2subsection5.SetConceptName('uk-aurep:InternalAuditFees')" />
    <var name="section2subsection5add" pre="section2.AddItem(section2subsection5)" />
    <var name="section2subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Valuation and actuarial services&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('341.06', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection6subsectionitem1add" pre="section2subsection6.AddItem(section2subsection6subsectionitem1)" />
    <var name="section2subsection6add" pre="section2.AddItem(section2subsection6)" />
    <var name="section2subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Litigation services&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('341.07', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection7subsectionitem1add" pre="section2subsection7.AddItem(section2subsection7subsectionitem1)" />
    <var name="section2subsection7XBRLConceptNameSet" pre="section2subsection7.SetConceptName('uk-aurep:LitigationServicesFees')" />
    <var name="section2subsection7add" pre="section2.AddItem(section2subsection7)" />
    <var name="section2subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Recruitment and remuneration services&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('341.08', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection8subsectionitem1add" pre="section2subsection8.AddItem(section2subsection8subsectionitem1)" />
    <var name="section2subsection8XBRLConceptNameSet" pre="section2subsection8.SetConceptName('uk-aurep:RecruitmentRemunerationServicesFees')" />
    <var name="section2subsection8add" pre="section2.AddItem(section2subsection8)" />
    <var name="section2subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Corporate finance services&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('341.09', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection9subsectionitem1add" pre="section2subsection9.AddItem(section2subsection9subsectionitem1)" />
    <var name="section2subsection9XBRLConceptNameSet" pre="section2subsection9.SetConceptName('uk-aurep:CorporateFinanceTransactionsFees')" />
    <var name="section2subsection9add" pre="section2.AddItem(section2subsection9)" />
    <var name="section2subsection10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other services&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection10subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('341.10', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection10subsectionitem1add" pre="section2subsection10.AddItem(section2subsection10subsectionitem1)" />
    <var name="section2subsection10subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('342', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection10subsectionitem2add" pre="section2subsection10.AddItem(section2subsection10subsectionitem2)" />
    <var name="section2subsection10subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('343', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection10subsectionitem3add" pre="section2subsection10.AddItem(section2subsection10subsectionitem3)" />
    <var name="section2subsection10XBRLConceptNameSet" pre="section2subsection10.SetConceptName('uk-aurep:OtherNon-auditServicesFees')" />
    <var name="section2subsection10add" pre="section2.AddItem(section2subsection10)" />
    <var name="section2XBRLConceptNameSet" pre="section2.SetConceptName('uk-aurep:FeesForNon-auditServices')" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('Total', '&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section3item1" pre="section3.AddTotalItem(section1)" />
    <var name="section3item2" pre="section3.AddTotalItem(section2)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-aurep:TotalFeesToAuditors')" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
				</report-template>
				<report-template version="12" name="Exceptional items" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="HasExceptionalItems" enabled="Conditional" section-name="ExceptionalItems" page-break-before="False" keep-with-next-strength="1" template-guid="07e15b50-34a8-43ef-bc85-f8a05456afcf">
					<variables>
						<variable name="HasExceptionalItems">reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryRange(410,419).Totals!=null and 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryRange(410,419).Totals[0].HasTransactions 

or
(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryRange(410,419).Totals[1].HasTransactions) )</variable>
					</variables>
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Exceptional items table" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="ExceptionalItemsTable" page-break-before="False" keep-with-next-strength="0" template-guid="217d5cdb-ebb5-4e4e-8a58-27ff557e38dc">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'ExceptionalItems', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ExceptionalItems', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Exceptional income&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('049-049', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Exceptional cost of sales&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('135-139', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Exceptional distribution costs&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('205-209', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Exceptional admin costs&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('365-369', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;(Profit) / loss on sale of fixed assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('410-410', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;(Profit) / loss on termination of operation&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('411-411', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Reorganisation or restructuring&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('412-412', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other exceptional&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('413-419', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
    <var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:ExceptionalGainLossReportedAfterOperatingProfitLossSubtotal')" />
    <var name="section1XBRLReverseSignSet" pre="section1.SetReverseSign(true)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
				</report-template>
				<report-template version="12" name="Particulars of employees" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="CompanySize != 'Small'" enabled="Conditional" section-name="ParticularsOfEmployees" page-break-before="False" keep-with-next-strength="0" template-guid="5cb19592-d5c6-4993-b119-762e76500e75">
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Staff numbers narrative" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="StaffNumbersNarrative" page-break-before="False" keep-with-next-strength="0" template-guid="d3a38ceb-b279-484d-9261-1c5fd2ccd1e0">
						<template><add-to-body>
  <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">The average number of persons employed by the company (including<ws /><inline condition="DirectorsActiveAtFinalisationCount  !=  1">directors</inline><inline condition="DirectorsActiveAtFinalisationCount=1"> director</inline>) during the <ws /><data para-alignment="Left">reportHelper.CurrentPeriod.YearPeriod</data>, analysed by category was as follows:</para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Staff numbers" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="StaffNumbers" page-break-before="False" keep-with-next-strength="0" template-guid="49f5e428-f587-495d-a6b4-4b56af29f234">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'StaffNumbers', 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;No.&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;No.&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('EmployeeNumbers', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Administration and support&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|Employees|AverageNumberEmployees|AverageNumberEmployees|Rows|*:filter[Department|Current Period=Administration and support]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:AdministrationSupportAverageNumberEmployees')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Production&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|Employees|AverageNumberEmployees|AverageNumberEmployees|Rows|*:filter[Department|Current Period=Production]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:ProductionAverageNumberEmployees')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Research and development&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|Employees|AverageNumberEmployees|AverageNumberEmployees|Rows|*:filter[Department|Current Period=Research and development]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:ResearchDevelopmentAverageNumberEmployees')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Sales, marketing and distribution&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|Employees|AverageNumberEmployees|AverageNumberEmployees|Rows|*:filter[Department|Current Period!=Administration and support]:filter[Department|Current Period!=Production]:filter[Department|Current Period!=Research and development]:filter[Department|Current Period!=Sales]:filter[Department|Current Period!=Marketing]:filter[Department|Current Period!=Distribution]:filter[Department|Current Period!=Other departments]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Sales&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|Employees|AverageNumberEmployees|AverageNumberEmployees|Rows|*:filter[Department|Current Period=Sales]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:SellingAverageNumberEmployees')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Marketing&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|Employees|AverageNumberEmployees|AverageNumberEmployees|Rows|*:filter[Department|Current Period=Marketing]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:MarketingAverageNumberEmployees')" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Distribution&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|Employees|AverageNumberEmployees|AverageNumberEmployees|Rows|*:filter[Department|Current Period=Distribution]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:DistributionAverageNumberEmployees')" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other departments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|Employees|AverageNumberEmployees|AverageNumberEmployees|Rows|*:filter[Department|Current Period=Other departments]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
    <var name="section1subsection8XBRLConceptNameSet" pre="section1subsection8.SetConceptName('uk-gaap:OtherDepartmentsAverageNumberEmployees')" />
    <var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:AverageNumberEmployeesDuringPeriod')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Staff costs narrative" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="StaffCostsNarrative" page-break-before="False" keep-with-next-strength="0" template-guid="0b5aaa93-98ae-4cfe-81b2-7876dac36310">
						<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">The aggregate payroll costs were as follows:</para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Staff costs" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="StaffCosts" page-break-before="False" keep-with-next-strength="0" template-guid="07d50e4d-0402-4027-be87-882335fa6966">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'StaffCosts', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('StaffCosts', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Wages and salaries&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('070', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('160', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem2add" pre="section1subsection1.AddItem(section1subsection1subsectionitem2)" />
    <var name="section1subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('230', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem3add" pre="section1subsection1.AddItem(section1subsection1subsectionitem3)" />
    <var name="section1subsection1subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('072', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem4add" pre="section1subsection1.AddItem(section1subsection1subsectionitem4)" />
    <var name="section1subsection1subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('162', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem5add" pre="section1subsection1.AddItem(section1subsection1subsectionitem5)" />
    <var name="section1subsection1subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('232', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem6add" pre="section1subsection1.AddItem(section1subsection1subsectionitem6)" />
    <var name="section1subsection1subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('078', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem7add" pre="section1subsection1.AddItem(section1subsection1subsectionitem7)" />
    <var name="section1subsection1subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('168', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem8add" pre="section1subsection1.AddItem(section1subsection1subsectionitem8)" />
    <var name="section1subsection1subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('239', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem9add" pre="section1subsection1.AddItem(section1subsection1subsectionitem9)" />
    <var name="section1subsection1subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('079', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem10add" pre="section1subsection1.AddItem(section1subsection1subsectionitem10)" />
    <var name="section1subsection1subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('169', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem11add" pre="section1subsection1.AddItem(section1subsection1subsectionitem11)" />
    <var name="section1subsection1subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('238', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem12add" pre="section1subsection1.AddItem(section1subsection1subsectionitem12)" />
    <var name="section1subsection1subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('247', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem13add" pre="section1subsection1.AddItem(section1subsection1subsectionitem13)" />
    <var name="section1subsection1subsectionitem14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('248', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem14add" pre="section1subsection1.AddItem(section1subsection1subsectionitem14)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:WagesSalaries')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Social security costs&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('071', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('161', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem2add" pre="section1subsection2.AddItem(section1subsection2subsectionitem2)" />
    <var name="section1subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('231', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem3add" pre="section1subsection2.AddItem(section1subsection2subsectionitem3)" />
    <var name="section1subsection2subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('073', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem4add" pre="section1subsection2.AddItem(section1subsection2subsectionitem4)" />
    <var name="section1subsection2subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('163', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem5add" pre="section1subsection2.AddItem(section1subsection2subsectionitem5)" />
    <var name="section1subsection2subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('233', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem6add" pre="section1subsection2.AddItem(section1subsection2subsectionitem6)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:SocialSecurityCosts')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Staff pensions&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('074', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('164', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem2add" pre="section1subsection3.AddItem(section1subsection3subsectionitem2)" />
    <var name="section1subsection3subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('234', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem3add" pre="section1subsection3.AddItem(section1subsection3subsectionitem3)" />
    <var name="section1subsection3subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('075', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem4add" pre="section1subsection3.AddItem(section1subsection3subsectionitem4)" />
    <var name="section1subsection3subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('165', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem5add" pre="section1subsection3.AddItem(section1subsection3subsectionitem5)" />
    <var name="section1subsection3subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('235', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem6add" pre="section1subsection3.AddItem(section1subsection3subsectionitem6)" />
    <var name="section1subsection3subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('246', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem7add" pre="section1subsection3.AddItem(section1subsection3subsectionitem7)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:PensionCosts')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:StaffCosts')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
				</report-template>
				<report-template version="12" name="Directors' remuneration" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="HasDirectorsRemuneration" enabled="Conditional" section-name="DirectorsRemuneration" page-break-before="False" keep-with-next-strength="0" template-guid="b1a1c531-5084-4c88-96da-c39fbff0bf53" contents-name-expression="if  DirectorsActiveAtFinalisationCount  =  1  then  &amp;quot;Director's remuneration&amp;quot;  else  &amp;quot;Directors' remuneration&amp;quot;">
					<variables>
						<variable name="HasDirectorsRemuneration">(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("072").Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("072").Totals[0].HasTransactions)

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("162").Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("162").Totals[0].HasTransactions)

or
(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("232").Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("232").Totals[0].HasTransactions)
or
(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("078").Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("078").Totals[0].HasTransactions)
or
(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("168").Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("168").Totals[0].HasTransactions)
or
(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("239").Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("239").Totals[0].HasTransactions)


or
(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("246").Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("246").Totals[0].HasTransactions)
or
(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("247").Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("247").Totals[0].HasTransactions)

or HasMoneyPurchasePension</variable>
						<variable name="HasMoneyPurchasePension">(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode("075.00").Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode("075.00").Totals[0].HasTransactions)
or
(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode("165.00").Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode("165.00").Totals[0].HasTransactions)
or
(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode("235.00").Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode("235.00").Totals[0].HasTransactions)
or
(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode("075.02").Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode("075.02").Totals[0].HasTransactions)
or
(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode("165.02").Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode("165.02").Totals[0].HasTransactions)
or
(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode("235.02").Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode("235.02").Totals[0].HasTransactions)</variable>
					</variables>
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
  <para para-alignment="Left" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">The <ws /><inline condition="DirectorsDuringPeriod.Count != 1">directors'</inline><inline condition="DirectorsDuringPeriod.Count = 1">director's</inline><ws /> remuneration for the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> was as follows:</para>
</add-to-body></template>
					<report-template version="12" name="Directors' remuneration - Small" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="CompanySize = 'Small'" enabled="Conditional" section-name="DirectorsRemunerationValuesSmall" page-break-before="False" keep-with-next-strength="0" template-guid="9e5f1671-b805-4ed3-988d-0b03deb5f6c6">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'DirectorsRemunerationSmall', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Text')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Table Text')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Table Text')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Table Text')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Table Text')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Table Text')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Table Text')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Final Value In List')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('RemunerationIncludingBIK', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Remuneration&lt;inline condition=&quot;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|DirectorsRemuneration|BIK|TotalBIK|Current Period&amp;quot;)[0].HasValue&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;&#xD;&#xA;(reportHelper.HasPriorPeriod and&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|DirectorsRemuneration|BIK|TotalBIK|Prior Period&amp;quot;)[0].HasValue)&#xD;&#xA;&#xD;&#xA;or&#xD;&#xA;&#xD;&#xA;(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;075.00&amp;quot;).Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;075.00&amp;quot;).Totals[0].HasTransactions)&#xD;&#xA;or&#xD;&#xA;(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;165.00&amp;quot;).Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;165.00&amp;quot;).Totals[0].HasTransactions)&#xD;&#xA;or&#xD;&#xA;(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;235.00&amp;quot;).Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;235.00&amp;quot;).Totals[0].HasTransactions)&#xD;&#xA;or&#xD;&#xA;(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;075.02&amp;quot;).Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;075.02&amp;quot;).Totals[0].HasTransactions)&#xD;&#xA;or&#xD;&#xA;(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;165.02&amp;quot;).Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;165.02&amp;quot;).Totals[0].HasTransactions)&#xD;&#xA;or&#xD;&#xA;(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;235.02&amp;quot;).Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;235.02&amp;quot;).Totals[0].HasTransactions)&quot;&gt;&lt;ws/&gt; (including &lt;ws/&gt;&lt;inline condition=&quot;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|DirectorsRemuneration|BIK|TotalBIK|Current Period&amp;quot;)[0].HasValue&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;&#xD;&#xA;(reportHelper.HasPriorPeriod and&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|DirectorsRemuneration|BIK|TotalBIK|Prior Period&amp;quot;)[0].HasValue)&quot;&gt;benefits in kind&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;(reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|DirectorsRemuneration|BIK|TotalBIK|Current Period&amp;quot;)[0].HasValue&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;&#xD;&#xA;(reportHelper.HasPriorPeriod and&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|DirectorsRemuneration|BIK|TotalBIK|Prior Period&amp;quot;)[0].HasValue))&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;((reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;075.00&amp;quot;).Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;075.00&amp;quot;).Totals[0].HasTransactions)&#xD;&#xA;or&#xD;&#xA;(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;165.00&amp;quot;).Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;165.00&amp;quot;).Totals[0].HasTransactions)&#xD;&#xA;or&#xD;&#xA;(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;235.00&amp;quot;).Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;235.00&amp;quot;).Totals[0].HasTransactions)&#xD;&#xA;or&#xD;&#xA;(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;075.02&amp;quot;).Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;075.02&amp;quot;).Totals[0].HasTransactions)&#xD;&#xA;or&#xD;&#xA;(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;165.02&amp;quot;).Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;165.02&amp;quot;).Totals[0].HasTransactions)&#xD;&#xA;or&#xD;&#xA;(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;235.02&amp;quot;).Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;235.02&amp;quot;).Totals[0].HasTransactions))&quot;&gt;&lt;ws/&gt; and &lt;ws/&gt;&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;075.00&amp;quot;).Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;075.00&amp;quot;).Totals[0].HasTransactions)&#xD;&#xA;or&#xD;&#xA;(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;165.00&amp;quot;).Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;165.00&amp;quot;).Totals[0].HasTransactions)&#xD;&#xA;or&#xD;&#xA;(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;235.00&amp;quot;).Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;235.00&amp;quot;).Totals[0].HasTransactions)&#xD;&#xA;or&#xD;&#xA;(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;075.02&amp;quot;).Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;075.02&amp;quot;).Totals[0].HasTransactions)&#xD;&#xA;or&#xD;&#xA;(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;165.02&amp;quot;).Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;165.02&amp;quot;).Totals[0].HasTransactions)&#xD;&#xA;or&#xD;&#xA;(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;235.02&amp;quot;).Totals!=null and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode(&amp;quot;235.02&amp;quot;).Totals[0].HasTransactions)&quot;&gt;money purchase pension scheme contributions&lt;/inline&gt;&#xD;&#xA;)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('072', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('162', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem2add" pre="section1subsection1.AddItem(section1subsection1subsectionitem2)" />
    <var name="section1subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('232', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem3add" pre="section1subsection1.AddItem(section1subsection1subsectionitem3)" />
    <var name="section1subsection1subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('078', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem4add" pre="section1subsection1.AddItem(section1subsection1subsectionitem4)" />
    <var name="section1subsection1subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('168', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem5add" pre="section1subsection1.AddItem(section1subsection1subsectionitem5)" />
    <var name="section1subsection1subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('239', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem6add" pre="section1subsection1.AddItem(section1subsection1subsectionitem6)" />
    <var name="section1subsection1subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|DirectorsRemuneration|BIK|TotalBIK', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem7add" pre="section1subsection1.AddItem(section1subsection1subsectionitem7)" />
    <var name="section1subsection1subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('075.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem8add" pre="section1subsection1.AddItem(section1subsection1subsectionitem8)" />
    <var name="section1subsection1subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('075.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem9add" pre="section1subsection1.AddItem(section1subsection1subsectionitem9)" />
    <var name="section1subsection1subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('165.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem10add" pre="section1subsection1.AddItem(section1subsection1subsectionitem10)" />
    <var name="section1subsection1subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('165.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem11add" pre="section1subsection1.AddItem(section1subsection1subsectionitem11)" />
    <var name="section1subsection1subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('235.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem12add" pre="section1subsection1.AddItem(section1subsection1subsectionitem12)" />
    <var name="section1subsection1subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('235.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem13add" pre="section1subsection1.AddItem(section1subsection1subsectionitem13)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-direp:DirectorRemuneration')" />
    <var name="section1subsection1XBRLDimensionsSet" pre="section1subsection1.SetDimensions('uk-bus:EntityOfficersDimension=uk-bus:AllEntityOfficers')" />
    <var name="section1subsection1XBRLHypercubeNameSet" pre="section1subsection1.SetHypercubeName('uk-bus:EntityOfficersHypercube')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Compensation for loss of office&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('247', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-direp:CompensationForLossOfficeDirectors')" />
    <var name="section1subsection2XBRLDimensionsSet" pre="section1subsection2.SetDimensions('uk-bus:EntityOfficersDimension=uk-bus:AllEntityOfficers')" />
    <var name="section1subsection2XBRLHypercubeNameSet" pre="section1subsection2.SetHypercubeName('uk-bus:EntityOfficersHypercube')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-direp:DirectorRemunerationBenefitsExcludingPaymentsToThirdParties')" />
    <var name="section1XBRLDimensionsSet" pre="section1.SetDimensions('uk-bus:EntityOfficersDimension=uk-bus:AllEntityOfficers')" />
    <var name="section1XBRLHypercubeNameSet" pre="section1.SetHypercubeName('uk-bus:EntityOfficersHypercube')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Directors' remuneration - Medium/large" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="CompanySize != &quot;Small&quot;" enabled="Conditional" section-name="DirectorsRemunerationValuesMediumLarge" page-break-before="False" keep-with-next-strength="0" template-guid="2c073f04-1d26-455d-918e-d8e417bec3e9">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'DirectorsRemunerationMediumLarge', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Text')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Table Text')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Table Text')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Table Text')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Table Text')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Table Text')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Table Text')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Final Value In List')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('RemunerationIncludingBIK', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Remuneration&lt;inline condition=&quot;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|DirectorsRemuneration|BIK|TotalBIK|Current Period&amp;quot;)[0].HasValue&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|DirectorsRemuneration|BIK|TotalBIK|Prior Period&amp;quot;)[0].HasValue&#xD;&#xA;&quot;&gt;&lt;ws/&gt; (including benefits in kind)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('072', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('162', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem2add" pre="section1subsection1.AddItem(section1subsection1subsectionitem2)" />
    <var name="section1subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('232', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem3add" pre="section1subsection1.AddItem(section1subsection1subsectionitem3)" />
    <var name="section1subsection1subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('078', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem4add" pre="section1subsection1.AddItem(section1subsection1subsectionitem4)" />
    <var name="section1subsection1subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('168', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem5add" pre="section1subsection1.AddItem(section1subsection1subsectionitem5)" />
    <var name="section1subsection1subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('239', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem6add" pre="section1subsection1.AddItem(section1subsection1subsectionitem6)" />
    <var name="section1subsection1subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|DirectorsRemuneration|BIK|TotalBIK', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem7add" pre="section1subsection1.AddItem(section1subsection1subsectionitem7)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-direp:DirectorRemuneration')" />
    <var name="section1subsection1XBRLDimensionsSet" pre="section1subsection1.SetDimensions('uk-bus:EntityOfficersDimension=uk-bus:AllEntityOfficers')" />
    <var name="section1subsection1XBRLHypercubeNameSet" pre="section1subsection1.SetHypercubeName('uk-bus:EntityOfficersHypercube')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Company contributions paid to money purchase schemes&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('075.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('075.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem2add" pre="section1subsection2.AddItem(section1subsection2subsectionitem2)" />
    <var name="section1subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('165.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem3add" pre="section1subsection2.AddItem(section1subsection2subsectionitem3)" />
    <var name="section1subsection2subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('165.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem4add" pre="section1subsection2.AddItem(section1subsection2subsectionitem4)" />
    <var name="section1subsection2subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('235.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem5add" pre="section1subsection2.AddItem(section1subsection2subsectionitem5)" />
    <var name="section1subsection2subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('235.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem6add" pre="section1subsection2.AddItem(section1subsection2subsectionitem6)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-direp:CompanyContributionsToMoneyPurchaseSchemesDirectors')" />
    <var name="section1subsection2XBRLDimensionsSet" pre="section1subsection2.SetDimensions('uk-bus:EntityOfficersDimension=uk-bus:AllEntityOfficers')" />
    <var name="section1subsection2XBRLHypercubeNameSet" pre="section1subsection2.SetHypercubeName('uk-bus:EntityOfficersHypercube')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Compensation for loss of office&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('247', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-direp:CompensationForLossOfficeDirectors')" />
    <var name="section1subsection3XBRLDimensionsSet" pre="section1subsection3.SetDimensions('uk-bus:EntityOfficersDimension=uk-bus:AllEntityOfficers')" />
    <var name="section1subsection3XBRLHypercubeNameSet" pre="section1subsection3.SetHypercubeName('uk-bus:EntityOfficersHypercube')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-direp:DirectorRemunerationBenefitsExcludingPaymentsToThirdParties')" />
    <var name="section1XBRLDimensionsSet" pre="section1.SetDimensions('uk-bus:EntityOfficersDimension=uk-bus:AllEntityOfficers')" />
    <var name="section1XBRLHypercubeNameSet" pre="section1.SetHypercubeName('uk-bus:EntityOfficersHypercube')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Number of directors" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|DirectorsRemuneration|BenefitsAndShareIncentives|NumberDirectors|Rows|*:filter['Period'|'Current Period'&gt;0,'Period'|'Prior Period'&gt;0]&quot;,null, true).Count &gt; 0" enabled="Conditional" section-name="NumberOfDirectors" page-break-before="False" keep-with-next-strength="0" template-guid="93d86b35-5da5-4744-b099-df22dc8243dc">
						<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">During the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> the number of directors who were receiving benefits and share incentives was as follows:</para>
</add-to-body></template>
						<report-template version="12" name="Number of directors values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="NumberOfDirectorsValues" page-break-before="False" keep-with-next-strength="0" template-guid="7b9b0b8c-ad90-42f5-a1fb-76e2e19b7dd1">
							<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'NumberOfDirectorsValues', 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Text')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Table Text')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Table Text')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Table Text')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Table Text')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Table Text')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Table Text')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;No.&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-bus:EntityOfficersDimension=uk-bus:AllEntityOfficers')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-bus:EntityOfficersHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;No.&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-bus:EntityOfficersDimension=uk-bus:AllEntityOfficers,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-bus:EntityOfficersHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('DirectorsPension', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Received or were entitled to receive shares under long term incentive schemes&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|DirectorsRemuneration|BenefitsAndShareIncentives|NumberDirectors|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-direp:NumberDirectorsWhoReceivedOrWereEntitledToReceiveSharesUnderLongTermIncentiveSchemes')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Exercised share options&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|DirectorsRemuneration|BenefitsAndShareIncentives|NumberDirectors|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-direp:NumberDirectorsWhoExercisedShareOptions')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Accruing benefits under defined benefit pension scheme&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|DirectorsRemuneration|BenefitsAndShareIncentives|NumberDirectors|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-direp:NumberDirectorsAccruingBenefitsUnderDefinedBenefitScheme')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Accruing benefits under money purchase pension scheme&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|DirectorsRemuneration|BenefitsAndShareIncentives|NumberDirectors|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-direp:NumberDirectorsAccruingBenefitsUnderMoneyPurchaseScheme')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
						</report-template>
					</report-template>
					<report-template version="12" name="Highest paid director" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|DirectorsRemuneration|HighestPaid|HighestPaidDirector|Rows|*:filter['Period'|'Current Period'&gt;0,'Period'|'Prior Period'&gt;0]&quot;,null, true).Count &gt; 0 and FRSSE = false and CompanySize!='Small'" enabled="Conditional" section-name="Highest paid director" page-break-before="False" keep-with-next-strength="0" template-guid="f81d57b2-7500-46af-9e67-c58b98848a7a">
						<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">In respect of the highest paid director:</para>
</add-to-body></template>
						<report-template version="12" name="Highest paid director" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="HighestPaidDirectorValues" page-break-before="False" keep-with-next-strength="0" template-guid="f4399a62-ada3-4b92-b920-39744a36e03a">
							<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'HighestPaidDirector', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Text')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Table Text')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Table Text')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Table Text')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Table Text')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Table Text')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Table Text')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Final Value In List')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('Current')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('Prior')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('HighestPaidDirector', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Remuneration&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|DirectorsRemuneration|HighestPaid|HighestPaidDirector|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-direp:DirectorRemunerationBenefitsExcludingPaymentsToThirdParties')" />
    <var name="section1subsection1XBRLDimensionsSet" pre="section1subsection1.SetDimensions('uk-bus:EntityOfficersDimension=uk-bus:HighestPaidDirector')" />
    <var name="section1subsection1XBRLHypercubeNameSet" pre="section1subsection1.SetHypercubeName('uk-bus:EntityOfficersHypercube')" />
    <var name="section1subsection1XBRLPeriodSet" pre="section1subsection1.SetPeriod('Duration')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Benefits under long-term incentive schemes (excluding shares)&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|DirectorsRemuneration|HighestPaid|HighestPaidDirector|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-direp:BenefitsUnderLong-termIncentiveSchemesDirectors')" />
    <var name="section1subsection2XBRLDimensionsSet" pre="section1subsection2.SetDimensions('uk-bus:EntityOfficersDimension=uk-bus:HighestPaidDirector')" />
    <var name="section1subsection2XBRLHypercubeNameSet" pre="section1subsection2.SetHypercubeName('uk-bus:EntityOfficersHypercube')" />
    <var name="section1subsection2XBRLPeriodSet" pre="section1subsection2.SetPeriod('Duration')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Company contributions to money purchase pension schemes&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|DirectorsRemuneration|HighestPaid|HighestPaidDirector|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-direp:CompanyContributionsToMoneyPurchaseSchemesDirectors')" />
    <var name="section1subsection3XBRLDimensionsSet" pre="section1subsection3.SetDimensions('uk-bus:EntityOfficersDimension=uk-bus:HighestPaidDirector')" />
    <var name="section1subsection3XBRLHypercubeNameSet" pre="section1subsection3.SetHypercubeName('uk-bus:EntityOfficersHypercube')" />
    <var name="section1subsection3XBRLPeriodSet" pre="section1subsection3.SetPeriod('Duration')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Defined benefit accrued pension entitlement at the end of the period&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|DirectorsRemuneration|HighestPaid|HighestPaidDirector|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-direp:AccruedPensionEntitlementUnderDefinedBenefitSchemeDirectors')" />
    <var name="section1subsection4XBRLDimensionsSet" pre="section1subsection4.SetDimensions('uk-bus:EntityOfficersDimension=uk-bus:HighestPaidDirector')" />
    <var name="section1subsection4XBRLHypercubeNameSet" pre="section1subsection4.SetHypercubeName('uk-bus:EntityOfficersHypercube')" />
    <var name="section1subsection4XBRLPeriodSet" pre="section1subsection4.SetPeriod('End')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Defined benefit accrued lump sum at the end of the period&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|DirectorsRemuneration|HighestPaid|HighestPaidDirector|Rows|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-direp:AccruedLumpSumPensionEntitlementUnderDefinedBenefitSchemeDirectors')" />
    <var name="section1subsection5XBRLDimensionsSet" pre="section1subsection5.SetDimensions('uk-bus:EntityOfficersDimension=uk-bus:HighestPaidDirector')" />
    <var name="section1subsection5XBRLHypercubeNameSet" pre="section1subsection5.SetHypercubeName('uk-bus:EntityOfficersHypercube')" />
    <var name="section1subsection5XBRLPeriodSet" pre="section1subsection5.SetPeriod('End')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1XBRLPeriodSet" pre="section1.SetPeriod('Duration')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
						</report-template>
						<report-template version="12" name="Exercised share options/ receive shares" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|DirectorsRemuneration|HighestPaid|ExercisedShareOptions|Current Period&quot;)[0].Value = true) or (reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|DirectorsRemuneration|HighestPaid|LongTermIncentiveSchemes|Current Period&quot;)[0].Value = true)" enabled="Conditional" section-name="Exercised share options/ receive shares" page-break-before="False" keep-with-next-strength="0" template-guid="f6aea78d-3a74-4d19-98a6-e61e9b28c831">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">During the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> the highest paid director<inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|DirectorsRemuneration|HighestPaid|ExercisedShareOptions|Current Period&quot;)[0].Value = true"><ws /> exercised share options</inline><inline condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|DirectorsRemuneration|HighestPaid|ExercisedShareOptions|Current Period&quot;)[0].Value = true) and&#xD;&#xA;&#xD;&#xA;(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|DirectorsRemuneration|HighestPaid|LongTermIncentiveSchemes|Current Period&quot;)[0].Value = true)"><ws /> and also</inline><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|DirectorsRemuneration|HighestPaid|LongTermIncentiveSchemes|Current Period&quot;)[0].Value = true"><ws /> received or was entitled to receive shares under a long term incentive scheme</inline>
.</para>
</add-to-body></template>
						</report-template>
					</report-template>
				</report-template>
				<report-template version="12" name="Other interest receivable and similar income" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="HasInterestReceivable = true and FRSSE = false" enabled="Conditional" section-name="InterestReceivable" page-break-before="False" keep-with-next-strength="0" template-guid="db88d9e4-ab64-4be9-89d5-f0ab9b502a6a">
					<variables>
						<variable name="HasInterestReceivable">reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryRange(430,439).HasTransactions

or

reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('462').Totals[0].Value &lt;0

or

(reportHelper.HasPriorPeriod

and

reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('462').Totals[1].Value &lt;0)
</variable>
					</variables>
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Interest receivable values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="InterestReceivableValues" page-break-before="False" keep-with-next-strength="0" template-guid="d420d72f-9767-4a11-9590-f73d081a363d">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'CreditorsUnder1YearSmall', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('InterestReceivableAndOtherSimilarIncome', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Bank interest receivable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('430', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:InterestReceivableOnBankDeposits')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other interest receivable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('431', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:OtherInterestReceivable')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Pension scheme other finance income&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('462', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:IncomeChargeOnPensionSchemes-Net')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:OtherInterestReceivableSimilarIncome')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
				</report-template>
				<report-template version="12" name="Interest payable and similar charges" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="(HasInterestPayable and FRSSE=false) or (FRSSE = true and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&quot;463&quot;).HasTransactions)" enabled="Conditional" section-name="InterestPayable" page-break-before="False" keep-with-next-strength="0" template-guid="e2ffefc5-8572-4d33-adab-796b598d48cb">
					<variables>
						<variable name="HasInterestPayable">reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('462').Totals[0].Value &gt;0

or

(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('462').Totals[1].Value &gt;0)

or

reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange(463,464).HasTransactions

or



reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange(465,469).HasTransactions



or

reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('444').HasTransactions

or

reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('445').HasTransactions


or

reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('477').HasTransactions

or



reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('448').HasTransactions



or

reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('449').HasTransactions


or

reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('450').HasTransactions


or

reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('451').HasTransactions


or

reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('452').HasTransactions


or

reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('454').HasTransactions

or

reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('455').HasTransactions

or


reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('458').HasTransactions

or

reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('461').HasTransactions

</variable>
					</variables>
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Interest payable to group companies(FRSSE Disclosure)" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="FRSSE=true and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&quot;463&quot;).HasTransactions" enabled="Conditional" section-name="InterestPayableToGroupCompanies(FRSSEDisclosure)" page-break-before="False" keep-with-next-strength="0" template-guid="d0ebbd19-4186-418e-8b36-ff4f62a3219a">
						<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Interest payable includes <ws /><inline xbrl-concept="uk-gaap:LoansFromSubsidiariesGroupUndertakingsFinanceCharges" xbrl-period="CurrentPeriod"><data>
	reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("463").Totals[0].Value
</data></inline><ws /><inline condition="reportHelper.HasPriorPeriod">(<data>reportHelper.PriorPeriod.EndDate.Value.Year</data><ws /> - <ws /><inline xbrl-concept="uk-gaap:LoansFromSubsidiariesGroupUndertakingsFinanceCharges" xbrl-period="PriorPeriod"><data>
	reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode("463").Totals[1].Value
</data></inline>
)</inline><ws /> payable on loans from group companies.</para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Interest payable and similar charges table (full disclosure)" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="FRSSE=false" enabled="Conditional" section-name="InterestPayableAndSimilarCharges(FullDisclosure)" page-break-before="False" keep-with-next-strength="0" template-guid="d237bb11-e066-40fd-882e-cf2ca4725bc8">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'InterestPayable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('InterestPayableAndSimilarCharges', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Interest on bank borrowings&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('444', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('445', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem2add" pre="section1subsection1.AddItem(section1subsection1subsectionitem2)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:BankLoansOverdraftsFinanceCharges')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Interest on loans from group undertakings&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('463', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:LoansFromJoint-venturesAssociatesGroupUndertakingsFinanceCharges')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Interest on other loans&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('448', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:LoansOtherThanBanksLoansOverdraftsFinanceCharges')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other interest payable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('451', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('452', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem2add" pre="section1subsection4.AddItem(section1subsection4subsectionitem2)" />
    <var name="section1subsection4subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('454', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem3add" pre="section1subsection4.AddItem(section1subsection4subsectionitem3)" />
    <var name="section1subsection4subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('455', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem4add" pre="section1subsection4.AddItem(section1subsection4subsectionitem4)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:OtherBorrowingsInterestPaymentsSimilarCharges')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Finance charges&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('449', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('450', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem2add" pre="section1subsection5.AddItem(section1subsection5subsectionitem2)" />
    <var name="section1subsection5subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('465', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem3add" pre="section1subsection5.AddItem(section1subsection5subsectionitem3)" />
    <var name="section1subsection5subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('466', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem4add" pre="section1subsection5.AddItem(section1subsection5subsectionitem4)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:LeasesHirePurchaseContractsFinanceCharges')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Preference share dividends&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('447', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:PreferenceSharesClassifiedAsDebtFinanceCharges')" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Premium on redemption of loans&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('458', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:PremiumOnRepaymentLoansFinanceCharges')" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;(Gains)/losses on early repurchase of debt&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('461', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
    <var name="section1subsection8XBRLConceptNameSet" pre="section1subsection8.SetConceptName('uk-gaap:GainLossOnRepurchaseOrEarlySettlementDebt')" />
    <var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
    <var name="section1subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Pension scheme other finance costs&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('462', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection9subsectionitem1add" pre="section1subsection9.AddItem(section1subsection9subsectionitem1)" />
    <var name="section1subsection9XBRLConceptNameSet" pre="section1subsection9.SetConceptName('uk-gaap:IncomeChargeOnPensionSchemes-Net')" />
    <var name="section1subsection9add" pre="section1.AddItem(section1subsection9)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:InterestPayableSimilarCharges')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
				</report-template>
				<report-template version="12" name="Taxation" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryRange('470-484').HasTransactions" enabled="Conditional" section-name="Taxation" page-break-before="False" keep-with-next-strength="0" template-guid="8f27d411-cbe1-4105-b7fe-2c1c7c945e27">
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Tax on profit title" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="TaxOnProfitTitle" page-break-before="False" keep-with-next-strength="0" template-guid="ddc680b4-38cf-4ffc-8a86-3464eccd686a">
						<template><add-to-body>
  <para para-alignment="Left" base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Tax on <ws /><data>(PBT)
	</data><ws /> on ordinary activities</para>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Analysis of current period tax charge" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="AnalysisOfCurrentPeriodTaxCharge" page-break-before="False" keep-with-next-strength="0" template-guid="97e607b4-a274-47a6-935d-539b111dc597">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'AnalysisOfCurrentPeriodTaxCharge', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('CurrentTax', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Current tax&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;UK Corporation tax&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Corporation tax &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;charge/(credit)&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('470', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:UKCurrentCorporationTaxOnIncomeForPeriod')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Adjustments in respect of previous years&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('471', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:IncreaseDecreaseInUKCorporationTaxArisingFromAdjustmentForPriorPeriods')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Double taxation relief&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('473', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:DoubleTaxationRelief')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Group relief payable/(receivable)&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('475', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:GroupTaxationReliefReceivablePayable')" />
    <var name="section1subsection4XBRLReverseSignSet" pre="section1subsection4.SetReverseSign(true)" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:UKCurrentCorporationTax')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('IncomeTax', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Income tax&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current tax on income&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('474', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Tax attributable to investment income&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('472', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2XBRLConceptNameSet" pre="section2subsection2.SetConceptName('uk-gaap:TaxAttributableToInvestmentIncome')" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;UK income tax&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('480', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem1add" pre="section2subsection3.AddItem(section2subsection3subsectionitem1)" />
    <var name="section2subsection3XBRLConceptNameSet" pre="section2subsection3.SetConceptName('uk-gaap:UKIncomeTax')" />
    <var name="section2subsection3add" pre="section2.AddItem(section2subsection3)" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('TotalCurrentTax', '&lt;para&gt;Total current tax&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section3item1" pre="section3.AddTotalItem(section1)" />
    <var name="section3item2" pre="section3.AddTotalItem(section2)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:TotalUKForeignCurrentTaxAfterAdjustmentsRelief')" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <var name="section4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('DeferredTax', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Deferred tax&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Total deferred tax&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section4subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Irrecoverable Advanced Corporation Tax&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('476', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection1subsectionitem1add" pre="section4subsection1.AddItem(section4subsection1subsectionitem1)" />
    <var name="section4subsection1XBRLConceptNameSet" pre="section4subsection1.SetConceptName('uk-gaap:AdvancedCorporationTaxWrittenOffBack')" />
    <var name="section4subsection1add" pre="section4.AddItem(section4subsection1)" />
    <var name="section4subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Origination and reversal of timing differences&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('477', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection2subsectionitem1add" pre="section4subsection2.AddItem(section4subsection2subsectionitem1)" />
    <var name="section4subsection2XBRLConceptNameSet" pre="section4subsection2.SetConceptName('uk-gaap:IncreaseDecreaseInUKTaxFromOriginationReversalTimingDifferences')" />
    <var name="section4subsection2add" pre="section4.AddItem(section4subsection2)" />
    <var name="section4subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Deferred tax adjustment relating to previous years&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('478', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection3subsectionitem1add" pre="section4subsection3.AddItem(section4subsection3subsectionitem1)" />
    <var name="section4subsection3XBRLConceptNameSet" pre="section4subsection3.SetConceptName('uk-gaap:IncreaseDecreaseInUKDeferredTaxArisingFromAdjustmentForPriorPeriods')" />
    <var name="section4subsection3add" pre="section4.AddItem(section4subsection3)" />
    <var name="section4subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Effect of changes in tax rates&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('481', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem1add" pre="section4subsection4.AddItem(section4subsection4subsectionitem1)" />
    <var name="section4subsection4XBRLConceptNameSet" pre="section4subsection4.SetConceptName('uk-gaap:IncreaseDecreaseOnOpeningTaxLiabilityFromChangesInTaxRatesLaws')" />
    <var name="section4subsection4add" pre="section4.AddItem(section4subsection4)" />
    <var name="section4subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Deferred tax relating to FRS 17&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('479', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection5subsectionitem1add" pre="section4subsection5.AddItem(section4subsection5subsectionitem1)" />
    <var name="section4subsection5add" pre="section4.AddItem(section4subsection5)" />
    <var name="section4XBRLConceptNameSet" pre="section4.SetConceptName('uk-gaap:TotalUKForeignDeferredTax')" />
    <var name="section4add" pre="smartTable.AddTableBlock(section4)" />
    <var name="section5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('TotalTaxOnProfitLossOnOrdinaryActivities', '&lt;para&gt;Total tax on &lt;ws/&gt;&lt;inline condition=&quot;reportHelper.HasPriorPeriod = false&#xD;&#xA;&quot;&gt;&lt;data&gt;if &#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCategory(&amp;apos;PBT&amp;apos;).Totals[0].Value &amp;lt; 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;profit&amp;apos;&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCategory(&amp;apos;PBT&amp;apos;).Totals[0].Value &amp;gt; 0&#xD;&#xA;&#xD;&#xA;then &#xD;&#xA;&#xD;&#xA;&amp;apos;loss&amp;apos;&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;&amp;apos;results&amp;apos;&lt;/data&gt;&#xD;&#xA;&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;reportHelper.HasPriorPeriod&quot;&gt;&lt;data&gt;&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;reportHelper.HasPriorPeriod and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCategory(&amp;apos;PBT&amp;apos;).Totals[0].Value &amp;lt; 0 and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCategory(&amp;apos;PBT&amp;apos;).Totals[1].Value &amp;lt; 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;profit&amp;apos;&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;reportHelper.HasPriorPeriod and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCategory(&amp;apos;PBT&amp;apos;).Totals[0].Value &amp;gt; 0 and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCategory(&amp;apos;PBT&amp;apos;).Totals[1].Value &amp;gt; 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;loss&amp;apos;&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;reportHelper.HasPriorPeriod and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCategory(&amp;apos;PBT&amp;apos;).Totals[0].Value &amp;lt; 0 and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCategory(&amp;apos;PBT&amp;apos;).Totals[1].Value &amp;gt; 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;profit/loss&amp;apos;&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;reportHelper.HasPriorPeriod and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCategory(&amp;apos;PBT&amp;apos;).Totals[0].Value &amp;gt; 0 and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCategory(&amp;apos;PBT&amp;apos;).Totals[1].Value &amp;lt; 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;loss/profit&amp;apos;&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;&amp;apos;profit/loss&amp;apos;&#xD;&#xA;&lt;/data&gt;&#xD;&#xA;&lt;/inline&gt;&#xD;&#xA;&lt;ws/&gt; on ordinary activities&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section5item1" pre="section5.AddTotalItem(section3)" />
    <var name="section5item2" pre="section5.AddTotalItem(section4)" />
    <var name="section5XBRLConceptNameSet" pre="section5.SetConceptName('uk-gaap:TaxOnProfitOrLossOnOrdinaryActivities')" />
    <var name="section5add" pre="smartTable.AddTableBlock(section5)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Factors affecting current tax charge for the year" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="FRSSE = false" enabled="Conditional" section-name="FactorsAffectingCurrentPeriodTaxCharge" page-break-before="False" keep-with-next-strength="0" template-guid="00da417a-93c7-47bd-94bd-c7ab0132f518" contents-name-expression="&amp;quot;Factors affecting current tax charge for the &amp;quot;+reportHelper.CurrentPeriod.YearPeriod">
						<template><add-to-body>
  <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
    <data>
report.Sections.ActiveSection.Description
</data>
  </para>
</add-to-body></template>
						<report-template version="12" name="Current tax difference in tax assessed" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="CurrentTaxDifferenceInTaxAssessed" page-break-before="False" keep-with-next-strength="0" template-guid="a3528556-03db-4697-9c9a-6292f4b474b5">
							<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">Tax on <ws /><data>PBT</data><ws /> on ordinary activities for the year is<inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|CurrentTax|CurrentTax|StandardRateCalculation|Rows|*:item[2]|Period|Current Period&quot;)[0].Value &gt;&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|CurrentTax|CurrentTax|StandardRateCalculation|Rows|*:item[1]|Period|Current Period&quot;)[0].Value "><ws /> higher than</inline><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|CurrentTax|CurrentTax|StandardRateCalculation|Rows|*:item[2]|Period|Current Period&quot;)[0].Value &lt;&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|CurrentTax|CurrentTax|StandardRateCalculation|Rows|*:item[1]|Period|Current Period&quot;)[0].Value "><ws /> lower than</inline><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|CurrentTax|CurrentTax|StandardRateCalculation|Rows|*:item[2]|Period|Current Period&quot;)[0].Value =&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|CurrentTax|CurrentTax|StandardRateCalculation|Rows|*:item[1]|Period|Current Period&quot;)[0].Value "><ws /> the same as</inline><ws /><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.PriorPeriod.EndDate.Value.Year</data><ws /> - <ws /><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|CurrentTax|CurrentTax|StandardRateCalculation|Rows|*:item[2]|Period|Prior Period&quot;)[0].Value &gt;&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|CurrentTax|CurrentTax|StandardRateCalculation|Rows|*:item[1]|Period|Prior Period&quot;)[0].Value "><ws /> higher than</inline><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|CurrentTax|CurrentTax|StandardRateCalculation|Rows|*:item[2]|Period|Prior Period&quot;)[0].Value &lt;&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|CurrentTax|CurrentTax|StandardRateCalculation|Rows|*:item[1]|Period|Prior Period&quot;)[0].Value "><ws /> lower than</inline><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|CurrentTax|CurrentTax|StandardRateCalculation|Rows|*:item[2]|Period|Prior Period&quot;)[0].Value =&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|CurrentTax|CurrentTax|StandardRateCalculation|Rows|*:item[1]|Period|Prior Period&quot;)[0].Value "><ws /> the same as</inline>
)</inline><inline font-style="+italic"><ws /></inline>
the standard rate of corporation tax in the UK of <ws /><inline xbrl-concept="uk-gaap:StandardNominalTaxRate" xbrl-period="CurrentPeriod"><data base-style="Percentage">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|Currenttax|Currenttax|Rate|Current Period")[0].Value</data></inline><inline condition="reportHelper.HasPriorPeriod"><inline base-style="Percentage"><ws /> (</inline><data base-style="Percentage">reportHelper.PriorPeriod.EndDate.Value.Year</data><inline base-style="Percentage"><ws /> - <ws /></inline><inline xbrl-concept="uk-gaap:StandardNominalTaxRate" xbrl-period="PriorPeriod"><data base-style="Percentage">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|Currenttax|Currenttax|Rate|Prior Period")[0].Value</data></inline><inline base-style="Percentage">)</inline></inline>
.
<br /><br /><inline base-style="Percentage">The differences are reconciled below:</inline></para>
</add-to-body></template>
						</report-template>
						<report-template version="12" name="Current tax reconciliation" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="CurrentTaxReconciliation" page-break-before="False" keep-with-next-strength="0" template-guid="bc74106c-3e37-4e55-ac32-e1d4d7989693">
							<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'MyFirstTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else if dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0 then &amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;) else dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ProfitBeforeTax', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; on ordinary activities before taxation&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Sales&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('001-049', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cost of sales&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('050-159', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Distribution&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('160-229', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Administration&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('230-399', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other operating income&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('400-409', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Exceptional&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('410-419', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Income from group companies&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('420-421', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Income from participating interests&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('422-423', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
    <var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
    <var name="section1subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Income from other investments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('424-429', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection9subsectionitem1add" pre="section1subsection9.AddItem(section1subsection9subsectionitem1)" />
    <var name="section1subsection9add" pre="section1.AddItem(section1subsection9)" />
    <var name="section1subsection10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Interest receivable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection10subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('430-439', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection10subsectionitem1add" pre="section1subsection10.AddItem(section1subsection10subsectionitem1)" />
    <var name="section1subsection10add" pre="section1.AddItem(section1subsection10)" />
    <var name="section1subsection11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Written off investments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection11subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('440-441', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection11subsectionitem1add" pre="section1subsection11.AddItem(section1subsection11subsectionitem1)" />
    <var name="section1subsection11add" pre="section1.AddItem(section1subsection11)" />
    <var name="section1subsection12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Interest payable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection12subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('442-469', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection12subsectionitem1add" pre="section1subsection12.AddItem(section1subsection12subsectionitem1)" />
    <var name="section1subsection12add" pre="section1.AddItem(section1subsection12)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:ProfitLossOnOrdinaryActivitiesBeforeTax')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('CorpTaxAtStandardRate', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Never, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Current tax at standard rate (unrounded)&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Corporation tax charge (credit) at standard rate&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|StandardRateCalculation|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableCalculationRow.Create('RoundedCorpTaxAtStandardRate', '(System.Math.Round((CorpTaxAtStandardRate * reportHelper.StatutoryNoteScaling) / reportHelper.StatutoryNoteRounding) * reportHelper.StatutoryNoteRounding) / reportHelper.StatutoryNoteScaling', '&lt;para&gt;Corporation tax at standard rate&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always)" />
    <var name="section3set" pre="section3.SetSmartTable(smartTable)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:TaxOnGroupProfitOnOrdinaryActivitiesStandardUKTaxRate')" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <var name="section4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('TaxRecItems', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section4subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Capital allowances in excess of depreciation&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Capital allowances in excess of depreciation]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection1subsectionitem1add" pre="section4subsection1.AddItem(section4subsection1subsectionitem1)" />
    <var name="section4subsection1XBRLConceptNameSet" pre="section4subsection1.SetConceptName('uk-gaap:CapitalAllowancesInExcessDepreciationLeadingToDecreaseIncreaseInTax')" />
    <var name="section4subsection1add" pre="section4.AddItem(section4subsection1)" />
    <var name="section4subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Increase or decrease in pension fund prepayment&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Increase or decrease in pension fund prepayment]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection2subsectionitem1add" pre="section4subsection2.AddItem(section4subsection2subsectionitem1)" />
    <var name="section4subsection2XBRLConceptNameSet" pre="section4subsection2.SetConceptName('uk-gaap:IncreaseOrDecreaseInPensionFundPrepaymentLeadingToDecreaseIncreaseInTax')" />
    <var name="section4subsection2XBRLReverseSignSet" pre="section4subsection2.SetReverseSign(true)" />
    <var name="section4subsection2add" pre="section4.AddItem(section4subsection2)" />
    <var name="section4subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Short term timing differences&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Short term timing differences]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection3subsectionitem1add" pre="section4subsection3.AddItem(section4subsection3subsectionitem1)" />
    <var name="section4subsection3XBRLConceptNameSet" pre="section4subsection3.SetConceptName('uk-gaap:ShortTermTimingDifferencesLeadingToDecreaseIncreaseInTaxation')" />
    <var name="section4subsection3XBRLReverseSignSet" pre="section4subsection3.SetReverseSign(true)" />
    <var name="section4subsection3add" pre="section4.AddItem(section4subsection3)" />
    <var name="section4subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other timing differences&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Other timing differences]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem1add" pre="section4subsection4.AddItem(section4subsection4subsectionitem1)" />
    <var name="section4subsection4XBRLConceptNameSet" pre="section4subsection4.SetConceptName('uk-gaap:OtherTimingDifferencesLeadingToDecreaseIncreaseInTaxation')" />
    <var name="section4subsection4XBRLReverseSignSet" pre="section4subsection4.SetReverseSign(true)" />
    <var name="section4subsection4add" pre="section4.AddItem(section4subsection4)" />
    <var name="section4subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Non-taxable income less expenses not deductible for tax purposes&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Non-taxable income less expenses not deductible for tax purposes]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection5subsectionitem1add" pre="section4subsection5.AddItem(section4subsection5subsectionitem1)" />
    <var name="section4subsection5XBRLConceptNameSet" pre="section4subsection5.SetConceptName('uk-gaap:Non-taxableIncomeLessExpensesNotDeductibleForTaxPurposes')" />
    <var name="section4subsection5add" pre="section4.AddItem(section4subsection5)" />
    <var name="section4subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Non-taxable income less expenses not deductible for tax purposes other than goodwill amortisation and impairment&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Non-taxable income less expenses not deductible for tax purposes other than goodwill amortisation and impairment]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection6subsectionitem1add" pre="section4subsection6.AddItem(section4subsection6subsectionitem1)" />
    <var name="section4subsection6XBRLConceptNameSet" pre="section4subsection6.SetConceptName('uk-gaap:Non-taxableIncomeLessExpensesNotDeductibleForTaxPurposesOtherThanGoodwillAmortisationImpairment')" />
    <var name="section4subsection6add" pre="section4.AddItem(section4subsection6)" />
    <var name="section4subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Non-taxable income&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Non-taxable income]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection7subsectionitem1add" pre="section4subsection7.AddItem(section4subsection7subsectionitem1)" />
    <var name="section4subsection7XBRLConceptNameSet" pre="section4subsection7.SetConceptName('uk-gaap:Non-taxableIncome')" />
    <var name="section4subsection7XBRLReverseSignSet" pre="section4subsection7.SetReverseSign(true)" />
    <var name="section4subsection7add" pre="section4.AddItem(section4subsection7)" />
    <var name="section4subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expenses not deductible for tax purposes&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Expenses not deductible for tax purposes]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection8subsectionitem1add" pre="section4subsection8.AddItem(section4subsection8subsectionitem1)" />
    <var name="section4subsection8XBRLConceptNameSet" pre="section4subsection8.SetConceptName('uk-gaap:ExpensesNotDeductibleForTaxPurposes')" />
    <var name="section4subsection8add" pre="section4.AddItem(section4subsection8)" />
    <var name="section4subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Non-tax deductible amortisation of goodwill and impairment&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Non-tax deductible amortisation of goodwill and impairment]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection9subsectionitem1add" pre="section4subsection9.AddItem(section4subsection9subsectionitem1)" />
    <var name="section4subsection9XBRLConceptNameSet" pre="section4subsection9.SetConceptName('uk-gaap:Non-taxDeductibleAmortisationGoodwillImpairment')" />
    <var name="section4subsection9add" pre="section4.AddItem(section4subsection9)" />
    <var name="section4subsection10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expenses not deductible for tax purposes other than goodwill amortisation and impairment&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection10subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Expenses not deductible for tax purposes other than goodwill amortisation and impairment]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection10subsectionitem1add" pre="section4subsection10.AddItem(section4subsection10subsectionitem1)" />
    <var name="section4subsection10XBRLConceptNameSet" pre="section4subsection10.SetConceptName('uk-gaap:ExpensesNotDeductibleForTaxPurposesOtherThanGoodwillAmortisationImpairment')" />
    <var name="section4subsection10add" pre="section4.AddItem(section4subsection10)" />
    <var name="section4subsection11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Adjustment for higher (lower) tax rates on overseas earnings&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection11subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Adjustment for higher (lower) tax rates on overseas earnings]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection11subsectionitem1add" pre="section4subsection11.AddItem(section4subsection11subsectionitem1)" />
    <var name="section4subsection11XBRLConceptNameSet" pre="section4subsection11.SetConceptName('uk-gaap:AdjustmentForHigherLowerTaxRatesOnOverseasEarnings')" />
    <var name="section4subsection11add" pre="section4.AddItem(section4subsection11)" />
    <var name="section4subsection12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Adjustment for long accounting periods&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection12subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Adjustment for long accounting periods]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection12subsectionitem1add" pre="section4subsection12.AddItem(section4subsection12subsectionitem1)" />
    <var name="section4subsection12XBRLConceptNameSet" pre="section4subsection12.SetConceptName('uk-gaap:AdjustmentForLongAccountingPeriodsLeadingToAnIncreaseDecreaseInTaxCharge')" />
    <var name="section4subsection12add" pre="section4.AddItem(section4subsection12)" />
    <var name="section4subsection13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Adjustment for prior periods&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection13subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Adjustment for prior periods]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection13subsectionitem1add" pre="section4subsection13.AddItem(section4subsection13subsectionitem1)" />
    <var name="section4subsection13XBRLConceptNameSet" pre="section4subsection13.SetConceptName('uk-gaap:AdjustmentForPriorPeriodsLeadingToAnIncreaseDecreaseInTaxCharge')" />
    <var name="section4subsection13add" pre="section4.AddItem(section4subsection13)" />
    <var name="section4subsection14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Adjustment in research and development tax credit&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection14subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Adjustment in research and development tax credit]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection14subsectionitem1add" pre="section4subsection14.AddItem(section4subsection14subsectionitem1)" />
    <var name="section4subsection14XBRLConceptNameSet" pre="section4subsection14.SetConceptName('uk-gaap:AdjustmentInResearchDevelopmentTaxCreditLeadingToAnIncreaseDecreaseInTaxCharge')" />
    <var name="section4subsection14add" pre="section4.AddItem(section4subsection14)" />
    <var name="section4subsection15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Book profit on non-taxable share issues&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection15subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Book profit on non-taxable share issues]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection15subsectionitem1add" pre="section4subsection15.AddItem(section4subsection15subsectionitem1)" />
    <var name="section4subsection15XBRLConceptNameSet" pre="section4subsection15.SetConceptName('uk-gaap:BookProfitOnNon-taxableShareIssues')" />
    <var name="section4subsection15XBRLReverseSignSet" pre="section4subsection15.SetReverseSign(true)" />
    <var name="section4subsection15add" pre="section4.AddItem(section4subsection15)" />
    <var name="section4subsection16" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Book profit on chargeable assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection16subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Book profit on chargeable assets]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection16subsectionitem1add" pre="section4subsection16.AddItem(section4subsection16subsectionitem1)" />
    <var name="section4subsection16XBRLConceptNameSet" pre="section4subsection16.SetConceptName('uk-gaap:BookProfitOnChargeableAssets')" />
    <var name="section4subsection16add" pre="section4.AddItem(section4subsection16)" />
    <var name="section4subsection17" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Capital gains&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection17subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Capital gains]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection17subsectionitem1add" pre="section4subsection17.AddItem(section4subsection17subsectionitem1)" />
    <var name="section4subsection17XBRLConceptNameSet" pre="section4subsection17.SetConceptName('uk-gaap:CapitalGains')" />
    <var name="section4subsection17add" pre="section4.AddItem(section4subsection17)" />
    <var name="section4subsection18" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Changes in provisions&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection18subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Changes in provisions]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection18subsectionitem1add" pre="section4subsection18.AddItem(section4subsection18subsectionitem1)" />
    <var name="section4subsection18XBRLConceptNameSet" pre="section4subsection18.SetConceptName('uk-gaap:ChangesInProvisionsLeadingToAnIncreaseDecreaseInTaxCharge')" />
    <var name="section4subsection18add" pre="section4.AddItem(section4subsection18)" />
    <var name="section4subsection19" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Dividends from UK companies&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection19subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Dividends from UK companies]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection19subsectionitem1add" pre="section4subsection19.AddItem(section4subsection19subsectionitem1)" />
    <var name="section4subsection19XBRLConceptNameSet" pre="section4subsection19.SetConceptName('uk-gaap:DividendsFromUKCompanies')" />
    <var name="section4subsection19XBRLReverseSignSet" pre="section4subsection19.SetReverseSign(true)" />
    <var name="section4subsection19add" pre="section4.AddItem(section4subsection19)" />
    <var name="section4subsection20" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Double taxation relief&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection20subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Double taxation relief]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection20subsectionitem1add" pre="section4subsection20.AddItem(section4subsection20subsectionitem1)" />
    <var name="section4subsection20XBRLConceptNameSet" pre="section4subsection20.SetConceptName('uk-gaap:DoubleTaxationRelief')" />
    <var name="section4subsection20XBRLReverseSignSet" pre="section4subsection20.SetReverseSign(true)" />
    <var name="section4subsection20add" pre="section4.AddItem(section4subsection20)" />
    <var name="section4subsection21" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Rollover relief on profit on disposal of fixed asset&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection21subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Rollover relief on profit on disposal of fixed asset]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection21subsectionitem1add" pre="section4subsection21.AddItem(section4subsection21subsectionitem1)" />
    <var name="section4subsection21XBRLConceptNameSet" pre="section4subsection21.SetConceptName('uk-gaap:RolloverReliefOnProfitOnDisposalFixedAssets')" />
    <var name="section4subsection21XBRLReverseSignSet" pre="section4subsection21.SetReverseSign(true)" />
    <var name="section4subsection21add" pre="section4.AddItem(section4subsection21)" />
    <var name="section4subsection22" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Special factors affecting joint-ventures and associates&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection22subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Special factors affecting joint-ventures and associates]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection22subsectionitem1add" pre="section4subsection22.AddItem(section4subsection22subsectionitem1)" />
    <var name="section4subsection22XBRLConceptNameSet" pre="section4subsection22.SetConceptName('uk-gaap:SpecialFactorsAffectingJoint-venturesAssociatesLeadingToAnIncreaseDecreaseInTaxCharge')" />
    <var name="section4subsection22add" pre="section4.AddItem(section4subsection22)" />
    <var name="section4subsection23" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Tax deduction arising from exercise of employee options&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection23subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Tax deduction arising from exercise of employee options]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection23subsectionitem1add" pre="section4subsection23.AddItem(section4subsection23subsectionitem1)" />
    <var name="section4subsection23XBRLConceptNameSet" pre="section4subsection23.SetConceptName('uk-gaap:TaxDeductionArisingFromExerciseEmployeeOptions')" />
    <var name="section4subsection23XBRLReverseSignSet" pre="section4subsection23.SetReverseSign(true)" />
    <var name="section4subsection23add" pre="section4.AddItem(section4subsection23)" />
    <var name="section4subsection24" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Unrelieved tax losses carried forward&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection24subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Unrelieved tax losses carried forward]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection24subsectionitem1add" pre="section4subsection24.AddItem(section4subsection24subsectionitem1)" />
    <var name="section4subsection24XBRLConceptNameSet" pre="section4subsection24.SetConceptName('uk-gaap:UnrelievedTaxLossesCarriedForward')" />
    <var name="section4subsection24add" pre="section4.AddItem(section4subsection24)" />
    <var name="section4subsection25" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Unrelieved losses on disposal of operations&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection25subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Unrelieved losses on disposal of operations]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection25subsectionitem1add" pre="section4subsection25.AddItem(section4subsection25subsectionitem1)" />
    <var name="section4subsection25XBRLConceptNameSet" pre="section4subsection25.SetConceptName('uk-gaap:UnrelievedLossOnDisposalOperation')" />
    <var name="section4subsection25add" pre="section4.AddItem(section4subsection25)" />
    <var name="section4subsection26" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Unrelieved loss on foreign subsidiaries&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection26subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Unrelieved loss on foreign subsidiaries]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection26subsectionitem1add" pre="section4subsection26.AddItem(section4subsection26subsectionitem1)" />
    <var name="section4subsection26XBRLConceptNameSet" pre="section4subsection26.SetConceptName('uk-gaap:UnrelievedLossOnForeignSubsidiaries')" />
    <var name="section4subsection26add" pre="section4.AddItem(section4subsection26)" />
    <var name="section4subsection27" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Utilisation of tax losses&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection27subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Utilisation of tax losses]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection27subsectionitem1add" pre="section4subsection27.AddItem(section4subsection27subsectionitem1)" />
    <var name="section4subsection27XBRLConceptNameSet" pre="section4subsection27.SetConceptName('uk-gaap:UtilisationTaxLosses')" />
    <var name="section4subsection27XBRLReverseSignSet" pre="section4subsection27.SetReverseSign(true)" />
    <var name="section4subsection27add" pre="section4.AddItem(section4subsection27)" />
    <var name="section4subsection28" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other tax relief or charge on exceptional items&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection28subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Other tax relief or charge on exceptional items]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection28subsectionitem1add" pre="section4subsection28.AddItem(section4subsection28subsectionitem1)" />
    <var name="section4subsection28XBRLConceptNameSet" pre="section4subsection28.SetConceptName('uk-gaap:OtherTaxReliefChargeOnExceptionalItems')" />
    <var name="section4subsection28XBRLReverseSignSet" pre="section4subsection28.SetReverseSign(true)" />
    <var name="section4subsection28add" pre="section4.AddItem(section4subsection28)" />
    <var name="section4subsection29" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other differences&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section4subsection29subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|CurrentTax|CurrentTax|Reconciliation|Rows|*:filter[XBRLDefinition|Current Period=Other differences]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection29subsectionitem1add" pre="section4subsection29.AddItem(section4subsection29subsectionitem1)" />
    <var name="section4subsection29XBRLConceptNameSet" pre="section4subsection29.SetConceptName('uk-gaap:OtherDifferencesLeadingToAnIncreaseDecreaseInTaxCharge')" />
    <var name="section4subsection29add" pre="section4.AddItem(section4subsection29)" />
    <var name="section4XBRLConceptNameSet" pre="section4.SetConceptName('uk-gaap:TotalUKForeignCurrentTaxAfterAdjustmentsRelief')" />
    <var name="section4add" pre="smartTable.AddTableBlock(section4)" />
    <var name="section5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('TotalCurrentTax', '&lt;para&gt;Total current tax&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.Always, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section5item1" pre="section5.AddTotalItem(section3)" />
    <var name="section5item2" pre="section5.AddTotalItem(section4)" />
    <var name="section5XBRLConceptNameSet" pre="section5.SetConceptName('uk-gaap:TotalUKForeignCurrentTaxAfterAdjustmentsRelief')" />
    <var name="section5add" pre="smartTable.AddTableBlock(section5)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
						</report-template>
					</report-template>
					<report-template version="12" name="Factors that may affect future tax charges" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FactorsAffectingFutureTaxCharge|CRRAndUnrecognisedDT|ConditionalRolloverRelief|*|*&quot;)[0].HasValue) or(reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|FactorsAffectingFutureTaxCharge|CRRAndUnrecognisedDT|UnrecognisedDeferredTaxAsset|*')[0].HasValue) or (reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|FactorsAffectingFutureTaxCharge|CRRAndUnrecognisedDT|OtherUnrecognisedDeferredTax|*')[0].HasValue)" enabled="Conditional" section-name="FactorsThatMayAffectFutureTaxCharges" page-break-before="False" keep-with-next-strength="0" template-guid="4e667da4-aa5a-4aa1-b1e5-e381936ce3ca">
						<template><add-to-body>
  <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
    <data>
report.Sections.ActiveSection.Description
</data>
  </para>
</add-to-body></template>
						<report-template version="12" name="Conditional rollover relief" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FactorsAffectingFutureTaxCharge|CRRAndUnrecognisedDT|ConditionalRolloverRelief|*|*&quot;)[0].HasValue" enabled="Conditional" section-name="ConditionalRolloverRelief" page-break-before="False" keep-with-next-strength="0" template-guid="b095c137-7250-44da-b923-ed49aa00e98c">
							<template><add-to-body>
  <table>
    <var name="CRR" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|FactorsAffectingFutureTaxCharge|CRRAndUnrecognisedDT|ConditionalRolloverRelief|*')" />
    <table-row-iterator condition="CRR[0].HasValue" iterate-over="CRR" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
      <table-row>
        <table-cell>
          <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:ConditionalRolloverReliefGrouping">The gain on the sale of <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, '*|ConditionalRolloverRelief|ConditionalRolloverRelief|Asset|Current Period')[0].Value</data><ws /> will be eligible for rollover relief if <ws /><inline xbrl-concept="uk-gaap:ConditionsToObtainRolloverReliefOnGainOnSaleAssetWhichExpectedToBeRolledOverIntoReplacementAssets" xbrl-period="CurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|ConditionalRolloverRelief|ConditionalRolloverRelief|Conditions|Current Period')[0].Value</data></inline>
. The estimated tax that would become payable if the conditions are not met amounts to <ws /><inline xbrl-concept="uk-gaap:TaxThatWillBecomePayableIfConditionsAreNotMet" xbrl-period="CurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|ConditionalRolloverRelief|ConditionalRolloverRelief|Tax|Current Period')[0].Value</data></inline><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.PriorPeriod.EndDate.Value</data><ws /> - <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, '*|ConditionalRolloverRelief|ConditionalRolloverRelief|Tax|Prior Period')[0].Value</data>
)</inline>
.</para>
        </table-cell>
      </table-row>
    </table-row-iterator>
  </table>
</add-to-body></template>
						</report-template>
						<report-template version="12" name="Unrecognised deferred tax asset" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|FactorsAffectingFutureTaxCharge|CRRAndUnrecognisedDT|UnrecognisedDeferredTaxAsset|*')[0].HasValue" enabled="Conditional" section-name="UnrecognisedDeferredTaxAsset" page-break-before="False" keep-with-next-strength="0" template-guid="cc915e04-6dff-4db1-be2a-51fcd806e0f4">
							<template><add-to-body>
  <table>
    <var name="UDTA" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|FactorsAffectingFutureTaxCharge|CRRAndUnrecognisedDT|UnrecognisedDeferredTaxAsset|*')" />
    <table-row-iterator condition="UDTA[0].HasValue" iterate-over="UDTA" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
      <table-row>
        <table-cell>
          <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:UnrecognisedDeferredTaxAssetGrouping">
            <inline xbrl-concept="uk-gaap:DescriptionAssetCircumstancesInWhichAssetWouldBeRecoverable" xbrl-period="CurrentPeriod">
              <data>reporting.queries.client.lookupaccountingperioddata(item, '*|UnrecognisedDeferredTaxAsset|UnrecognisedDeferredTaxAsset|Description|Current Period')[0].Value</data>
            </inline>
. The amount not recognised in the period was <ws /><inline xbrl-concept="uk-gaap:AmountNotRecognised" xbrl-period="CurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|UnrecognisedDeferredTaxAsset|UnrecognisedDeferredTaxAsset|AmountNotRecognised|Current Period')[0].Value</data></inline><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.PriorPeriod.EndDate.Value</data><ws /> - <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, '*|UnrecognisedDeferredTaxAsset|UnrecognisedDeferredTaxAsset|AmountNotRecognised|Prior Period')[0].Value</data>)</inline>
.</para>
        </table-cell>
      </table-row>
    </table-row-iterator>
  </table>
</add-to-body></template>
						</report-template>
						<report-template version="12" name="Other unrecognised deferred tax" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|FactorsAffectingFutureTaxCharge|CRRAndUnrecognisedDT|OtherUnrecognisedDeferredTax|*')[0].HasValue" enabled="Conditional" section-name="OtherUnrecognisedDeferredTax" page-break-before="False" keep-with-next-strength="0" template-guid="996e1149-fdc4-4b3e-aecf-d3be2cf69102">
							<template><add-to-body>
  <table>
    <var name="DT" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|FactorsAffectingFutureTaxCharge|CRRAndUnrecognisedDT|OtherUnrecognisedDeferredTax|*')" />
    <table-row-iterator condition="DT[0].HasValue" iterate-over="DT" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
      <table-row>
        <table-cell>
          <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:UnrecognisedDeferredTaxGrouping">
            <inline xbrl-concept="uk-gaap:DescriptionAmountsNotRecognised" xbrl-period="CurrentPeriod">
              <data>reporting.queries.client.lookupaccountingperioddata(item, '*|OtherUnrecognisedDeferredTax|OtherUnrecognisedDeferredTax|Description|Current Period')[0].Value</data>
            </inline>
.<inline xbrl-concept="uk-gaap:DescriptionCircumstancesInWhichTaxWouldBePayableRecoverable" xbrl-period="CurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|OtherUnrecognisedDeferredTax|OtherUnrecognisedDeferredTax|Circumstances|Current Period')[0].Value</data></inline>
. The amount that may be payable/(recoverable) is <ws /><inline xbrl-concept="uk-gaap:AmountThatMayBePayableRecoverable" xbrl-period="CurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|OtherUnrecognisedDeferredTax|OtherUnrecognisedDeferredTax|Amount|Current Period')[0].Value</data></inline><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.PriorPeriod.EndDate.Value</data><ws /> - <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, '*|OtherUnrecognisedDeferredTax|OtherUnrecognisedDeferredTax|Amount|Prior Period')[0].Value</data>
)</inline>
.</para>
        </table-cell>
      </table-row>
    </table-row-iterator>
  </table>
</add-to-body></template>
						</report-template>
						<report-template version="12" name="Other factors" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FactorsAffectingFutureTaxCharge|OtherFactors|OtherFactors|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="OtherFactors" page-break-before="False" keep-with-next-strength="0" template-guid="ac75221a-ea2f-4379-a267-41fb8895e610">
							<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FactorsAffectingFutureTaxCharge|OtherFactors|OtherFactors|Current Period")[0].Value</data>
  </para>
</add-to-body></template>
						</report-template>
					</report-template>
				</report-template>
				<report-template version="12" name="Intangible fixed assets" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryRange('500-539').HasTransactions" enabled="Conditional" section-name="IntangibleFixedAssets" page-break-before="False" keep-with-next-strength="1" template-guid="72f85071-ec99-448b-bc05-29652691aecb">
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Intangible values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="IntangibleValues" page-break-before="False" keep-with-next-strength="0" template-guid="54e12055-d6ab-434e-a5ad-2ef56600a28a">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'IFA', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetChartFilter(new string[] { '505-509', '500-504' } )" />
    <var name="column2filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('Goodwill', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1, column2filter2 }, false, '&lt;para&gt;Goodwill&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:IntangibleFixedAssetClassesDimension=uk-gaap:NetGoodwill')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:IntangibleFixedAssetsHypercube')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetChartFilter(new string[] { '515-519', '510-514' } )" />
    <var name="column3filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('Patents', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1, column3filter2 }, false, '&lt;para&gt;Patents&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:IntangibleFixedAssetClassesDimension=uk-gaap:PatentsConcessionsLicencesTradeMarksSimilar')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:IntangibleFixedAssetsHypercube')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4filter1" pre="newComputation.GetChartFilter(new string[] { '525-529', '520-524' } )" />
    <var name="column4filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('DevelopmentCosts', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column4filter1, column4filter2 }, false, '&lt;para&gt;Development costs&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column4XBRLDimensionsSet" pre="column4.SetDimensions('uk-gaap:IntangibleFixedAssetClassesDimension=uk-gaap:DevelopmentCosts')" />
    <var name="column4XBRLHypercubeNameSet" pre="column4.SetHypercubeName('uk-gaap:IntangibleFixedAssetsHypercube')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <var name="column5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableCalculationColumn.Create('Total', 'Goodwill + DevelopmentCosts + Patents ', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', false, '&lt;para&gt;Total&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right')" />
    <var name="column5add" pre="smartTable.AddColumn(column5)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Cost', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Cost&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.EndDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.StartDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('500', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('510', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem2add" pre="section1subsection1.AddItem(section1subsection1subsectionitem2)" />
    <var name="section1subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('520', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem3add" pre="section1subsection1.AddItem(section1subsection1subsectionitem3)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:IntangibleFixedAssetsCostOrValuation')" />
    <var name="section1subsection1XBRLPeriodSet" pre="section1subsection1.SetPeriod('StartCurrentPeriod')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Additions&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('502', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('522', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem2add" pre="section1subsection2.AddItem(section1subsection2subsectionitem2)" />
    <var name="section1subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('512', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem3add" pre="section1subsection2.AddItem(section1subsection2subsectionitem3)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:IntangibleFixedAssetsAdditions')" />
    <var name="section1subsection2XBRLPeriodSet" pre="section1subsection2.SetPeriod('CurrentPeriod')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Disposals&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('504', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('514', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem2add" pre="section1subsection3.AddItem(section1subsection3subsectionitem2)" />
    <var name="section1subsection3subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('524', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem3add" pre="section1subsection3.AddItem(section1subsection3subsectionitem3)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:IntangibleFixedAssetsDisposals')" />
    <var name="section1subsection3XBRLPeriodSet" pre="section1subsection3.SetPeriod('CurrentPeriod')" />
    <var name="section1subsection3XBRLReverseSignSet" pre="section1subsection3.SetReverseSign(true)" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:IntangibleFixedAssetsCostOrValuation')" />
    <var name="section1XBRLPeriodSet" pre="section1.SetPeriod('EndCurrentPeriod')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Amortisation', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Amortisation&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.EndDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.StartDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('505', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('525', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem2add" pre="section2subsection1.AddItem(section2subsection1subsectionitem2)" />
    <var name="section2subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('515', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem3add" pre="section2subsection1.AddItem(section2subsection1subsectionitem3)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:IntangibleFixedAssetsAggregateAmortisationImpairment')" />
    <var name="section2subsection1XBRLPeriodSet" pre="section2subsection1.SetPeriod('StartCurrentPeriod')" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Charge for the &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('508', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('518', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem2add" pre="section2subsection2.AddItem(section2subsection2subsectionitem2)" />
    <var name="section2subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('528', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem3add" pre="section2subsection2.AddItem(section2subsection2subsectionitem3)" />
    <var name="section2subsection2XBRLConceptNameSet" pre="section2subsection2.SetConceptName('uk-gaap:IntangibleFixedAssetsAmortisationChargedInPeriod')" />
    <var name="section2subsection2XBRLPeriodSet" pre="section2subsection2.SetPeriod('CurrentPeriod')" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Eliminated on disposals&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('507', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem1add" pre="section2subsection3.AddItem(section2subsection3subsectionitem1)" />
    <var name="section2subsection3subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('517', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem2add" pre="section2subsection3.AddItem(section2subsection3subsectionitem2)" />
    <var name="section2subsection3subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('527', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem3add" pre="section2subsection3.AddItem(section2subsection3subsectionitem3)" />
    <var name="section2subsection3XBRLConceptNameSet" pre="section2subsection3.SetConceptName('uk-gaap:IntangibleFixedAssetsAmortisationDecreaseIncreaseOnDisposals')" />
    <var name="section2subsection3XBRLPeriodSet" pre="section2subsection3.SetPeriod('CurrentPeriod')" />
    <var name="section2subsection3XBRLReverseSignSet" pre="section2subsection3.SetReverseSign(true)" />
    <var name="section2subsection3add" pre="section2.AddItem(section2subsection3)" />
    <var name="section2subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Write&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;down/(back)&amp;quot;)&#xD;&#xA;&lt;/data&gt;&lt;ws/&gt; to recoverable amount&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('509', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection4subsectionitem1add" pre="section2subsection4.AddItem(section2subsection4subsectionitem1)" />
    <var name="section2subsection4subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('519', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection4subsectionitem2add" pre="section2subsection4.AddItem(section2subsection4subsectionitem2)" />
    <var name="section2subsection4subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('529', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection4subsectionitem3add" pre="section2subsection4.AddItem(section2subsection4subsectionitem3)" />
    <var name="section2subsection4XBRLConceptNameSet" pre="section2subsection4.SetConceptName('uk-gaap:IntangibleFixedAssetsAmortisationOtherIncreaseDecrease')" />
    <var name="section2subsection4XBRLPeriodSet" pre="section2subsection4.SetPeriod('CurrentPeriod')" />
    <var name="section2subsection4add" pre="section2.AddItem(section2subsection4)" />
    <var name="section2XBRLConceptNameSet" pre="section2.SetConceptName('uk-gaap:IntangibleFixedAssetsAggregateAmortisationImpairment')" />
    <var name="section2XBRLPeriodSet" pre="section2.SetPeriod('EndCurrentPeriod')" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('NBV', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Net book value&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <var name="section4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('NBVEndOfPeriod', '&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.EndDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.Always, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section4item1" pre="section4.AddTotalItem(section1)" />
    <var name="section4item2" pre="section4.AddTotalItem(section2)" />
    <var name="section4item3" pre="section4.AddTotalItem(section3)" />
    <var name="section4XBRLConceptNameSet" pre="section4.SetConceptName('uk-gaap:IntangibleFixedAssets')" />
    <var name="section4XBRLPeriodSet" pre="section4.SetPeriod('EndCurrentPeriod')" />
    <var name="section4add" pre="smartTable.AddTableBlock(section4)" />
    <var name="section5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('NBVPrior', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;At &lt;ws/&gt;&lt;inline condition=&quot;reportHelper.HasPriorPeriod&quot;&gt;&lt;data&gt;reportHelper.ComparativePeriod(1).EndDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section5subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Goodwill cost b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('500', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection1subsectionitem1add" pre="section5subsection1.AddItem(section5subsection1subsectionitem1)" />
    <var name="section5subsection1add" pre="section5.AddItem(section5subsection1)" />
    <var name="section5subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Patent cost b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('510', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection2subsectionitem1add" pre="section5subsection2.AddItem(section5subsection2subsectionitem1)" />
    <var name="section5subsection2add" pre="section5.AddItem(section5subsection2)" />
    <var name="section5subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Development cost b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('520', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection3subsectionitem1add" pre="section5subsection3.AddItem(section5subsection3subsectionitem1)" />
    <var name="section5subsection3add" pre="section5.AddItem(section5subsection3)" />
    <var name="section5subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Goodwill accumulated amortisation b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('505', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection4subsectionitem1add" pre="section5subsection4.AddItem(section5subsection4subsectionitem1)" />
    <var name="section5subsection4add" pre="section5.AddItem(section5subsection4)" />
    <var name="section5subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Patent accumulated depreciation b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('515', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection5subsectionitem1add" pre="section5subsection5.AddItem(section5subsection5subsectionitem1)" />
    <var name="section5subsection5add" pre="section5.AddItem(section5subsection5)" />
    <var name="section5subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Development cost depreciation b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('525', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection6subsectionitem1add" pre="section5subsection6.AddItem(section5subsection6subsectionitem1)" />
    <var name="section5subsection6add" pre="section5.AddItem(section5subsection6)" />
    <var name="section5XBRLConceptNameSet" pre="section5.SetConceptName('uk-gaap:IntangibleFixedAssets')" />
    <var name="section5XBRLPeriodSet" pre="section5.SetPeriod('EndPriorPeriod')" />
    <var name="section5add" pre="smartTable.AddTableBlock(section5)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
				</report-template>
				<report-template version="12" name="Tangible fixed assets" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryRange('540-619').HasTransactions" enabled="Conditional" section-name="TangibleFixedAssets" page-break-before="False" keep-with-next-strength="1" template-guid="a784c2d9-5188-4fff-a91d-fa7896a342cd">
					<template><page-layout orientation="landscape">
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</page-layout></template>
					<report-template version="12" name="Tangible values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="TangibleValues" page-break-before="False" keep-with-next-strength="0" template-guid="9819567f-c782-4c7d-8b18-6c15bbbb6d98">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'TFA', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetChartFilter(new string[] { '549.00', '548.00', '547.00', '545.00', '544.00', '542.00', '541.00', '540.00' } )" />
    <var name="column2filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('Freehold', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1, column2filter2 }, false, '&lt;para&gt;Freehold land and buildings&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:TangibleFixedAssetClassesDimension=uk-gaap:LandBuildings,uk-gaap:TangibleFixedAssetOwnershipDimension=uk-gaap:OwnedOrFreeholdTangibleFixedAssets')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:TangibleFixedAssetsHypercube')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetChartFilter(new string[] { '549.01', '548.01', '547.01', '545.01', '544.01', '542.01', '541.01', '540.01' } )" />
    <var name="column3filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('LongLeasehold', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1, column3filter2 }, false, '&lt;para&gt;Long leasehold land and buildlings&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:TangibleFixedAssetClassesDimension=uk-gaap:LandBuildings,uk-gaap:TangibleFixedAssetOwnershipDimension=uk-gaap:LongLeaseholdProperties')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:TangibleFixedAssetsHypercube')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4filter1" pre="newComputation.GetChartFilter(new string[] { '549.02', '548.02', '547.02', '545.02', '544.02', '542.02', '541.02', '540.02' } )" />
    <var name="column4filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('ShortLeasehold', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column4filter1, column4filter2 }, false, '&lt;para&gt;Short leasehold land and buildings&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column4XBRLDimensionsSet" pre="column4.SetDimensions('uk-gaap:TangibleFixedAssetClassesDimension=uk-gaap:LandBuildings,uk-gaap:TangibleFixedAssetOwnershipDimension=uk-gaap:ShortLeaseholdProperties')" />
    <var name="column4XBRLHypercubeNameSet" pre="column4.SetHypercubeName('uk-gaap:TangibleFixedAssetsHypercube')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <var name="column5filter1" pre="newComputation.GetChartFilter(new string[] { '555-559', '550-554' } )" />
    <var name="column5filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('InvestmentProperties', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column5filter1, column5filter2 }, false, '&lt;para&gt;Investment properties&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column5XBRLDimensionsSet" pre="column5.SetDimensions('uk-gaap:TangibleFixedAssetClassesDimension=uk-gaap:InvestmentProperties')" />
    <var name="column5XBRLHypercubeNameSet" pre="column5.SetHypercubeName('uk-gaap:TangibleFixedAssetsHypercube')" />
    <var name="column5add" pre="smartTable.AddColumn(column5)" />
    <var name="column6filter1" pre="newComputation.GetChartFilter(new string[] { '565-569', '560-564' } )" />
    <var name="column6filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('OtherTangibles1', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column6filter1, column6filter2 }, false, '&lt;para&gt;Other tangibles&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column6XBRLDimensionsSet" pre="column6.SetDimensions('uk-gaap:TangibleFixedAssetClassesDimension=uk-gaap:OtherTangibleFixedAssets')" />
    <var name="column6XBRLHypercubeNameSet" pre="column6.SetHypercubeName('uk-gaap:TangibleFixedAssetsHypercube')" />
    <var name="column6add" pre="smartTable.AddColumn(column6)" />
    <var name="column7filter1" pre="newComputation.GetChartFilter(new string[] { '575-579', '570-574' } )" />
    <var name="column7filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PlantAndMachinery', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column7filter1, column7filter2 }, false, '&lt;para&gt;Plant and machinery&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column7XBRLDimensionsSet" pre="column7.SetDimensions('uk-gaap:TangibleFixedAssetClassesDimension=uk-gaap:PlantMachinery')" />
    <var name="column7XBRLHypercubeNameSet" pre="column7.SetHypercubeName('uk-gaap:TangibleFixedAssetsHypercube')" />
    <var name="column7add" pre="smartTable.AddColumn(column7)" />
    <var name="column8filter1" pre="newComputation.GetChartFilter(new string[] { '585-589', '580-584' } )" />
    <var name="column8filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('FAndF', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column8filter1, column8filter2 }, false, '&lt;para&gt;Fixtures and fittings&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column8XBRLDimensionsSet" pre="column8.SetDimensions('uk-gaap:TangibleFixedAssetClassesDimension=uk-gaap:FixturesFittingsToolsEquipment')" />
    <var name="column8XBRLHypercubeNameSet" pre="column8.SetHypercubeName('uk-gaap:TangibleFixedAssetsHypercube')" />
    <var name="column8add" pre="smartTable.AddColumn(column8)" />
    <var name="column9filter1" pre="newComputation.GetChartFilter(new string[] { '595-599', '590-594' } )" />
    <var name="column9filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('MotorVehicles', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column9filter1, column9filter2 }, false, '&lt;para&gt;Motor vehicles&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column9XBRLDimensionsSet" pre="column9.SetDimensions('uk-gaap:TangibleFixedAssetClassesDimension=uk-gaap:MotorVehicles')" />
    <var name="column9XBRLHypercubeNameSet" pre="column9.SetHypercubeName('uk-gaap:TangibleFixedAssetsHypercube')" />
    <var name="column9add" pre="smartTable.AddColumn(column9)" />
    <var name="column10filter1" pre="newComputation.GetChartFilter(new string[] { '605-609', '600-604' } )" />
    <var name="column10filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('OfficeEquipment', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column10filter1, column10filter2 }, false, '&lt;para&gt;Office equipment&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column10XBRLDimensionsSet" pre="column10.SetDimensions('uk-gaap:TangibleFixedAssetClassesDimension=uk-gaap:OfficeEquipment')" />
    <var name="column10XBRLHypercubeNameSet" pre="column10.SetHypercubeName('uk-gaap:TangibleFixedAssetsHypercube')" />
    <var name="column10add" pre="smartTable.AddColumn(column10)" />
    <var name="column11filter1" pre="newComputation.GetChartFilter(new string[] { '615-619', '610-614' } )" />
    <var name="column11filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('OtherTangibles2', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column11filter1, column11filter2 }, false, '&lt;para&gt;Other tangibles&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column11XBRLDimensionsSet" pre="column11.SetDimensions('uk-gaap:TangibleFixedAssetClassesDimension=uk-gaap:ComputerEquipment')" />
    <var name="column11XBRLHypercubeNameSet" pre="column11.SetHypercubeName('uk-gaap:TangibleFixedAssetsHypercube')" />
    <var name="column11add" pre="smartTable.AddColumn(column11)" />
    <var name="column12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableCalculationColumn.Create('Total', 'Freehold +&#xD;&#xA;&#xD;LongLeasehold +&#xD;&#xA;&#xD;&#xA;ShortLeasehold +&#xD;&#xA;&#xD;InvestmentProperties +&#xD;&#xA;&#xD;&#xA;MotorVehicles +&#xD;&#xA;&#xD;OfficeEquipment +&#xD;&#xA;&#xD;OtherTangibles1 +&#xD;&#xA;&#xD;&#xA;OtherTangibles2 +&#xD;&#xA;&#xD;FAndF +&#xD;&#xA;&#xD;PlantAndMachinery&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', false, '&lt;para&gt;Total&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right')" />
    <var name="column12add" pre="smartTable.AddColumn(column12)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Cost', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Cost or valuation&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.EndDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.StartDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('540', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('550', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem2add" pre="section1subsection1.AddItem(section1subsection1subsectionitem2)" />
    <var name="section1subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('560', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem3add" pre="section1subsection1.AddItem(section1subsection1subsectionitem3)" />
    <var name="section1subsection1subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('570', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem4add" pre="section1subsection1.AddItem(section1subsection1subsectionitem4)" />
    <var name="section1subsection1subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('580', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem5add" pre="section1subsection1.AddItem(section1subsection1subsectionitem5)" />
    <var name="section1subsection1subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('590', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem6add" pre="section1subsection1.AddItem(section1subsection1subsectionitem6)" />
    <var name="section1subsection1subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('600', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem7add" pre="section1subsection1.AddItem(section1subsection1subsectionitem7)" />
    <var name="section1subsection1subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('610', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem8add" pre="section1subsection1.AddItem(section1subsection1subsectionitem8)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:TangibleFixedAssetsCostOrValuation')" />
    <var name="section1subsection1XBRLPeriodSet" pre="section1subsection1.SetPeriod('StartCurrentPeriod')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Revaluation&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('541', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('551', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem2add" pre="section1subsection2.AddItem(section1subsection2subsectionitem2)" />
    <var name="section1subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('561', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem3add" pre="section1subsection2.AddItem(section1subsection2subsectionitem3)" />
    <var name="section1subsection2subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('611', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem4add" pre="section1subsection2.AddItem(section1subsection2subsectionitem4)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:TangibleFixedAssetsIncreaseDecreaseFromRevaluations')" />
    <var name="section1subsection2XBRLPeriodSet" pre="section1subsection2.SetPeriod('CurrentPeriod')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Additions&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('542', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('552', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem2add" pre="section1subsection3.AddItem(section1subsection3subsectionitem2)" />
    <var name="section1subsection3subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('562', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem3add" pre="section1subsection3.AddItem(section1subsection3subsectionitem3)" />
    <var name="section1subsection3subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('572', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem4add" pre="section1subsection3.AddItem(section1subsection3subsectionitem4)" />
    <var name="section1subsection3subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('582', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem5add" pre="section1subsection3.AddItem(section1subsection3subsectionitem5)" />
    <var name="section1subsection3subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('592', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem6add" pre="section1subsection3.AddItem(section1subsection3subsectionitem6)" />
    <var name="section1subsection3subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('602', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem7add" pre="section1subsection3.AddItem(section1subsection3subsectionitem7)" />
    <var name="section1subsection3subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('612', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem8add" pre="section1subsection3.AddItem(section1subsection3subsectionitem8)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:TangibleFixedAssetsAdditions')" />
    <var name="section1subsection3XBRLPeriodSet" pre="section1subsection3.SetPeriod('CurrentPeriod')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Disposals&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('544', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('554', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem2add" pre="section1subsection4.AddItem(section1subsection4subsectionitem2)" />
    <var name="section1subsection4subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('564', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem3add" pre="section1subsection4.AddItem(section1subsection4subsectionitem3)" />
    <var name="section1subsection4subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('574', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem4add" pre="section1subsection4.AddItem(section1subsection4subsectionitem4)" />
    <var name="section1subsection4subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('584', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem5add" pre="section1subsection4.AddItem(section1subsection4subsectionitem5)" />
    <var name="section1subsection4subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('594', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem6add" pre="section1subsection4.AddItem(section1subsection4subsectionitem6)" />
    <var name="section1subsection4subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('604', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem7add" pre="section1subsection4.AddItem(section1subsection4subsectionitem7)" />
    <var name="section1subsection4subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('614', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem8add" pre="section1subsection4.AddItem(section1subsection4subsectionitem8)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:TangibleFixedAssetsDisposals')" />
    <var name="section1subsection4XBRLPeriodSet" pre="section1subsection4.SetPeriod('CurrentPeriod')" />
    <var name="section1subsection4XBRLReverseSignSet" pre="section1subsection4.SetReverseSign(true)" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:TangibleFixedAssetsCostOrValuation')" />
    <var name="section1XBRLPeriodSet" pre="section1.SetPeriod('EndCurrentPeriod')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Depreciation', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Depreciation&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.EndDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.StartDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('545', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('555', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem2add" pre="section2subsection1.AddItem(section2subsection1subsectionitem2)" />
    <var name="section2subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('565', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem3add" pre="section2subsection1.AddItem(section2subsection1subsectionitem3)" />
    <var name="section2subsection1subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('575', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem4add" pre="section2subsection1.AddItem(section2subsection1subsectionitem4)" />
    <var name="section2subsection1subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('585', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem5add" pre="section2subsection1.AddItem(section2subsection1subsectionitem5)" />
    <var name="section2subsection1subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('595', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem6add" pre="section2subsection1.AddItem(section2subsection1subsectionitem6)" />
    <var name="section2subsection1subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('605', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem7add" pre="section2subsection1.AddItem(section2subsection1subsectionitem7)" />
    <var name="section2subsection1subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('615', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem8add" pre="section2subsection1.AddItem(section2subsection1subsectionitem8)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:TangibleFixedAssetsDepreciation')" />
    <var name="section2subsection1XBRLPeriodSet" pre="section2subsection1.SetPeriod('StartCurrentPeriod')" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Charge for the &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('548', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('558', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem2add" pre="section2subsection2.AddItem(section2subsection2subsectionitem2)" />
    <var name="section2subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('568', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem3add" pre="section2subsection2.AddItem(section2subsection2subsectionitem3)" />
    <var name="section2subsection2subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('578', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem4add" pre="section2subsection2.AddItem(section2subsection2subsectionitem4)" />
    <var name="section2subsection2subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('588', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem5add" pre="section2subsection2.AddItem(section2subsection2subsectionitem5)" />
    <var name="section2subsection2subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('598', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem6add" pre="section2subsection2.AddItem(section2subsection2subsectionitem6)" />
    <var name="section2subsection2subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('608', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem7add" pre="section2subsection2.AddItem(section2subsection2subsectionitem7)" />
    <var name="section2subsection2subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('618', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem8add" pre="section2subsection2.AddItem(section2subsection2subsectionitem8)" />
    <var name="section2subsection2XBRLConceptNameSet" pre="section2subsection2.SetConceptName('uk-gaap:TangibleFixedAssetsDepreciationChargedInPeriod')" />
    <var name="section2subsection2XBRLPeriodSet" pre="section2subsection2.SetPeriod('CurrentPeriod')" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Eliminated on disposals&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('547', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem1add" pre="section2subsection3.AddItem(section2subsection3subsectionitem1)" />
    <var name="section2subsection3subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('557', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem2add" pre="section2subsection3.AddItem(section2subsection3subsectionitem2)" />
    <var name="section2subsection3subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('567', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem3add" pre="section2subsection3.AddItem(section2subsection3subsectionitem3)" />
    <var name="section2subsection3subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('577', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem4add" pre="section2subsection3.AddItem(section2subsection3subsectionitem4)" />
    <var name="section2subsection3subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('587', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem5add" pre="section2subsection3.AddItem(section2subsection3subsectionitem5)" />
    <var name="section2subsection3subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('597', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem6add" pre="section2subsection3.AddItem(section2subsection3subsectionitem6)" />
    <var name="section2subsection3subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('607', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem7add" pre="section2subsection3.AddItem(section2subsection3subsectionitem7)" />
    <var name="section2subsection3subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('617', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem8add" pre="section2subsection3.AddItem(section2subsection3subsectionitem8)" />
    <var name="section2subsection3XBRLConceptNameSet" pre="section2subsection3.SetConceptName('uk-gaap:TangibleFixedAssetsDepreciationDecreaseIncreaseOnDisposals')" />
    <var name="section2subsection3XBRLPeriodSet" pre="section2subsection3.SetPeriod('CurrentPeriod')" />
    <var name="section2subsection3XBRLReverseSignSet" pre="section2subsection3.SetReverseSign(true)" />
    <var name="section2subsection3add" pre="section2.AddItem(section2subsection3)" />
    <var name="section2subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Write&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;down/(back)&amp;apos;)&lt;/data&gt;&lt;ws/&gt;  to recoverable amount&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('549', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection4subsectionitem1add" pre="section2subsection4.AddItem(section2subsection4subsectionitem1)" />
    <var name="section2subsection4subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('559', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection4subsectionitem2add" pre="section2subsection4.AddItem(section2subsection4subsectionitem2)" />
    <var name="section2subsection4subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('569', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection4subsectionitem3add" pre="section2subsection4.AddItem(section2subsection4subsectionitem3)" />
    <var name="section2subsection4subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('619', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection4subsectionitem4add" pre="section2subsection4.AddItem(section2subsection4subsectionitem4)" />
    <var name="section2subsection4XBRLConceptNameSet" pre="section2subsection4.SetConceptName('uk-gaap:TangibleFixedAssetsDepreciationOtherIncreaseDecrease')" />
    <var name="section2subsection4XBRLPeriodSet" pre="section2subsection4.SetPeriod('CurrentPeriod')" />
    <var name="section2subsection4add" pre="section2.AddItem(section2subsection4)" />
    <var name="section2XBRLConceptNameSet" pre="section2.SetConceptName('uk-gaap:TangibleFixedAssetsDepreciation')" />
    <var name="section2XBRLPeriodSet" pre="section2.SetPeriod('EndCurrentPeriod')" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('NBVHeading', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Net book value&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <var name="section4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('NBVEnd', '&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.EndDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.Always, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section4item1" pre="section4.AddTotalItem(section1)" />
    <var name="section4item2" pre="section4.AddTotalItem(section2)" />
    <var name="section4item3" pre="section4.AddTotalItem(section3)" />
    <var name="section4XBRLConceptNameSet" pre="section4.SetConceptName('uk-gaap:TangibleFixedAssets')" />
    <var name="section4XBRLPeriodSet" pre="section4.SetPeriod('EndCurrentPeriod')" />
    <var name="section4add" pre="smartTable.AddTableBlock(section4)" />
    <var name="section5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('NBVPrior', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;At &lt;ws/&gt;&lt;inline condition=&quot;reportHelper.HasPriorPeriod&quot;&gt;&lt;data&gt;reportHelper.ComparativePeriod(1).EndDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section5subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Property accumulated depreciation b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('545', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection1subsectionitem1add" pre="section5subsection1.AddItem(section5subsection1subsectionitem1)" />
    <var name="section5subsection1add" pre="section5.AddItem(section5subsection1)" />
    <var name="section5subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other tangible 2 accumulated depreciation&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('615', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection2subsectionitem1add" pre="section5subsection2.AddItem(section5subsection2subsectionitem1)" />
    <var name="section5subsection2add" pre="section5.AddItem(section5subsection2)" />
    <var name="section5subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;P &amp;amp; M accumulated depreciation b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('575', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection3subsectionitem1add" pre="section5subsection3.AddItem(section5subsection3subsectionitem1)" />
    <var name="section5subsection3add" pre="section5.AddItem(section5subsection3)" />
    <var name="section5subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other tangible accumulated depreciation&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('565', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection4subsectionitem1add" pre="section5subsection4.AddItem(section5subsection4subsectionitem1)" />
    <var name="section5subsection4add" pre="section5.AddItem(section5subsection4)" />
    <var name="section5subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;F &amp;amp; F accumulated depreciation b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('585', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection5subsectionitem1add" pre="section5subsection5.AddItem(section5subsection5subsectionitem1)" />
    <var name="section5subsection5add" pre="section5.AddItem(section5subsection5)" />
    <var name="section5subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Property cost b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('540', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection6subsectionitem1add" pre="section5subsection6.AddItem(section5subsection6subsectionitem1)" />
    <var name="section5subsection6add" pre="section5.AddItem(section5subsection6)" />
    <var name="section5subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other tangible 2 cost b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('610', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection7subsectionitem1add" pre="section5subsection7.AddItem(section5subsection7subsectionitem1)" />
    <var name="section5subsection7add" pre="section5.AddItem(section5subsection7)" />
    <var name="section5subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Office equipment accumulated depreciation&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('605', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection8subsectionitem1add" pre="section5subsection8.AddItem(section5subsection8subsectionitem1)" />
    <var name="section5subsection8add" pre="section5.AddItem(section5subsection8)" />
    <var name="section5subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Investment property cost b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('550', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection9subsectionitem1add" pre="section5subsection9.AddItem(section5subsection9subsectionitem1)" />
    <var name="section5subsection9add" pre="section5.AddItem(section5subsection9)" />
    <var name="section5subsection10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Plant and machinery cost b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection10subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('570', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection10subsectionitem1add" pre="section5subsection10.AddItem(section5subsection10subsectionitem1)" />
    <var name="section5subsection10add" pre="section5.AddItem(section5subsection10)" />
    <var name="section5subsection11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Motor vehicles accumulated depreciation b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection11subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('595', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection11subsectionitem1add" pre="section5subsection11.AddItem(section5subsection11subsectionitem1)" />
    <var name="section5subsection11add" pre="section5.AddItem(section5subsection11)" />
    <var name="section5subsection12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other tangible cost b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection12subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('560', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection12subsectionitem1add" pre="section5subsection12.AddItem(section5subsection12subsectionitem1)" />
    <var name="section5subsection12add" pre="section5.AddItem(section5subsection12)" />
    <var name="section5subsection13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Fixtures and fittings cost b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection13subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('580', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection13subsectionitem1add" pre="section5subsection13.AddItem(section5subsection13subsectionitem1)" />
    <var name="section5subsection13add" pre="section5.AddItem(section5subsection13)" />
    <var name="section5subsection14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Office equipment cost b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection14subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('600', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection14subsectionitem1add" pre="section5subsection14.AddItem(section5subsection14subsectionitem1)" />
    <var name="section5subsection14add" pre="section5.AddItem(section5subsection14)" />
    <var name="section5subsection15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Investment property accumulated depreciation b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection15subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('555', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection15subsectionitem1add" pre="section5subsection15.AddItem(section5subsection15subsectionitem1)" />
    <var name="section5subsection15add" pre="section5.AddItem(section5subsection15)" />
    <var name="section5subsection16" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Motor vehicles cost b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection16subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('590', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection16subsectionitem1add" pre="section5subsection16.AddItem(section5subsection16subsectionitem1)" />
    <var name="section5subsection16add" pre="section5.AddItem(section5subsection16)" />
    <var name="section5XBRLConceptNameSet" pre="section5.SetConceptName('uk-gaap:TangibleFixedAssets')" />
    <var name="section5XBRLPeriodSet" pre="section5.SetPeriod('EndPriorPeriod')" />
    <var name="section5add" pre="smartTable.AddTableBlock(section5)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Tangible assets text" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="TangibleAssetsText" page-break-before="False" keep-with-next-strength="0" template-guid="a32866c7-c490-4a7a-9d89-ee1815feaea3">
						<template><page-layout orientation="portrait" /></template>
						<report-template version="12" name="Finance lease assets" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FixedAssets|LeasedAssets|NBV|Current Period&quot;)[0].HasValue or reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FixedAssets|LeasedAssets|NBV|Prior Period&quot;)[0].HasValue" enabled="Conditional" section-name="FinanceLeaseAssets" page-break-before="False" keep-with-next-strength="0" template-guid="ed013064-e5ab-49b2-832c-022bd40c0cce">
							<template><add-to-body>
  <para base-style="Title" para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
Finance lease assets
</para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Included within the net book value of tangible fixed asssets is <ws /><inline xbrl-concept="uk-gaap:LeasedAssetsIncludedInTangibleFixedAssets" xbrl-period="EndCurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FixedAssets|LeasedAssets|NBV|Current Period")[0].Value</data></inline><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.ComparativePeriod(1).EndDate.Value.Year</data><ws /> - <ws /><inline xbrl-concept="uk-gaap:LeasedAssetsIncludedInTangibleFixedAssets" xbrl-period="EndPriorPeriod"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FixedAssets|LeasedAssets|NBV|Prior Period")[0].Value</data></inline>
)</inline><ws /> in respect of assets held under finance lease agreements. Depreciation for the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> on these assets was <ws /><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FixedAssets|LeasedAssets|Depreciation|Current Period")[0].Value</data><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.ComparativePeriod(1).EndDate.Value.Year</data><ws /> - <ws /><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FixedAssets|LeasedAssets|Depreciation|Prior Period")[0].Value</data>
)</inline>
.</para>
</add-to-body></template>
						</report-template>
						<report-template version="12" name="FARevaluations" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="list[0].HasValue" enabled="Conditional" section-name="FARevaluations" page-break-before="False" keep-with-next-strength="0" template-guid="b59a4f9e-2d79-4369-a62b-e9e84512d258">
							<variables>
								<variable name="list">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FixedAssets|Revaluation|Revaluation|*")</variable>
							</variables>
							<template><add-to-body>
  <para base-style="Title" para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
	Revaluations
	</para>
  <section condition="list[0].HasValue = false" toggle-expand-on-click="true" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|FinancialStatements|FixedAssets')" base-style="Link To Data">
    <para>
		Revaluations
	</para>
  </section>
  <section condition="list[0].HasValue" toggle-expand-on-click="false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|FinancialStatements|FixedAssets')">
    <table>
      <table-row-iterator iterate-over="list" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
        <var name="AssetClass" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|Revaluation|Revaluation|XBRLAssetClass|Current Period')[0].Value" />
        <var name="XBRLAssetClass" pre="&#xD;&#xA;			if AssetClass = 'Land and Buildings' then 'uk-gaap:LandBuildings' else &#xD;&#xA;			if AssetClass = 'Land' then 'uk-gaap:Land' else&#xD;&#xA;			if AssetClass = 'Buildings' then 'uk-gaap:Buildings' else&#xD;&#xA;			if AssetClass = 'Investment Properties' then 'uk-gaap:InvestmentProperties' else&#xD;&#xA;			if AssetClass = 'Properties under construction' then 'uk-gaap:PropertiesUnderConstruction' else&#xD;&#xA;			if AssetClass = 'Vehicles, plant and machinery' then 'uk-gaap:VehiclesPlantMachinery' else&#xD;&#xA;			if AssetClass = 'Plant and machinery' then 'uk-gaap:PlantMachinery' else&#xD;&#xA;			if AssetClass = 'Vehicles' then 'uk-gaap:Vehicles' else&#xD;&#xA;			if AssetClass = 'Aircraft' then 'uk-gaap:Aircraft' else&#xD;&#xA;			if AssetClass = 'Boats' then 'uk-gaap:Boats' else&#xD;&#xA;			if AssetClass = 'MotorVehicles' then 'uk-gaap:MotorVehicles' else&#xD;&#xA;			if AssetClass = 'Commercial motor vehicles' then 'uk-gaap:CommercialMotorVehicles' else&#xD;&#xA;			if AssetClass = 'Motor cars' then 'uk-gaap:MotorCars' else&#xD;&#xA;			if AssetClass = 'Other vehicles' then 'uk-gaap:OtherVehicles' else&#xD;&#xA;			if AssetClass = 'Fixtures, fittings, tools and equipment' then 'uk-gaap:FixturesFittingsToolsEquipment' else&#xD;&#xA;			if AssetClass = 'Fixtures and fittings' then 'uk-gaap:FixturesFittings' else&#xD;&#xA;			if AssetClass = 'Tools and equipment' then 'uk-gaap:ToolsEquipment' else&#xD;&#xA;			if AssetClass = 'Officer equipment' then 'uk-gaap:OfficeEquipment' else&#xD;&#xA;			if AssetClass = 'Computer equipment' then 'uk-gaap:ComputerEquipment' else &#xD;&#xA;			if AssetClass = 'Payments on account and assets under development' then 'uk-gaap:PaymentsOnAccountAssetsUnderDevelopment' else&#xD;&#xA;			if AssetClass = 'Payments on account' then 'uk-gaap:PaymentsOnAccount' else&#xD;&#xA;			if AssetClass = 'Improvements or development of assets' then 'uk-gaap:ImprovementsOrDevelopmentAssets' else&#xD;&#xA;			if AssetClass = 'Tangible exploration or evaluation assets' then 'uk-gaap:TangibleExplorationOrEvaluationAssets' else&#xD;&#xA;			if AssetClass = 'Other tangible fixed assets' then 'uk-gaap:OtherTangibleFixedAssets' else&#xD;&#xA;			'uk-gaap:AllTangibleFixedAssetsDefault'" />
        <table-row xbrl-concept="uk-gaap:RevaluationTangibleFixedAssetsGrouping" xbrl-hypercube="uk-gaap:TangibleFixedAssetsHypercube" xbrl-dimensions="uk-gaap:TangibleFixedAssetClassesDimension=XBRLAssetClass">
          <table-cell>
            <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, '*|Revaluation|Revaluation|Description|Current Period')[0].Value</data><ws /> class of fixed assets was revalued on <ws /><inline xbrl-concept="uk-gaap:DateValuationTangibleFixedAssets" xbrl-period="EndCurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|Revaluation|Revaluation|Date|Current Period')[0].Value</data></inline><ws /> by <ws /><inline xbrl-concept="uk-gaap:NameQualificationsValuerOrValuersOrganisation" xbrl-period="CurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|Revaluation|Revaluation|Details|Current Period')[0].Value</data></inline><ws /> who is <ws /><inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|Revaluation|Revaluation|External|Current Period')[0].Value = false">internal</inline><inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|Revaluation|Revaluation|External|Current Period')[0].Value = true"><inline xbrl-concept="uk-gaap:ValuerExternalToEntity" xbrl-period="CurrentPeriod">external</inline></inline><ws /> to the company. The basis of this valuation was <ws /><inline xbrl-concept="uk-gaap:BasisValuationTangibleFixedAssets" xbrl-period="CurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|Revaluation|Revaluation|Basis|Current Period')[0].Value</data></inline>
. This class of assets has a current value of <ws /><inline xbrl-concept="uk-gaap:ValuationTangibleFixedAssets" xbrl-period="EndCurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|Revaluation|Revaluation|Valuation|Current Period')[0].Value</data></inline><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.comparativePeriod(1).EndDate.Value.Year</data><ws /> - <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, '*|Revaluation|Revaluation|Valuation|Prior Period')[0].Value</data>
)</inline><inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|Revaluation|Revaluation|HistoricalCost|Current Period')[0].HasValue or reporting.queries.client.lookupaccountingperioddata(item, '*|Revaluation|Revaluation|HistoricalCost|Prior Period')[0].HasValue"><ws /> and a carrying amoung at historical cost of <ws /><inline xbrl-concept="uk-gaap:CostTangibleFixedAssetsOnHistoricalCostBasis" xbrl-period="EndCurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|Revaluation|Revaluation|HistoricalCost|Current Period')[0].Value</data></inline><ws /><inline condition="reportHelper.HasPriorPeriod">(<data>reportHelper.comparativePeriod(1).EndDate.Value.Year</data><ws /> - <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, '*|Revaluation|Revaluation|HistoricalCost|Prior Period')[0].Value</data>
)</inline>
. The depreciation on this historical cost is <ws /><inline xbrl-concept="uk-gaap:AggregateDepreciationOnTangibleFixedAssetsOnHistoricalCostBasis" xbrl-period="EndCurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|Revaluation|Revaluation|HistoricalDepreciation|Current Period')[0].Value</data></inline><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.comparativePeriod(1).EndDate.Value.Year</data><ws /> - <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, '*|Revaluation|Revaluation|HistoricalDepreciation|Prior Period')[0].Value</data>
)</inline></inline>
.<inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|Revaluation|Revaluation|ValuationNotUpdated|Current Period')[0].HasValue"><br /><br /><inline xbrl-concept="uk-gaap:ExplanatoryStatementsIfValuationsHaveNotBeenUpdated" xbrl-period="CurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|Revaluation|Revaluation|ValuationNotUpdated|Current Period')[0].Value</data></inline>
.</inline><inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|Revaluation|Revaluation|DateFullValuation|Current Period')[0].HasValue"><br /><br />The last full valuation of <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, '*|Revaluation|Revaluation|Description|Current Period')[0].Value</data><ws /> was carried out on <ws /><inline xbrl-concept="uk-gaap:DateLastFullValuationIfValuationsHaveNotBeenUpdated" xbrl-period="EndCurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|Revaluation|Revaluation|DateFullValuation|Current Period')[0].Value</data></inline>
.</inline></para>
          </table-cell>
        </table-row>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
						</report-template>
					</report-template>
				</report-template>
				<report-template version="12" name="Investments held as fixed assets" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="UKSubsidiaries[0].HasValue or UKJointVentures[0].HasValue or UKSignificantHoldings[0].HasValue or reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryRange(620,669).HasTransactions" enabled="Conditional" section-name="InvestmentsHeldAsFixedAssets" page-break-before="False" keep-with-next-strength="0" template-guid="c9f33b0c-de38-4c54-945a-7692e5585c56">
					<variables>
						<variable name="UKSubsidiaries">reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Investments|UKSubsidiaries|UKSubsidiaries|*')</variable>
						<variable name="UKJointVentures">reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Investments|UKJointVentures|UKJointVentures|*')</variable>
						<variable name="UKAssociates">reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Investments|UKAssociates|UKAssociates|*')</variable>
						<variable name="UKSignificantHoldings">reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Investments|UKSignificantHoldings|UKSignificantHoldings|*')</variable>
					</variables>
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Fixed asset investments summary" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryRange(620,669).HasTransactions" enabled="Conditional" section-name="EmptyElement1" page-break-before="False" keep-with-next-strength="0" template-guid="b06b9246-fed1-4a51-ba9c-8324713e84b2">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'FAInvestmentsSummary', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('FAInvestmentsSummary', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Shares in group undertakings and participating interests&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('630-634', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('635-639', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem2add" pre="section1subsection1.AddItem(section1subsection1subsectionitem2)" />
    <var name="section1subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('640-644', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem3add" pre="section1subsection1.AddItem(section1subsection1subsectionitem3)" />
    <var name="section1subsection1subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('645-649', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem4add" pre="section1subsection1.AddItem(section1subsection1subsectionitem4)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:InvestmentsFixedAssets')" />
    <var name="section1subsection1XBRLDimensionsSet" pre="section1subsection1.SetDimensions('uk-gaap:FixedAssetInvestmentHoldingsDimension=uk-gaap:GroupUndertakingsOtherParticipatingInterests,uk-gaap:FixedAssetInvestmentTypesDimension=uk-gaap:SharesFixedAssetInvestments')" />
    <var name="section1subsection1XBRLHypercubeNameSet" pre="section1subsection1.SetHypercubeName('uk-gaap:FixedAssetInvestmentsHypercube')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Loans to group undertakings and participating interests&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('620-624', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('625-629', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem2add" pre="section1subsection2.AddItem(section1subsection2subsectionitem2)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:InvestmentsFixedAssets')" />
    <var name="section1subsection2XBRLDimensionsSet" pre="section1subsection2.SetDimensions('uk-gaap:FixedAssetInvestmentHoldingsDimension=uk-gaap:GroupUndertakingsOtherParticipatingInterests,uk-gaap:FixedAssetInvestmentTypesDimension=uk-gaap:LoansHeldAsFixedAssetInvestments')" />
    <var name="section1subsection2XBRLHypercubeNameSet" pre="section1subsection2.SetHypercubeName('uk-gaap:FixedAssetInvestmentsHypercube')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other investments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('655-659', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('660-664', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem2add" pre="section1subsection3.AddItem(section1subsection3subsectionitem2)" />
    <var name="section1subsection3subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('650-654', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem3add" pre="section1subsection3.AddItem(section1subsection3subsectionitem3)" />
    <var name="section1subsection3subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('665-669', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem4add" pre="section1subsection3.AddItem(section1subsection3subsectionitem4)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:InvestmentsFixedAssets')" />
    <var name="section1subsection3XBRLDimensionsSet" pre="section1subsection3.SetDimensions('uk-gaap:FixedAssetInvestmentHoldingsDimension=uk-gaap:TotalOtherInvestments,uk-gaap:FixedAssetInvestmentTypesDimension=uk-gaap:SharesFixedAssetInvestments')" />
    <var name="section1subsection3XBRLHypercubeNameSet" pre="section1subsection3.SetHypercubeName('uk-gaap:FixedAssetInvestmentsHypercube')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:InvestmentsFixedAssets')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Shares in group undertakings and participating interests" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange('630-634').HasTransactions or reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange('635-639').HasTransactions or reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange('640-644').HasTransactions or reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange('645-649').HasTransactions" enabled="Conditional" section-name="Folder" page-break-before="False" keep-with-next-strength="0" template-guid="584819ff-fe29-4dd2-aeaf-2ac06283e0d6">
						<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
						<report-template version="12" name="Shares in group undertakings and participating interests val" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FAInvestmentsValues" page-break-before="False" keep-with-next-strength="0" template-guid="870ea999-07ad-4b79-aae8-769164c259bc">
							<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'FAInvestments', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetChartFilter(new string[] { '635-639', '630-634' } )" />
    <var name="column2filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('Subsidiaryundertakings', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1, column2filter2 }, false, '&lt;para&gt;Subsidiary undertakings&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:FixedAssetInvestmentHoldingsDimension=uk-gaap:InvestmentInSubsidiaries,uk-gaap:FixedAssetInvestmentTypesDimension=uk-gaap:SharesFixedAssetInvestments')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:FixedAssetInvestmentsHypercube')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetChartFilter(new string[] { '645-649', '640-644' } )" />
    <var name="column3filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('JVsAndAssociates', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1, column3filter2 }, false, '&lt;para&gt;Joints ventures and associates&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:FixedAssetInvestmentHoldingsDimension=uk-gaap:ShareJoint-venturesAssociates,uk-gaap:FixedAssetInvestmentTypesDimension=uk-gaap:SharesFixedAssetInvestments')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:FixedAssetInvestmentsHypercube')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableCalculationColumn.Create('Total', 'Subsidiaryundertakings +&#xD;&#xD;JVsAndAssociates ', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', false, '&lt;para&gt;Total&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Cost', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Cost&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.EndDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.StartDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('660', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('650', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem2add" pre="section1subsection1.AddItem(section1subsection1subsectionitem2)" />
    <var name="section1subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('630', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem3add" pre="section1subsection1.AddItem(section1subsection1subsectionitem3)" />
    <var name="section1subsection1subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('640', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem4add" pre="section1subsection1.AddItem(section1subsection1subsectionitem4)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:FixedAssetInvestmentsCostOrValuation')" />
    <var name="section1subsection1XBRLPeriodSet" pre="section1subsection1.SetPeriod('StartCurrentPeriod')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Revaluation&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('651', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('661', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem2add" pre="section1subsection2.AddItem(section1subsection2subsectionitem2)" />
    <var name="section1subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('631', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem3add" pre="section1subsection2.AddItem(section1subsection2subsectionitem3)" />
    <var name="section1subsection2subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('641', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem4add" pre="section1subsection2.AddItem(section1subsection2subsectionitem4)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:FixedAssetInvestmentsIncreaseDecreaseFromRevaluations')" />
    <var name="section1subsection2XBRLPeriodSet" pre="section1subsection2.SetPeriod('CurrentPeriod')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Additions&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('662', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('652', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem2add" pre="section1subsection3.AddItem(section1subsection3subsectionitem2)" />
    <var name="section1subsection3subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('632', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem3add" pre="section1subsection3.AddItem(section1subsection3subsectionitem3)" />
    <var name="section1subsection3subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('642', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem4add" pre="section1subsection3.AddItem(section1subsection3subsectionitem4)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:FixedAssetInvestmentsAdditions')" />
    <var name="section1subsection3XBRLPeriodSet" pre="section1subsection3.SetPeriod('CurrentPeriod')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Disposals&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('654', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('664', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem2add" pre="section1subsection4.AddItem(section1subsection4subsectionitem2)" />
    <var name="section1subsection4subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('634', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem3add" pre="section1subsection4.AddItem(section1subsection4subsectionitem3)" />
    <var name="section1subsection4subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('644', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem4add" pre="section1subsection4.AddItem(section1subsection4subsectionitem4)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:FixedAssetInvestmentsDisposals')" />
    <var name="section1subsection4XBRLPeriodSet" pre="section1subsection4.SetPeriod('CurrentPeriod')" />
    <var name="section1subsection4XBRLReverseSignSet" pre="section1subsection4.SetReverseSign(true)" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:FixedAssetInvestmentsCostOrValuation')" />
    <var name="section1XBRLPeriodSet" pre="section1.SetPeriod('EndCurrentPeriod')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ProvisionForImpairment', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Provision for impairment&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.EndDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.StartDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('655', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('665', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem2add" pre="section2subsection1.AddItem(section2subsection1subsectionitem2)" />
    <var name="section2subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('645', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem3add" pre="section2subsection1.AddItem(section2subsection1subsectionitem3)" />
    <var name="section2subsection1subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('635', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem4add" pre="section2subsection1.AddItem(section2subsection1subsectionitem4)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:FixedAssetInvestmentsProvisions')" />
    <var name="section2subsection1XBRLPeriodSet" pre="section2subsection1.SetPeriod('StartCurrentPeriod')" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Charge for the &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('658', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('668', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem2add" pre="section2subsection2.AddItem(section2subsection2subsectionitem2)" />
    <var name="section2subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('648', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem3add" pre="section2subsection2.AddItem(section2subsection2subsectionitem3)" />
    <var name="section2subsection2subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('638', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem4add" pre="section2subsection2.AddItem(section2subsection2subsectionitem4)" />
    <var name="section2subsection2XBRLConceptNameSet" pre="section2subsection2.SetConceptName('uk-gaap:FixedAssetInvestmentsProvisionsProvidedInPeriod')" />
    <var name="section2subsection2XBRLPeriodSet" pre="section2subsection2.SetPeriod('CurrentPeriod')" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Eliminated on disposal&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('657', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem1add" pre="section2subsection3.AddItem(section2subsection3subsectionitem1)" />
    <var name="section2subsection3subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('667', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem2add" pre="section2subsection3.AddItem(section2subsection3subsectionitem2)" />
    <var name="section2subsection3subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('647', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem3add" pre="section2subsection3.AddItem(section2subsection3subsectionitem3)" />
    <var name="section2subsection3subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('637', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem4add" pre="section2subsection3.AddItem(section2subsection3subsectionitem4)" />
    <var name="section2subsection3XBRLConceptNameSet" pre="section2subsection3.SetConceptName('uk-gaap:FixedAssetInvestmentsProvisionsDisposals')" />
    <var name="section2subsection3XBRLPeriodSet" pre="section2subsection3.SetPeriod('CurrentPeriod')" />
    <var name="section2subsection3XBRLReverseSignSet" pre="section2subsection3.SetReverseSign(true)" />
    <var name="section2subsection3add" pre="section2.AddItem(section2subsection3)" />
    <var name="section2XBRLConceptNameSet" pre="section2.SetConceptName('uk-gaap:FixedAssetInvestmentsProvisions')" />
    <var name="section2XBRLPeriodSet" pre="section2.SetPeriod('EndCurrentPeriod')" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('NBVHeading', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Net book value&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <var name="section4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('NBVCurrentPeriod', '&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.EndDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.Always, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section4item1" pre="section4.AddTotalItem(section1)" />
    <var name="section4item2" pre="section4.AddTotalItem(section2)" />
    <var name="section4item3" pre="section4.AddTotalItem(section3)" />
    <var name="section4XBRLConceptNameSet" pre="section4.SetConceptName('uk-gaap:InvestmentsFixedAssets')" />
    <var name="section4XBRLPeriodSet" pre="section4.SetPeriod('EndCurrentPeriod')" />
    <var name="section4add" pre="smartTable.AddTableBlock(section4)" />
    <var name="section5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('NBVPriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;At &lt;ws/&gt;&lt;inline condition=&quot;reportHelper.HasPriorPeriod&quot;&gt;&lt;data&gt;reportHelper.ComparativePeriod(1).EndDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section5subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;FA investment - unlisted other shares bfwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('660', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection1subsectionitem1add" pre="section5subsection1.AddItem(section5subsection1subsectionitem1)" />
    <var name="section5subsection1add" pre="section5.AddItem(section5subsection1)" />
    <var name="section5subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;FA inv - listed other shs provision bfwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('655', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection2subsectionitem1add" pre="section5subsection2.AddItem(section5subsection2subsectionitem1)" />
    <var name="section5subsection2add" pre="section5.AddItem(section5subsection2)" />
    <var name="section5subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;FA inv - unlisted other shs provision bfwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('665', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection3subsectionitem1add" pre="section5subsection3.AddItem(section5subsection3subsectionitem1)" />
    <var name="section5subsection3add" pre="section5.AddItem(section5subsection3)" />
    <var name="section5subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;FA investment - listed other shares bfwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('650', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection4subsectionitem1add" pre="section5subsection4.AddItem(section5subsection4subsectionitem1)" />
    <var name="section5subsection4add" pre="section5.AddItem(section5subsection4)" />
    <var name="section5XBRLConceptNameSet" pre="section5.SetConceptName('uk-gaap:InvestmentsFixedAssets')" />
    <var name="section5XBRLPeriodSet" pre="section5.SetPeriod('EndPriorPeriod')" />
    <var name="section5add" pre="smartTable.AddTableBlock(section5)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
						</report-template>
					</report-template>
					<report-template version="12" name="Loans to group undertakings and participating interests" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange('620-624').HasTransactions or reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange('625-629').HasTransactions" enabled="Conditional" section-name="LoansToGroupUndertakingsAndParticipatingInterest" page-break-before="False" keep-with-next-strength="0" template-guid="233192de-bc25-4a58-8f46-6aca1680db64">
						<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
						<report-template version="12" name="Loans held as fixed asset investments values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="Loans held as fixed asset investments" page-break-before="False" keep-with-next-strength="0" template-guid="001ea0bb-4a11-403a-b893-3046d0a7b517">
							<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'FAInvestments', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetChartFilter(new string[] { '620-624' } )" />
    <var name="column2filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('Subsidiaryundertakings', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1, column2filter2 }, false, '&lt;para&gt;Subsidiary undertakings&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:FixedAssetInvestmentHoldingsDimension=uk-gaap:InvestmentInSubsidiaries')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:FixedAssetInvestmentLoansHypercube')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetChartFilter(new string[] { '625-629' } )" />
    <var name="column3filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('JVsAndAssociates', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1, column3filter2 }, false, '&lt;para&gt;Joints ventures and associates&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:FixedAssetInvestmentHoldingsDimension=uk-gaap:InvestmentsInJoint-ventures')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:FixedAssetInvestmentLoansHypercube')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableCalculationColumn.Create('Total', 'Subsidiaryundertakings +&#xD;JVsAndAssociates&#xA;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', false, '&lt;para&gt;Total&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Cost', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.EndDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.StartDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('620', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('625', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem2add" pre="section1subsection1.AddItem(section1subsection1subsectionitem2)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:LoansFixedAssetInvestmentsCost')" />
    <var name="section1subsection1XBRLPeriodSet" pre="section1subsection1.SetPeriod('StartCurrentPeriod')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Repaid&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('622', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('627', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem2add" pre="section1subsection2.AddItem(section1subsection2subsectionitem2)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:LoansFixedAssetInvestmentsRepayments')" />
    <var name="section1subsection2XBRLPeriodSet" pre="section1subsection2.SetPeriod('CurrentPeriod')" />
    <var name="section1subsection2XBRLReverseSignSet" pre="section1subsection2.SetReverseSign(true)" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Additions&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('621', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('626', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem2add" pre="section1subsection3.AddItem(section1subsection3subsectionitem2)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:LoansFixedAssetInvestmentsAdditions')" />
    <var name="section1subsection3XBRLPeriodSet" pre="section1subsection3.SetPeriod('CurrentPeriod')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Written off&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('623', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('628', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem2add" pre="section1subsection4.AddItem(section1subsection4subsectionitem2)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:LoansFixedAssetInvestmentsWrittenOff')" />
    <var name="section1subsection4XBRLPeriodSet" pre="section1subsection4.SetPeriod('CurrentPeriod')" />
    <var name="section1subsection4XBRLReverseSignSet" pre="section1subsection4.SetReverseSign(true)" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:LoansFixedAssetInvestmentsCost')" />
    <var name="section1XBRLPeriodSet" pre="section1.SetPeriod('EndCurrentPeriod')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
						</report-template>
					</report-template>
					<report-template version="12" name="Other investments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange('650-654').HasTransactions or reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange('655-659').HasTransactions or reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange('660-664').HasTransactions or reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange('665-669').HasTransactions" enabled="Conditional" section-name="Folder1" page-break-before="False" keep-with-next-strength="0" template-guid="52efed80-ad2c-4f22-9c06-a456eae3f0d9">
						<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
						<report-template version="12" name="Other investments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Conditional" section-name="Other investments" page-break-before="False" keep-with-next-strength="0" template-guid="5eed511b-9506-4953-bcdf-3246934e619c">
							<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'FAInvestments', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetChartFilter(new string[] { '655-659', '650-654' } )" />
    <var name="column2filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('ListedInvestments', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1, column2filter2 }, false, '&lt;para&gt;Listed investments&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:FixedAssetInvestmentHoldingsDimension=uk-gaap:TotalOtherInvestments,uk-gaap:FixedAssetInvestmentTypesDimension=uk-gaap:SharesListedFixedAssetInvestments')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:FixedAssetInvestmentsHypercube')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetChartFilter(new string[] { '665-669', '660-664' } )" />
    <var name="column3filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('UnlistedInvestments', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1, column3filter2 }, false, '&lt;para&gt;Unlisted investments&#xD;&#xA;&lt;br/&gt;£&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:FixedAssetInvestmentHoldingsDimension=uk-gaap:TotalOtherInvestments,uk-gaap:FixedAssetInvestmentTypesDimension=uk-gaap:SharesUnlistedFixedAssetInvestments')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:FixedAssetInvestmentsHypercube')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableCalculationColumn.Create('Total', 'ListedInvestments +&#xD;&#xA;UnlistedInvestments&#xD;&#xA;&#xD;&#xA;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', false, '&lt;para&gt;Total&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Cost', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Cost&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.EndDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.StartDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('660', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('650', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem2add" pre="section1subsection1.AddItem(section1subsection1subsectionitem2)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:FixedAssetInvestmentsCostOrValuation')" />
    <var name="section1subsection1XBRLPeriodSet" pre="section1subsection1.SetPeriod('StartCurrentPeriod')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Revaluation&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('651', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('661', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem2add" pre="section1subsection2.AddItem(section1subsection2subsectionitem2)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:FixedAssetInvestmentsIncreaseDecreaseFromRevaluations')" />
    <var name="section1subsection2XBRLPeriodSet" pre="section1subsection2.SetPeriod('CurrentPeriod')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Additions&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('662', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('652', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem2add" pre="section1subsection3.AddItem(section1subsection3subsectionitem2)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:FixedAssetInvestmentsAdditions')" />
    <var name="section1subsection3XBRLPeriodSet" pre="section1subsection3.SetPeriod('CurrentPeriod')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Disposals&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('654', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('664', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem2add" pre="section1subsection4.AddItem(section1subsection4subsectionitem2)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:FixedAssetInvestmentsDisposals')" />
    <var name="section1subsection4XBRLPeriodSet" pre="section1subsection4.SetPeriod('CurrentPeriod')" />
    <var name="section1subsection4XBRLReverseSignSet" pre="section1subsection4.SetReverseSign(true)" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:FixedAssetInvestmentsCostOrValuation')" />
    <var name="section1XBRLPeriodSet" pre="section1.SetPeriod('EndCurrentPeriod')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ProvisionForImpairment', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Provision for impairment&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.EndDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.StartDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('655', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('665', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem2add" pre="section2subsection1.AddItem(section2subsection1subsectionitem2)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:FixedAssetInvestmentsProvisions')" />
    <var name="section2subsection1XBRLPeriodSet" pre="section2subsection1.SetPeriod('StartCurrentPeriod')" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Charge for the &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('658', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('668', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem2add" pre="section2subsection2.AddItem(section2subsection2subsectionitem2)" />
    <var name="section2subsection2XBRLConceptNameSet" pre="section2subsection2.SetConceptName('uk-gaap:FixedAssetInvestmentsProvisionsProvidedInPeriod')" />
    <var name="section2subsection2XBRLPeriodSet" pre="section2subsection2.SetPeriod('CurrentPeriod')" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Eliminated on disposal&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('657', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem1add" pre="section2subsection3.AddItem(section2subsection3subsectionitem1)" />
    <var name="section2subsection3subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('667', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem2add" pre="section2subsection3.AddItem(section2subsection3subsectionitem2)" />
    <var name="section2subsection3XBRLConceptNameSet" pre="section2subsection3.SetConceptName('uk-gaap:FixedAssetInvestmentsProvisionsDisposals')" />
    <var name="section2subsection3XBRLPeriodSet" pre="section2subsection3.SetPeriod('CurrentPeriod')" />
    <var name="section2subsection3XBRLReverseSignSet" pre="section2subsection3.SetReverseSign(true)" />
    <var name="section2subsection3add" pre="section2.AddItem(section2subsection3)" />
    <var name="section2XBRLConceptNameSet" pre="section2.SetConceptName('uk-gaap:FixedAssetInvestmentsProvisions')" />
    <var name="section2XBRLPeriodSet" pre="section2.SetPeriod('EndCurrentPeriod')" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('NBVHeading', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Net book value&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <var name="section4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('NBVCurrentPeriod', '&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.EndDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.Always, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section4item1" pre="section4.AddTotalItem(section1)" />
    <var name="section4item2" pre="section4.AddTotalItem(section2)" />
    <var name="section4item3" pre="section4.AddTotalItem(section3)" />
    <var name="section4XBRLConceptNameSet" pre="section4.SetConceptName('uk-gaap:InvestmentsFixedAssets')" />
    <var name="section4XBRLPeriodSet" pre="section4.SetPeriod('EndCurrentPeriod')" />
    <var name="section4add" pre="smartTable.AddTableBlock(section4)" />
    <var name="section5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('NBVPriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;At &lt;ws/&gt;&lt;inline condition=&quot;reportHelper.HasPriorPeriod&quot;&gt;&lt;data&gt;reportHelper.ComparativePeriod(1).EndDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section5subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;FA investment - unlisted other shares bfwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('660', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection1subsectionitem1add" pre="section5subsection1.AddItem(section5subsection1subsectionitem1)" />
    <var name="section5subsection1add" pre="section5.AddItem(section5subsection1)" />
    <var name="section5subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;FA inv - listed other shs provision bfwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('655', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection2subsectionitem1add" pre="section5subsection2.AddItem(section5subsection2subsectionitem1)" />
    <var name="section5subsection2add" pre="section5.AddItem(section5subsection2)" />
    <var name="section5subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;FA inv - unlisted other shs provision bfwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('665', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection3subsectionitem1add" pre="section5subsection3.AddItem(section5subsection3subsectionitem1)" />
    <var name="section5subsection3add" pre="section5.AddItem(section5subsection3)" />
    <var name="section5subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;FA investment - listed other shares bfwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('650', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection4subsectionitem1add" pre="section5subsection4.AddItem(section5subsection4subsectionitem1)" />
    <var name="section5subsection4add" pre="section5.AddItem(section5subsection4)" />
    <var name="section5XBRLConceptNameSet" pre="section5.SetConceptName('uk-gaap:InvestmentsFixedAssets')" />
    <var name="section5XBRLPeriodSet" pre="section5.SetPeriod('EndPriorPeriod')" />
    <var name="section5add" pre="smartTable.AddTableBlock(section5)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
						</report-template>
						<report-template version="12" name="Market value of listed fixed asset investments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Investments|MarketValue|FixedAsset|Current Period')[0].HasValue or reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Investments|MarketValue|FixedAsset|Prior Period')[0].HasValue or reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange(660,664).HasTransactions and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange(665,669).HasTransactions" enabled="Conditional" section-name="MarketValueOfListedFAInvestements" page-break-before="False" keep-with-next-strength="0" template-guid="b76deac4-9714-44db-9804-45837a861892">
							<template><add-to-body>
  <section condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Investments|MarketValue|FixedAsset|Current Period')[0].HasValue = false and reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Investments|MarketValue|FixedAsset|Prior Period')[0].HasValue = false" toggle-expand-on-click="true" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|FinancialStatements|Investments')">
    <para outer-top-border-clearance="5mm" base-style="Link To Data">Click here to enter market value of listed investments</para>
  </section>
  <section condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Investments|MarketValue|FixedAsset|Current Period')[0].HasValue or reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Investments|MarketValue|FixedAsset|Prior Period')[0].HasValue" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|FinancialStatements|Investments')">
    <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The market value of the listed investments at <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data><ws /> was <ws /><inline xbrl-concept="uk-gaap:ListedInvestmentsIncludedInFixedAssetInvestmentsAggregateMarketValue" xbrl-period="EndCurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|Investments|MarketValue|FixedAsset|Current Period")[0].Value</data></inline><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.ComparativePeriod(1).EndDate.Value.Year</data><ws /> - <ws /><inline xbrl-concept="uk-gaap:ListedInvestmentsIncludedInFixedAssetInvestmentsAggregateMarketValue" xbrl-period="EndPriorPeriod"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|Investments|MarketValue|FixedAsset|Prior Period")[0].Value</data></inline>
)</inline>
.</para>
  </section>
</add-to-body></template>
						</report-template>
					</report-template>
					<report-template version="12" name="Details of undertakings" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="UKSubsidiaries[0].HasValue or UKJointVentures[0].HasValue or UKSignificantHoldings[0].HasValue" enabled="Conditional" section-name="DetailsOfUndertakings" page-break-before="False" keep-with-next-strength="0" template-guid="e75a7bc1-5fbe-4120-adb2-ab7bd76c6268">
						<template><page-layout orientation="portrait">
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</page-layout></template>
						<report-template version="12" name="Details of undertakings list" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="DetailsOfUndertakingsList" page-break-before="False" keep-with-next-strength="0" template-guid="86127812-5d35-4bda-9b21-ac679005ced8">
							<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Details of the investments in which the company holds 20% or more of the nominal value of any class of share capital are as follows:</para>
  <section condition="(UKSubsidiaries[0].HasValue or UKJointVentures[0].HasValue or UKAssociates[0].HasValue or UKSignificantHoldings[0].HasValue)=false" toggle-expand-on-click="true" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|FinancialStatements|Investments')">
    <para base-style="Link To Data">Click here to enter details of undertakings</para>
  </section>
  <section condition="UKSubsidiaries[0].HasValue or UKJointVentures[0].HasValue or UKAssociates[0].HasValue or UKSignificantHoldings[0].HasValue" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|FinancialStatements|Investments')">
    <table>
      <table-row>
        <table-cell base-style="Table Column Heading" align="bottom-left">
          <para para-alignment="Left" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Undertaking</para>
        </table-cell>
        <table-cell base-style="Table Column Heading" align="bottom-left">
          <para para-alignment="Left" outer-left-border-clearance="2mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Holding</para>
        </table-cell>
        <table-cell base-style="Table Column Heading" align="bottom-left">
          <para para-alignment="left" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Proportion of voting rights and shares held</para>
        </table-cell>
        <table-cell base-style="Table Column Heading" align="bottom-left">
          <para para-alignment="Left" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Principal activity</para>
        </table-cell>
      </table-row>
    </table>
    <table condition="UKSubsidiaries[0].HasValue">
      <table-row>
        <table-cell number-columns-spanned="4">
          <para para-alignment="Left" outer-top-border-clearance="5mm" base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Subsidiary undertakings</para>
        </table-cell>
      </table-row>
      <table-row-iterator iterate-over="UKSubsidiaries" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
        <table-row xbrl-hypercube="uk-gaap:SubsidiariesHypercube" xbrl-dimensions="uk-gaap:SubsidiariesDimension='uk-gaap:Subsidiary'+(item.index+1)">
          <table-cell align="top-left">
            <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
              <inline xbrl-concept="uk-gaap:NameSubsidiary" xbrl-period="CurrentPeriod">
                <data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKSubsidiaries|UKSubsidiaries|Name|Current Period")[0].Value</data>
              </inline>
              <inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|UKSubsidiaries|UKSubsidiaries|Address|Current Period')[0].HasValue">
                <br />
                <data>reporting.queries.client.lookupaccountingperioddata(item, '*|UKSubsidiaries|UKSubsidiaries|Address|Current Period')[0].Value</data>
              </inline>
            </para>
          </table-cell>
          <table-cell align="top-left">
            <para para-alignment="Full" outer-left-border-clearance="2mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
              <data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKSubsidiaries|UKSubsidiaries|Holding|Current Period")[0].Value</data>
            </para>
          </table-cell>
          <table-cell align="top-left">
            <para para-alignment="Full" base-style="Percentage" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:PercentageSubsidiaryHeld" xbrl-period="EndCurrentPeriod">
              <data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKSubsidiaries|UKSubsidiaries|Percentage|Current Period")[0].Value</data>
            </para>
          </table-cell>
          <table-cell align="top-left">
            <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:PrincipalActivitySubsidiary" xbrl-period="CurrentPeriod">
              <data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKSubsidiaries|UKSubsidiaries|PrincipalActivity|Current Period")[0].Value</data>
            </para>
          </table-cell>
        </table-row>
      </table-row-iterator>
    </table>
    <table condition="UKJointVentures[0].HasValue">
      <table-row>
        <table-cell number-columns-spanned="4">
          <para para-alignment="Left" outer-top-border-clearance="5mm" base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Joint ventures</para>
        </table-cell>
      </table-row>
      <table-row-iterator iterate-over="UKJointVentures" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
        <table-row xbrl-hypercube="uk-gaap:Joint-venturesHypercube" xbrl-dimensions="uk-gaap:Joint-venturesDimension='uk-gaap:Joint-venture'+(item.index+1)">
          <table-cell align="top-left">
            <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
              <inline xbrl-concept="uk-gaap:NameJoint-venture" xbrl-period="CurrentPeriod">
                <data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKJointVenture|UKJointVenture|Name|Current Period")[0].Value</data>
              </inline>
              <inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|UKJointVenture|UKJointVenture|Address|Current Period')[0].HasValue">
                <br />
                <data>reporting.queries.client.lookupaccountingperioddata(item, '*|UKJointVenture|UKJointVenture|Address|Current Period')[0].Value</data>
              </inline>
            </para>
          </table-cell>
          <table-cell align="top-left">
            <para para-alignment="Full" outer-left-border-clearance="2mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
              <data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKJointVenture|UKJointVenture|Holding|Current Period")[0].Value</data>
            </para>
          </table-cell>
          <table-cell align="top-left">
            <para para-alignment="Full" base-style="Percentage" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:PercentageJoint-ventureHeld" xbrl-period="EndCurrentPeriod">
              <data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKJointVenture|UKJointVenture|Percentage|Current Period")[0].Value</data>
            </para>
          </table-cell>
          <table-cell align="top-left">
            <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:PrincipalActivityJoint-venture" xbrl-period="CurrentPeriod">
              <data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKJointVenture|UKJointVenture|PrincipalActivity|Current Period")[0].Value</data>
            </para>
          </table-cell>
        </table-row>
      </table-row-iterator>
    </table>
    <table condition="UKAssociates[0].HasValue">
      <table-row>
        <table-cell number-columns-spanned="4">
          <para para-alignment="Left" outer-top-border-clearance="5mm" base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Associates</para>
        </table-cell>
      </table-row>
      <table-row-iterator iterate-over="UKAssociates" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
        <table-row xbrl-hypercube="uk-gaap:AssociatesHypercube" xbrl-dimensions="uk-gaap:AssociatesDimension='uk-gaap:Associate'+(item.index+1)">
          <table-cell align="top-left">
            <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
              <inline xbrl-concept="uk-gaap:NameAssociate" xbrl-period="CurrentPeriod">
                <data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKAssociates|UKAssociates|Name|Current Period")[0].Value</data>
              </inline>
              <inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|UKAssociates|UKAssociates|Address|Current Period')[0].HasValue">
                <br />
                <data>reporting.queries.client.lookupaccountingperioddata(item, '*|UKAssociates|UKAssociates|Address|Current Period')[0].Value</data>
              </inline>
            </para>
          </table-cell>
          <table-cell align="top-left">
            <para para-alignment="Full" outer-left-border-clearance="2mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
              <data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKAssociates|UKAssociates|Holding|Current Period")[0].Value</data>
            </para>
          </table-cell>
          <table-cell align="top-left">
            <para para-alignment="Full" base-style="Percentage" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:PercentageAssociateHeld" xbrl-period="EndCurrentPeriod">
              <data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKAssociates|UKAssociates|Percentage|Current Period")[0].Value</data>
            </para>
          </table-cell>
          <table-cell align="top-left">
            <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:PrincipalActivityAssociate" xbrl-period="CurrentPeriod">
              <data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKAssociates|UKAssociates|PrincipalActivity|Current Period")[0].Value</data>
            </para>
          </table-cell>
        </table-row>
      </table-row-iterator>
    </table>
    <table condition="UKSignificantHoldings[0].HasValue">
      <table-row>
        <table-cell number-columns-spanned="4">
          <para para-alignment="Left" outer-top-border-clearance="5mm" base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Significant holdings</para>
        </table-cell>
      </table-row>
      <table-row-iterator iterate-over="UKSignificantHoldings" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
        <table-row xbrl-hypercube="uk-gaap:OtherParticipatingInterestsInvestmentsHypercube" xbrl-dimensions="uk-gaap:OtherParticipatingInterestsOrInvestmentsDimension='uk-gaap:OtherParticipatingInterest'+(item.index+1)">
          <table-cell align="top-left">
            <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
              <inline xbrl-concept="uk-gaap:NameOtherParticipatingInterestOrInvestment" xbrl-period="CurrentPeriod">
                <data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKSignificantHoldings|UKSignificantHoldings|Name|Current Period")[0].Value</data>
              </inline>
              <inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|UKSignificantHoldings|UKSignificantHoldings|Address|Current Period')[0].HasValue">
                <br />
                <data>reporting.queries.client.lookupaccountingperioddata(item, '*|UKSignificantHoldings|UKSignificantHoldings|Address|Current Period')[0].Value</data>
              </inline>
            </para>
          </table-cell>
          <table-cell align="top-left">
            <para para-alignment="Full" outer-left-border-clearance="2mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
              <data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKSignificantHoldings|UKSignificantHoldings|Holding|Current Period")[0].Value</data>
            </para>
          </table-cell>
          <table-cell align="top-left">
            <para para-alignment="Full" base-style="Percentage" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:PercentageParticipatingInterestOrInvestmentHeld" xbrl-period="EndCurrentPeriod">
              <data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKSignificantHoldings|UKSignificantHoldings|Percentage|Current Period")[0].Value</data>
            </para>
          </table-cell>
          <table-cell align="top-left">
            <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:PrincipalActivityOtherParticipatingInterestOrInvestment" xbrl-period="CurrentPeriod">
              <data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKSignificantHoldings|UKSignificantHoldings|PrincipalActivity|Current Period")[0].Value</data>
            </para>
          </table-cell>
        </table-row>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
						</report-template>
						<report-template version="12" name="Undertaking period end, results and capital" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="UKSubsidiariesWithPeriodProfitOrCapital[0].HasValue or UKJVsWithPeriodProfitOrCapital[0].HasValue or UKAssociatesWithPeriodProfitOrCapital[0].HasValue or UKSignificantHoldingsWithPeriodProfitOrCapital[0].HasValue" enabled="Conditional" section-name="UndertakingPeriodEndResultsAndCapital" page-break-before="False" keep-with-next-strength="0" template-guid="16c81966-c346-485c-b08c-37b4b899d91b">
							<variables>
								<variable name="UKSubsidiariesWithPeriodProfitOrCapital">reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Investments|UKSubsidiaries|UKSubsidiaries|*:filter[*|UKSubsidiaries|PeriodEnd|Current Period!=null,*|UKSubsidiaries|ProfitLoss|Current Period!=null,*|UKSubsidiaries|CapitalReserves!=null]')</variable>
								<variable name="UKJVsWithPeriodProfitOrCapital">reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Investments|UKJointVentures|UKJointVentures|*:filter[*|UKJointVenture|PeriodEnd|Current Period!=null,*|UKJointVenture|ProfitLoss|Current Period!=null,*|UKJointVenture|CapitalReserves!=null,*|UKJointVenture|JointManagement|Current Period!=null]')</variable>
								<variable name="UKAssociatesWithPeriodProfitOrCapital">reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Investments|UKAssociates|UKAssociates|*:filter[*|UKAssociates|PeriodEnd|Current Period!=null,*|UKAssociates|ProfitLoss|Current Period!=null,*|UKAssociates|CapitalReserves|Current Period!=null]')</variable>
								<variable name="UKSignificantHoldingsWithPeriodProfitOrCapital">reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Investments|UKSignificantHoldings|UKSignificantHoldings|*:filter[*|UKSignificantHoldings|PeriodEnd|Current Period!=null,*|UKSignificantHoldings|ProfitLoss|Current Period!=null,*|UKSignificantHoldings|CapitalReserves|Current Period!=null]')</variable>
							</variables>
							<template><add-to-body>
  <section condition="(UKSubsidiariesWithPeriodProfitOrCapital[0].HasValue or UKJVsWithPeriodProfitOrCapital[0].HasValue or UKAssociatesWithPeriodProfitOrCapital[0].HasValue or UKSignificantHoldingsWithPeriodProfitOrCapital[0].HasValue)=false" toggle-expand-on-click="true" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|FinancialStatements|Investments')">
    <para base-style="Link To Data">Click here to enter details of undertakings</para>
  </section>
  <section condition="UKSubsidiariesWithPeriodProfitOrCapital[0].HasValue or UKJVsWithPeriodProfitOrCapital[0].HasValue or UKAssociatesWithPeriodProfitOrCapital[0].HasValue or UKSignificantHoldingsWithPeriodProfitOrCapital[0].HasValue" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|FinancialStatements|Investments')">
    <section condition="UKSubsidiariesWithPeriodProfitOrCapital[0].HasValue">
      <iterator iterate-over="UKSubsidiariesWithPeriodProfitOrCapital" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
        <para date-format="d MMMM" para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-hypercube="uk-gaap:SubsidiariesHypercube" xbrl-dimensions="uk-gaap:SubsidiariesDimension='uk-gaap:Subsidiary'+(item.index+1)">
          <inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|UKSubsidiaries|UKSubsidiaries|PeriodEnd|Current Period')[0].HasValue">The financial period end of <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKSubsidiaries|UKSubsidiaries|Name|Current Period")[0].Value</data><ws /> is <ws /><inline xbrl-concept="uk-gaap:AccountingPeriodSubsidiary" xbrl-period="CurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKSubsidiaries|UKSubsidiaries|PeriodEnd|Current Period")[0].Value</data></inline>
. <ws /></inline>
          <inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|UKSubsidiaries|UKSubsidiaries|ProfitLoss|Current Period')[0].HasValue&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(item, '*|UKSubsidiaries|UKSubsidiaries|CapitalReserves|Current Period')[0].HasValue">The <ws /><inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|UKSubsidiaries|UKSubsidiaries|ProfitLoss|Current Period')[0].Value &lt;= 0&#xD;&#xD;&#xA;">profit</inline><inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|UKSubsidiaries|UKSubsidiaries|ProfitLoss|Current Period')[0].Value &gt; 0">loss</inline><ws /> for the financial period of <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKSubsidiaries|UKSubsidiaries|Name|Current Period")[0].Value</data><ws /> was <ws /><data>-reporting.queries.client.lookupaccountingperioddata(item, '*|UKSubsidiaries|UKSubsidiaries|ProfitLoss|Current Period')[0].Value</data><ws /> and the aggregate amount of capital and reserves at the end of the period was <ws /><data>-reporting.queries.client.lookupaccountingperioddata(item, '*|UKSubsidiaries|UKSubsidiaries|CapitalReserves|Current Period')[0].Value</data>
.</inline>
        </para>
      </iterator>
    </section>
    <section condition="UKJVsWithPeriodProfitOrCapital[0].HasValue">
      <iterator iterate-over="UKJVsWithPeriodProfitOrCapital" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
        <para date-format="d MMMM" para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-hypercube="uk-gaap:Joint-venturesHypercube" xbrl-dimensions="uk-gaap:Joint-venturesDimension='uk-gaap:Joint-venture'+(item.index+1)">
          <inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|UKJointVenture|UKJointVenture|PeriodEnd|Current Period')[0].HasValue">The financial period end of <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKJointVenture|UKJointVenture|Name|Current Period")[0].Value</data><ws /> is <ws /><inline xbrl-concept="uk-gaap:AccountingPeriodJoint-venture" xbrl-period="CurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKJointVenture|UKJointVenture|PeriodEnd|Current Period")[0].Value</data></inline>
. <ws /></inline>
          <inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|UKJointVenture|UKJointVenture|ProfitLoss|Current Period')[0].HasValue&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(item, '*|UKJointVenture|UKJointVenture|CapitalReserves|Current Period')[0].HasValue">
            <ws /> The <ws /><inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|UKJointVenture|UKJointVenture|ProfitLoss|Current Period')[0].Value &lt;= 0&#xD;&#xD;&#xA;">profit</inline><inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|UKJointVenture|UKJointVenture|ProfitLoss|Current Period')[0].Value &gt; 0">loss</inline><ws /> for the financial period of <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKJointVenture|UKJointVenture|Name|Current Period")[0].Value</data><ws /> was <ws /><data>-reporting.queries.client.lookupaccountingperioddata(item, '*|UKJointVenture|UKJointVenture|ProfitLoss|Current Period')[0].Value</data><ws /> and the aggregate amount of capital and reserves at the end of the period was <ws /><data>-reporting.queries.client.lookupaccountingperioddata(item, '*|UKJointVenture|UKJointVenture|CapitalReserves|Current Period')[0].Value</data>
. <ws /></inline>
          <inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|UKJointVenture|UKJointVenture|JointManagement|Current Period')[0].HasValue">
            <inline xbrl-concept="uk-gaap:DescriptionHowJoint-ventureJointlyManaged" xbrl-period="CurrentPeriod" xbrl-invert-sign="True">
              <data>reporting.queries.client.lookupaccountingperioddata(item, '*|UKJointVenture|UKJointVenture|JointManagement|Current Period')[0].Value</data>
            </inline>
.</inline>
        </para>
      </iterator>
    </section>
    <section condition="UKAssociatesWithPeriodProfitOrCapital[0].HasValue">
      <iterator iterate-over="UKAssociatesWithPeriodProfitOrCapital" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
        <para date-format="d MMMM" para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-hypercube="uk-gaap:AssociatesHypercube" xbrl-dimensions="uk-gaap:AssociatesDimension='uk-gaap:Associate'+(item.index+1)">
          <inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|UKAssociates|UKAssociates|PeriodEnd|Current Period')[0].HasValue">The financial period end of <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKAssociates|UKAssociates|Name|Current Period")[0].Value</data><ws /> is <ws /><inline xbrl-concept="uk-gaap:AccountingPeriodAssociate" xbrl-period="CurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKAssociates|UKAssociates|PeriodEnd|Current Period")[0].Value</data></inline>
. <ws /></inline>
          <inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|UKAssociates|UKAssociates|ProfitLoss|Current Period')[0].HasValue&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(item, '*|UKAssociates|UKAssociates|CapitalReserves|Current Period')[0].HasValue">The <ws /><inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|UKAssociates|UKAssociates|ProfitLoss|Current Period')[0].Value &lt;= 0&#xD;&#xD;&#xA;">profit</inline><inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|UKAssociates|UKAssociates|ProfitLoss|Current Period')[0].Value &gt; 0">loss</inline><ws /> for the financial period of <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKAssociates|UKAssociates|Name|Current Period")[0].Value</data><ws /> was <ws /><data>-reporting.queries.client.lookupaccountingperioddata(item, '*|UKAssociates|UKAssociates|ProfitLoss|Current Period')[0].Value</data><ws /> and the aggregate amount of capital and reserves at the end of the period was <ws /><data>-reporting.queries.client.lookupaccountingperioddata(item, '*|UKAssociates|UKAssociates|CapitalReserves|Current Period')[0].Value</data>
.</inline>
        </para>
      </iterator>
    </section>
    <section condition="UKSignificantHoldingsWithPeriodProfitOrCapital[0].HasValue">
      <iterator iterate-over="UKSignificantHoldingsWithPeriodProfitOrCapital" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
        <para date-format="d MMMM" para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-hypercube="uk-gaap:OtherParticipatingInterestsInvestmentsHypercube" xbrl-dimensions="uk-gaap:OtherParticipatingInterestsOrInvestmentsDimension='uk-gaap:OtherParticipatingInterest'+(item.index+1)">
          <inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|UKSignificantHoldings|UKSignificantHoldings|PeriodEnd|Current Period')[0].HasValue">The financial period end of <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKSignificantHoldings|UKSignificantHoldings|Name|Current Period")[0].Value</data><ws /> is <ws /><inline xbrl-concept="uk-gaap:AccountingPeriodOtherParticipatingInterestOrInvestment" xbrl-period="CurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKSignificantHoldings|UKSignificantHoldings|PeriodEnd|Current Period")[0].Value</data></inline>
. <ws /></inline>
          <inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|UKSignificantHoldings|UKSignificantHoldings|ProfitLoss|Current Period')[0].HasValue&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(item, '*|UKSignificantHoldings|UKSignificantHoldings|CapitalReserves|Current Period')[0].HasValue">The <ws /><inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|UKSignificantHoldings|UKSignificantHoldings|ProfitLoss|Current Period')[0].Value &lt;= 0&#xD;&#xD;&#xA;">profit</inline><inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|UKSignificantHoldings|UKSignificantHoldings|ProfitLoss|Current Period')[0].Value &gt; 0">loss</inline><ws /> for the financial period of <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, "*|UKSignificantHoldings|UKSignificantHoldings|Name|Current Period")[0].Value</data><ws /> was <ws /><data>-reporting.queries.client.lookupaccountingperioddata(item, '*|UKSignificantHoldings|UKSignificantHoldings|ProfitLoss|Current Period')[0].Value</data><ws /> and the aggregate amount of capital and reserves at the end of the period was <ws /><data>-reporting.queries.client.lookupaccountingperioddata(item, '*|UKSignificantHoldings|UKSignificantHoldings|CapitalReserves|Current Period')[0].Value</data>
.</inline>
        </para>
      </iterator>
    </section>
  </section>
</add-to-body></template>
						</report-template>
					</report-template>
				</report-template>
				<report-template version="12" name="Stocks" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="reportHelper.Computation(reportHelper.PrimaryStatementRounding, reportHelper.PrimaryStatementScaling).GetPrimaryRange('670-679').HasTransactions" enabled="Conditional" section-name="Stocks" page-break-before="False" keep-with-next-strength="1" template-guid="7212399b-3198-4494-9807-68aa6fffb262">
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Stocks small" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="CompanySize = &quot;Small&quot;" enabled="Conditional" section-name="StocksValuesSmall" page-break-before="False" keep-with-next-strength="0" template-guid="12bb6bb1-7e53-4066-8345-f83f0a940afa">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'StocksSmall', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Stocks', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt; &lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Stocks&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('670-677', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:StocksRawMaterialsConsumables')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Work in progress&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('678-678', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:WorkInProgress')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Payments on account&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('679-679', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:StocksPaymentsOnAccount')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:StocksInventory')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Stocks medium/large" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="CompanySize != &quot;Small&quot;" enabled="Conditional" section-name="StocksValuesMedium/Large" page-break-before="False" keep-with-next-strength="0" template-guid="9c7a0fe1-d7ed-4997-8b4d-63132dd699fb">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'StocksMediumLarge', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Stocks', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt; &lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Stocks&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('670', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Raw materials&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('671', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:StocksRawMaterialsConsumables')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Work in progress&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('672', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('678-678', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem2add" pre="section1subsection3.AddItem(section1subsection3subsectionitem2)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:WorkInProgress')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Finished goods&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('673', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:FinishedGoodsGoodsForResale')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Consignment stock&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('675', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:ConsignmentStockHeld')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Payments on account&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('679-679', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:StocksPaymentsOnAccount')" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Stock provision&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('674', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:StocksInventory')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
				</report-template>
				<report-template version="12" name="Debtors" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryRange('680-699').HasTransactions" enabled="Conditional" section-name="Debtors" page-break-before="False" keep-with-next-strength="0" template-guid="2bb51b36-3a53-445c-b103-691685e6d659">
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Debtors FRSSE" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="FRSSE = true" enabled="Conditional" section-name="DebtorsValuesFRSSE" page-break-before="False" keep-with-next-strength="1" template-guid="f23bb1db-1ce3-4428-80e4-1475561d9b4e">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'DebtorsFRSSE', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('DebtorsFRSSE', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Trade debtors&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('680-684', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('700-702', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem2add" pre="section1subsection1.AddItem(section1subsection1subsectionitem2)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:TradeDebtors')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amounts owed by group undertakings and undertakings in which the company has a participating interest&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('689-689', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('705-705', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection2subsectionitem2add" pre="section1subsection2.AddItem(section1subsection2subsectionitem2)" />
    <var name="section1subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('687-688', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection2subsectionitem3add" pre="section1subsection2.AddItem(section1subsection2subsectionitem3)" />
    <var name="section1subsection2subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('703-704', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection2subsectionitem4add" pre="section1subsection2.AddItem(section1subsection2subsectionitem4)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:AmountsOwedByGroupUndertakingsOtherParticipatingInterests')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amounts recoverable on long term contracts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('690-690', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:AmountsRecoverableOnContracts')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other debtors&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('691', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('692', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection4subsectionitem2add" pre="section1subsection4.AddItem(section1subsection4subsectionitem2)" />
    <var name="section1subsection4subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('693', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem3add" pre="section1subsection4.AddItem(section1subsection4subsectionitem3)" />
    <var name="section1subsection4subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('694', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem4add" pre="section1subsection4.AddItem(section1subsection4subsectionitem4)" />
    <var name="section1subsection4subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('695', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem5add" pre="section1subsection4.AddItem(section1subsection4subsectionitem5)" />
    <var name="section1subsection4subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('706', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem6add" pre="section1subsection4.AddItem(section1subsection4subsectionitem6)" />
    <var name="section1subsection4subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('707', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection4subsectionitem7add" pre="section1subsection4.AddItem(section1subsection4subsectionitem7)" />
    <var name="section1subsection4subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('708', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem8add" pre="section1subsection4.AddItem(section1subsection4subsectionitem8)" />
    <var name="section1subsection4subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('709', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem9add" pre="section1subsection4.AddItem(section1subsection4subsectionitem9)" />
    <var name="section1subsection4subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('810-811', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection4subsectionitem10add" pre="section1subsection4.AddItem(section1subsection4subsectionitem10)" />
    <var name="section1subsection4subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('816-819', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection4subsectionitem11add" pre="section1subsection4.AddItem(section1subsection4subsectionitem11)" />
    <var name="section1subsection4subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('830', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection4subsectionitem12add" pre="section1subsection4.AddItem(section1subsection4subsectionitem12)" />
    <var name="section1subsection4subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('831', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection4subsectionitem13add" pre="section1subsection4.AddItem(section1subsection4subsectionitem13)" />
    <var name="section1subsection4subsectionitem14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('832', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection4subsectionitem14add" pre="section1subsection4.AddItem(section1subsection4subsectionitem14)" />
    <var name="section1subsection4subsectionitem15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('833', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection4subsectionitem15add" pre="section1subsection4.AddItem(section1subsection4subsectionitem15)" />
    <var name="section1subsection4subsectionitem16" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('834', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection4subsectionitem16add" pre="section1subsection4.AddItem(section1subsection4subsectionitem16)" />
    <var name="section1subsection4subsectionitem17" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('835', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection4subsectionitem17add" pre="section1subsection4.AddItem(section1subsection4subsectionitem17)" />
    <var name="section1subsection4subsectionitem18" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('836', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection4subsectionitem18add" pre="section1subsection4.AddItem(section1subsection4subsectionitem18)" />
    <var name="section1subsection4subsectionitem19" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('837', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection4subsectionitem19add" pre="section1subsection4.AddItem(section1subsection4subsectionitem19)" />
    <var name="section1subsection4subsectionitem20" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('838', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection4subsectionitem20add" pre="section1subsection4.AddItem(section1subsection4subsectionitem20)" />
    <var name="section1subsection4subsectionitem21" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('839', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection4subsectionitem21add" pre="section1subsection4.AddItem(section1subsection4subsectionitem21)" />
    <var name="section1subsection4subsectionitem22" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('888', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection4subsectionitem22add" pre="section1subsection4.AddItem(section1subsection4subsectionitem22)" />
    <var name="section1subsection4subsectionitem23" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('889', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection4subsectionitem23add" pre="section1subsection4.AddItem(section1subsection4subsectionitem23)" />
    <var name="section1subsection4subsectionitem24" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('696-698', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem24add" pre="section1subsection4.AddItem(section1subsection4subsectionitem24)" />
    <var name="section1subsection4subsectionitem25" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('685-685', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem25add" pre="section1subsection4.AddItem(section1subsection4subsectionitem25)" />
    <var name="section1subsection4subsectionitem26" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('686-686', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem26add" pre="section1subsection4.AddItem(section1subsection4subsectionitem26)" />
    <var name="section1subsection4subsectionitem27" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('699-699', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem27add" pre="section1subsection4.AddItem(section1subsection4subsectionitem27)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:OtherDebtors')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Deferred tax&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('901-901', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:DeferredTaxCurrentAsset')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:Debtors')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Debtors small" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="CompanySize = 'Small' and FRSSE=false" enabled="Conditional" section-name="DebtorsValuesSmall" page-break-before="False" keep-with-next-strength="1" template-guid="d9596956-d1c9-41ea-9589-e5e1ac13293b">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'DebtorsSmall', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('DebtorsSmall', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Trade debtors&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('680-684', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('700-702', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem2add" pre="section1subsection1.AddItem(section1subsection1subsectionitem2)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:TradeDebtors')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Deferred tax&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('901-901', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:DeferredTaxCurrentAsset')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amounts owed by group undertakings and undertakings in which the company has a participating interest&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('689-689', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('705-705', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection3subsectionitem2add" pre="section1subsection3.AddItem(section1subsection3subsectionitem2)" />
    <var name="section1subsection3subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('687-688', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection3subsectionitem3add" pre="section1subsection3.AddItem(section1subsection3subsectionitem3)" />
    <var name="section1subsection3subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('703-704', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection3subsectionitem4add" pre="section1subsection3.AddItem(section1subsection3subsectionitem4)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:AmountsOwedByGroupUndertakingsOtherParticipatingInterests')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amounts recoverable on long term contracts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('690-690', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:AmountsRecoverableOnContracts')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other debtors&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('691', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('692', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection5subsectionitem2add" pre="section1subsection5.AddItem(section1subsection5subsectionitem2)" />
    <var name="section1subsection5subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('693', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem3add" pre="section1subsection5.AddItem(section1subsection5subsectionitem3)" />
    <var name="section1subsection5subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('694', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem4add" pre="section1subsection5.AddItem(section1subsection5subsectionitem4)" />
    <var name="section1subsection5subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('695', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem5add" pre="section1subsection5.AddItem(section1subsection5subsectionitem5)" />
    <var name="section1subsection5subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('706', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem6add" pre="section1subsection5.AddItem(section1subsection5subsectionitem6)" />
    <var name="section1subsection5subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('707', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection5subsectionitem7add" pre="section1subsection5.AddItem(section1subsection5subsectionitem7)" />
    <var name="section1subsection5subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('708', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem8add" pre="section1subsection5.AddItem(section1subsection5subsectionitem8)" />
    <var name="section1subsection5subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('709', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem9add" pre="section1subsection5.AddItem(section1subsection5subsectionitem9)" />
    <var name="section1subsection5subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('810-811', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection5subsectionitem10add" pre="section1subsection5.AddItem(section1subsection5subsectionitem10)" />
    <var name="section1subsection5subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('816-819', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection5subsectionitem11add" pre="section1subsection5.AddItem(section1subsection5subsectionitem11)" />
    <var name="section1subsection5subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('830', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection5subsectionitem12add" pre="section1subsection5.AddItem(section1subsection5subsectionitem12)" />
    <var name="section1subsection5subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('831', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection5subsectionitem13add" pre="section1subsection5.AddItem(section1subsection5subsectionitem13)" />
    <var name="section1subsection5subsectionitem14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('832', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection5subsectionitem14add" pre="section1subsection5.AddItem(section1subsection5subsectionitem14)" />
    <var name="section1subsection5subsectionitem15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('833', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection5subsectionitem15add" pre="section1subsection5.AddItem(section1subsection5subsectionitem15)" />
    <var name="section1subsection5subsectionitem16" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('834', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection5subsectionitem16add" pre="section1subsection5.AddItem(section1subsection5subsectionitem16)" />
    <var name="section1subsection5subsectionitem17" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('835', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection5subsectionitem17add" pre="section1subsection5.AddItem(section1subsection5subsectionitem17)" />
    <var name="section1subsection5subsectionitem18" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('836', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection5subsectionitem18add" pre="section1subsection5.AddItem(section1subsection5subsectionitem18)" />
    <var name="section1subsection5subsectionitem19" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('837', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection5subsectionitem19add" pre="section1subsection5.AddItem(section1subsection5subsectionitem19)" />
    <var name="section1subsection5subsectionitem20" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('838', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection5subsectionitem20add" pre="section1subsection5.AddItem(section1subsection5subsectionitem20)" />
    <var name="section1subsection5subsectionitem21" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('839', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection5subsectionitem21add" pre="section1subsection5.AddItem(section1subsection5subsectionitem21)" />
    <var name="section1subsection5subsectionitem22" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('888', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection5subsectionitem22add" pre="section1subsection5.AddItem(section1subsection5subsectionitem22)" />
    <var name="section1subsection5subsectionitem23" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('889', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection5subsectionitem23add" pre="section1subsection5.AddItem(section1subsection5subsectionitem23)" />
    <var name="section1subsection5subsectionitem24" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('696-698', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem24add" pre="section1subsection5.AddItem(section1subsection5subsectionitem24)" />
    <var name="section1subsection5subsectionitem25" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('685-685', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem25add" pre="section1subsection5.AddItem(section1subsection5subsectionitem25)" />
    <var name="section1subsection5subsectionitem26" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('686-686', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem26add" pre="section1subsection5.AddItem(section1subsection5subsectionitem26)" />
    <var name="section1subsection5subsectionitem27" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('699-699', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem27add" pre="section1subsection5.AddItem(section1subsection5subsectionitem27)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:OtherDebtors')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:Debtors')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Debtors medium/large" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="CompanySize != 'Small'  and FRSSE = false" enabled="Conditional" section-name="DebtorsValuesMediumLarge" page-break-before="False" keep-with-next-strength="1" template-guid="ed875622-18a6-4b36-9526-10e3970554c4">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'DebtorsMediumLarge', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Debtors', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Trade debtors&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('680-684', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('700-702', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem2add" pre="section1subsection1.AddItem(section1subsection1subsectionitem2)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:TradeDebtors')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Gross factored debts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('685-685', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:FactoredDebtsOutstanding')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Non-returnable factor proceeds&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('686-686', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amounts owed by group undertakings&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('687-688', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('703-704', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection4subsectionitem2add" pre="section1subsection4.AddItem(section1subsection4subsectionitem2)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:AmountsOwedBySubsidiaries')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amounts owed by undertakings in which the company has a participating interest&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('689-689', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('705-705', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection5subsectionitem2add" pre="section1subsection5.AddItem(section1subsection5subsectionitem2)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:AmountsOwedByOtherParticipatingInterests')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amounts recoverable on long term contracts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('690-690', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:AmountsRecoverableOnContracts')" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other debtors&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('691', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('692', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection7subsectionitem2add" pre="section1subsection7.AddItem(section1subsection7subsectionitem2)" />
    <var name="section1subsection7subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('693', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem3add" pre="section1subsection7.AddItem(section1subsection7subsectionitem3)" />
    <var name="section1subsection7subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('694', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem4add" pre="section1subsection7.AddItem(section1subsection7subsectionitem4)" />
    <var name="section1subsection7subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('695', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem5add" pre="section1subsection7.AddItem(section1subsection7subsectionitem5)" />
    <var name="section1subsection7subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('706', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem6add" pre="section1subsection7.AddItem(section1subsection7subsectionitem6)" />
    <var name="section1subsection7subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('707', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection7subsectionitem7add" pre="section1subsection7.AddItem(section1subsection7subsectionitem7)" />
    <var name="section1subsection7subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('708', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem8add" pre="section1subsection7.AddItem(section1subsection7subsectionitem8)" />
    <var name="section1subsection7subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('709', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem9add" pre="section1subsection7.AddItem(section1subsection7subsectionitem9)" />
    <var name="section1subsection7subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('810-811', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection7subsectionitem10add" pre="section1subsection7.AddItem(section1subsection7subsectionitem10)" />
    <var name="section1subsection7subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('816-819', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection7subsectionitem11add" pre="section1subsection7.AddItem(section1subsection7subsectionitem11)" />
    <var name="section1subsection7subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('699', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem12add" pre="section1subsection7.AddItem(section1subsection7subsectionitem12)" />
    <var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:OtherDebtors')" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Deferred tax&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('901-901', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
    <var name="section1subsection8XBRLConceptNameSet" pre="section1subsection8.SetConceptName('uk-gaap:DeferredTaxCurrentAsset')" />
    <var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
    <var name="section1subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Directors&amp;apos; current accounts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('830', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection9subsectionitem1add" pre="section1subsection9.AddItem(section1subsection9subsectionitem1)" />
    <var name="section1subsection9subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('831', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection9subsectionitem2add" pre="section1subsection9.AddItem(section1subsection9subsectionitem2)" />
    <var name="section1subsection9subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('832', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection9subsectionitem3add" pre="section1subsection9.AddItem(section1subsection9subsectionitem3)" />
    <var name="section1subsection9subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('833', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection9subsectionitem4add" pre="section1subsection9.AddItem(section1subsection9subsectionitem4)" />
    <var name="section1subsection9subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('834', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection9subsectionitem5add" pre="section1subsection9.AddItem(section1subsection9subsectionitem5)" />
    <var name="section1subsection9subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('835', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection9subsectionitem6add" pre="section1subsection9.AddItem(section1subsection9subsectionitem6)" />
    <var name="section1subsection9subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('836', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection9subsectionitem7add" pre="section1subsection9.AddItem(section1subsection9subsectionitem7)" />
    <var name="section1subsection9subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('837', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection9subsectionitem8add" pre="section1subsection9.AddItem(section1subsection9subsectionitem8)" />
    <var name="section1subsection9subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('838', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection9subsectionitem9add" pre="section1subsection9.AddItem(section1subsection9subsectionitem9)" />
    <var name="section1subsection9subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('839', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection9subsectionitem10add" pre="section1subsection9.AddItem(section1subsection9subsectionitem10)" />
    <var name="section1subsection9subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('888', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection9subsectionitem11add" pre="section1subsection9.AddItem(section1subsection9subsectionitem11)" />
    <var name="section1subsection9subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('889', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection9subsectionitem12add" pre="section1subsection9.AddItem(section1subsection9subsectionitem12)" />
    <var name="section1subsection9add" pre="section1.AddItem(section1subsection9)" />
    <var name="section1subsection10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Prepayments and accrued income&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection10subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('697', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection10subsectionitem1add" pre="section1subsection10.AddItem(section1subsection10subsectionitem1)" />
    <var name="section1subsection10subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('698', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection10subsectionitem2add" pre="section1subsection10.AddItem(section1subsection10subsectionitem2)" />
    <var name="section1subsection10XBRLConceptNameSet" pre="section1subsection10.SetConceptName('uk-gaap:PrepaymentsAccruedIncomeCurrentAsset')" />
    <var name="section1subsection10add" pre="section1.AddItem(section1subsection10)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:Debtors')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Debtors over one year" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryRange('700-709').HasTransactions" enabled="Conditional" section-name="DebtorsOverOneYear" page-break-before="False" keep-with-next-strength="0" template-guid="0f387a2a-47fc-4b4a-ae68-fdf8e33bc43b">
						<template><add-to-body>
</add-to-body></template>
						<report-template version="12" name="Debtors over one year aggregate" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="DebtorsOverOneYearAggregate" page-break-before="False" keep-with-next-strength="1" template-guid="c3209091-f61d-456c-9742-31460354b984">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">Debtors includes <ws /><data>reportHelper.Computation(reportHelper.StatutoryNoteRounding).GetPrimarySubRange(700,702).Totals[0].Value

+
(if reportHelper.Computation(reportHelper.StatutoryNoteRounding).GetPrimarySubRange(703,704).Totals[0].Value&gt;0

then reportHelper.Computation(reportHelper.StatutoryNoteRounding).GetPrimarySubRange(703,704).Totals[0].Value

else 0.00)

+

(if reportHelper.Computation(reportHelper.StatutoryNoteRounding).GetPrimarySubRange(705,705).Totals[0].Value&gt;0

then reportHelper.Computation(reportHelper.StatutoryNoteRounding).GetPrimarySubRange(705,705).Totals[0].Value

else 0.00)

+

reportHelper.Computation(reportHelper.StatutoryNoteRounding).GetPrimaryCode("706").Totals[0].Value

+

(if reportHelper.Computation(reportHelper.StatutoryNoteRounding).GetPrimaryCode("707").Totals[0].Value &gt;0

then 

reportHelper.Computation(reportHelper.StatutoryNoteRounding).GetPrimaryCode("707").Totals[0].Value

else 0.00)

+


reportHelper.Computation(reportHelper.StatutoryNoteRounding).GetPrimaryCode("708").Totals[0].Value


+


reportHelper.Computation(reportHelper.StatutoryNoteRounding).GetPrimaryCode("709").Totals[0].Value</data><ws /><inline condition="reportHelper.HasPriorPeriod">(<data>reportHelper.PriorPeriod.EndDate.Value.Year</data><ws /> - <ws /><data>reportHelper.Computation(reportHelper.StatutoryNoteRounding).GetPrimarySubRange(700,702).Totals[1].Value

+

(if reportHelper.Computation(reportHelper.StatutoryNoteRounding).GetPrimarySubRange(703,704).Totals[1].Value&gt;0

then reportHelper.Computation(reportHelper.StatutoryNoteRounding).GetPrimarySubRange(703,704).Totals[1].Value

else 0.00)

+

(if reportHelper.Computation(reportHelper.StatutoryNoteRounding).GetPrimarySubRange(705,705).Totals[1].Value&gt;0

then reportHelper.Computation(reportHelper.StatutoryNoteRounding).GetPrimarySubRange(705,705).Totals[1].Value

else 0.00)

+


reportHelper.Computation(reportHelper.StatutoryNoteRounding).GetPrimaryCode("706").Totals[1].Value

+

(if reportHelper.Computation(reportHelper.StatutoryNoteRounding).GetPrimaryCode("707").Totals[1].Value &gt;0

then 

reportHelper.Computation(reportHelper.StatutoryNoteRounding).GetPrimaryCode("707").Totals[1].Value

else 0.00)


+


reportHelper.Computation(reportHelper.StatutoryNoteRounding).GetPrimaryCode("708").Totals[1].Value


+


reportHelper.Computation(reportHelper.StatutoryNoteRounding).GetPrimaryCode("709").Totals[1].Value</data>
) <ws /></inline>
receivable after more than one year.
<br /><br /><inline condition="CompanySize!='Small'">This can be analysed as follows:</inline></para>
</add-to-body></template>
						</report-template>
						<report-template version="12" name="Debtors over one year" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="CompanySize != 'Small'" enabled="Conditional" section-name="DebtorsOverOneYearValues" page-break-before="False" keep-with-next-strength="1" template-guid="204940bd-5267-45b7-b81b-b27345c4b16b">
							<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'DebtorsOver1Year', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('DebtorsOver1Year', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Trade debtors&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('700-702', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:TradeDebtorsAfterOneYear')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amounts owed by group undertakings&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('703-704', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:AmountsOwedBySubsidiariesAfterOneYear')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amounts owed by undertakings in which the company has a participating interest&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('705-705', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:AmountsOwedByOtherParticipatingInterestsAfterOneYear')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other debtors&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('706', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('708', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem2add" pre="section1subsection4.AddItem(section1subsection4subsectionitem2)" />
    <var name="section1subsection4subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('709', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem3add" pre="section1subsection4.AddItem(section1subsection4subsectionitem3)" />
    <var name="section1subsection4subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('707', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection4subsectionitem4add" pre="section1subsection4.AddItem(section1subsection4subsectionitem4)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:OtherDebtorsDueAfterOneYear')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Directors&amp;apos; current accounts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('888', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('889', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section1subsection5subsectionitem2add" pre="section1subsection5.AddItem(section1subsection5subsectionitem2)" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:DebtorsDueAfterOneYear')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
						</report-template>
					</report-template>
					<report-template version="12" name="Deferred tax asset" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&quot;901&quot;).Totals!=null and (reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&quot;901&quot;).Totals[0].Value&gt;0)" enabled="Conditional" section-name="DeferredTaxAsset" page-break-before="False" keep-with-next-strength="0" template-guid="c3a0a063-facf-4493-84fc-5abfeace916c">
						<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
Deferred tax
</para>
  <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
The movement in the deferred tax asset in the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws />is as follows:
</para>
</add-to-body></template>
						<report-template version="12" name="Deferred tax asset movement" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="DeferredTaxAssetMovement" page-break-before="False" keep-with-next-strength="1" template-guid="62deff56-90f8-4349-a0b9-cbb2d72bf9e5">
							<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'DeferredTaxAssetMovement', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('DTAMovement', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.EndDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.StartDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('901.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:DeferredTaxCurrentAsset')" />
    <var name="section1subsection1XBRLPeriodSet" pre="section1subsection1.SetPeriod('StartCurrentPeriod')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Deferred tax &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;credited/(charged)&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; to the profit and loss account&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('901.05', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:ProvisionsChargedCreditedToProfitLossAccountDuringPeriod')" />
    <var name="section1subsection2XBRLDimensionsSet" pre="section1subsection2.SetDimensions('uk-gaap:ProvisionsClassesDimension=uk-gaap:ProvisionsForDeferredTaxation')" />
    <var name="section1subsection2XBRLHypercubeNameSet" pre="section1subsection2.SetHypercubeName('uk-gaap:ProvisionsForLiabilitiesChargesHypercube')" />
    <var name="section1subsection2XBRLPeriodSet" pre="section1subsection2.SetPeriod('CurrentPeriod')" />
    <var name="section1subsection2XBRLReverseSignSet" pre="section1subsection2.SetReverseSign(true)" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Deferred tax utilised during the &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('901.10', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:ProvisionsUtilisedDuringPeriod')" />
    <var name="section1subsection3XBRLDimensionsSet" pre="section1subsection3.SetDimensions('uk-gaap:ProvisionsClassesDimension=uk-gaap:ProvisionsForDeferredTaxation')" />
    <var name="section1subsection3XBRLHypercubeNameSet" pre="section1subsection3.SetHypercubeName('uk-gaap:ProvisionsForLiabilitiesChargesHypercube')" />
    <var name="section1subsection3XBRLPeriodSet" pre="section1subsection3.SetPeriod('CurrentPeriod')" />
    <var name="section1subsection3XBRLReverseSignSet" pre="section1subsection3.SetReverseSign(true)" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:DeferredTaxCurrentAsset')" />
    <var name="section1XBRLPeriodSet" pre="section1.SetPeriod('EndCurrentPeriod')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
						</report-template>
						<report-template version="12" name="Analysis of deferred tax" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&quot;901&quot;).HasTransactions" enabled="Always" section-name="AnalysisOfDeferredTaxAsset" page-break-before="False" keep-with-next-strength="0" template-guid="412ede39-a7b8-4e75-bc9f-38ff7c39c06c">
							<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
							<report-template version="12" name="Deferred tax analysis values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="DeferredTaxAnalysisValues" page-break-before="False" keep-with-next-strength="1" template-guid="64acc931-8218-4f09-8854-53ab1a2e7bc8">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'DeferredTaxAssetAnalysis', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('DeferredTaxAssetAnalysis', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Difference between accumulated depreciation and amortisation and capital allowances&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|DeferredTax|DeferredTax|Analysis|Rows|*:filter[XBRLDefinition|Current Period=Difference between accumulated depreciation and amortisation and capital allowances]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:DifferenceBetweenAccumulatedDepreciationAmortisationCapitalAllowances')" />
    <var name="section1subsection1XBRLReverseSignSet" pre="section1subsection1.SetReverseSign(true)" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other timing differences&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|DeferredTax|DeferredTax|Analysis|Rows|*:filter[XBRLDefinition|Current Period=Other timing differences]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:OtherTimingDifferences')" />
    <var name="section1subsection2XBRLReverseSignSet" pre="section1subsection2.SetReverseSign(true)" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Tax losses available&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|DeferredTax|DeferredTax|Analysis|Rows|*:filter[XBRLDefinition|Current Period=Tax losses available]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:TaxLossesAvailable')" />
    <var name="section1subsection3XBRLReverseSignSet" pre="section1subsection3.SetReverseSign(true)" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:DeferredTaxCurrentAsset')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
						</report-template>
					</report-template>
				</report-template>
				<report-template version="12" name="Current asset investments" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="HasCAInvestments" enabled="Conditional" section-name="CurrentAssetInvestments" page-break-before="False" keep-with-next-strength="0" template-guid="d65ab430-87bc-4278-99b1-9ed86c35f410">
					<variables>
						<variable name="HasCAInvestments">reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryRange(710,749).Totals!=null and 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryRange(710,749).Totals[0].HasTransactions 

or
(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryRange(710,749).Totals[1].HasTransactions ))</variable>
					</variables>
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Current asset investment values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="CAInvestmentValues" page-break-before="False" keep-with-next-strength="1" template-guid="33a5296a-f2bf-4fb4-8260-72445e89be99">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'CurrentAssetInvestments', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('CAInvestmentValues', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Shares in group undertakings&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('710-719', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:SharesInSubsidiariesHeldForSale')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other investments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('720-729', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('730-739', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem2add" pre="section1subsection2.AddItem(section1subsection2subsectionitem2)" />
    <var name="section1subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('740-749', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem3add" pre="section1subsection2.AddItem(section1subsection2subsectionitem3)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:OtherCurrentAssetInvestmentsHeldForSale')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:CurrentAssetInvestments')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Listed current asset investments market value" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|Investments|MarketValue|CurrentAsset|Current Period&quot;)[0].HasValue) or (reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|Investments|MarketValue|CurrentAsset|Prior Period&quot;)[0].HasValue)" enabled="Conditional" section-name="CAInvestmentsListedStockExchange" page-break-before="False" keep-with-next-strength="1" template-guid="09e758d8-d853-4253-8eee-efc5bbbf6ea1">
						<template><add-to-body>
  <para base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">Listed investments</para>
  <para para-alignment="Full" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|FinancialStatements|Investments')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:MarketValueListedInvestmentsGrouping">Investments having a net book value of <ws /><data>reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange('730-739').Totals[0].Value</data><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.PriorPeriod.EndDate.Value</data><ws /> - <ws /><data>reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange('730-739').Totals[1].Value</data>
)</inline><ws /> are listed on a recognised stock exchange and had a market value of <ws /><inline xbrl-concept="uk-gaap:AggregateMarketValueListedInvestmentsDate" xbrl-period="EndCurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|Investments|MarketValue|CurrentAsset|Current Period")[0].Value</data></inline><ws /> at the end of the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.PriorPeriod.EndDate.Value</data><ws /> - <ws /><inline xbrl-concept="uk-gaap:AggregateMarketValueListedInvestmentsDate" xbrl-period="EndPriorPeriod"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|Investments|MarketValue|CurrentAsset|Prior Period")[0].Value</data></inline>
)</inline>
.</para>
</add-to-body></template>
					</report-template>
				</report-template>
				<report-template version="12" name="Creditors" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryRange('770-844').HasTransactions or reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryRange('845-899').HasTransactions" enabled="Conditional" section-name="Creditors" page-break-before="False" keep-with-next-strength="0" template-guid="6d43fd7d-f82d-41f9-82ba-aced43a6d0e3">
					<template><add-to-body>
</add-to-body></template>
					<report-template version="12" name="Creditors: Amounts falling due within one year" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryRange('770-844').HasTransactions" enabled="Conditional" section-name="CreditorsLT1Year" page-break-before="False" keep-with-next-strength="0" template-guid="bbe2e7c1-4c23-47d4-afd5-f2846041d9ec">
						<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
						<report-template version="12" name="Creditors due within one year small" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="CompanySize = 'Small' " enabled="Conditional" section-name="CreditorsDueWithinOneYearSmall" page-break-before="False" keep-with-next-strength="1" template-guid="049df31b-4ef6-4f6b-a4bc-630dc8e14722">
							<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'CreditorsUnder1YearSmall', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('CreditorsUnder1YearNoteSmall', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Trade creditors&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('793-798', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:TradeCreditorsWithinOneYear')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Convertible debentures&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('770-774', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:ConvertibleDebt')" />
    <var name="section1subsection2XBRLDimensionsSet" pre="section1subsection2.SetDimensions('uk-gaap:FinancialInstrumentCurrentNon-currentDimension=uk-gaap:CurrentFinancialInstruments')" />
    <var name="section1subsection2XBRLHypercubeNameSet" pre="section1subsection2.SetHypercubeName('uk-gaap:FinancialInstrumentsHypercube')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Bank loans and overdrafts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('750', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('751', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection3subsectionitem2add" pre="section1subsection3.AddItem(section1subsection3subsectionitem2)" />
    <var name="section1subsection3subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('752', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection3subsectionitem3add" pre="section1subsection3.AddItem(section1subsection3subsectionitem3)" />
    <var name="section1subsection3subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('753', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection3subsectionitem4add" pre="section1subsection3.AddItem(section1subsection3subsectionitem4)" />
    <var name="section1subsection3subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('754', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection3subsectionitem5add" pre="section1subsection3.AddItem(section1subsection3subsectionitem5)" />
    <var name="section1subsection3subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('755', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection3subsectionitem6add" pre="section1subsection3.AddItem(section1subsection3subsectionitem6)" />
    <var name="section1subsection3subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('756', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection3subsectionitem7add" pre="section1subsection3.AddItem(section1subsection3subsectionitem7)" />
    <var name="section1subsection3subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('757', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection3subsectionitem8add" pre="section1subsection3.AddItem(section1subsection3subsectionitem8)" />
    <var name="section1subsection3subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('758', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection3subsectionitem9add" pre="section1subsection3.AddItem(section1subsection3subsectionitem9)" />
    <var name="section1subsection3subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('759', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection3subsectionitem10add" pre="section1subsection3.AddItem(section1subsection3subsectionitem10)" />
    <var name="section1subsection3subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('780-784', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem11add" pre="section1subsection3.AddItem(section1subsection3subsectionitem11)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:BankBorrowingsOverdrafts')" />
    <var name="section1subsection3XBRLDimensionsSet" pre="section1subsection3.SetDimensions('uk-gaap:FinancialInstrumentCurrentNon-currentDimension=uk-gaap:CurrentFinancialInstruments')" />
    <var name="section1subsection3XBRLHypercubeNameSet" pre="section1subsection3.SetHypercubeName('uk-gaap:FinancialInstrumentsHypercube')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amounts owed to group undertakings and undertakings in which the company has a participating interest&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('689-689', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('687-688', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection4subsectionitem2add" pre="section1subsection4.AddItem(section1subsection4subsectionitem2)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:AmountsOwedToGroupUndertakingsOtherParticipatingInterestsWithinOneYear')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Corporation tax&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('810-811', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('812-812', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem2add" pre="section1subsection5.AddItem(section1subsection5subsectionitem2)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:CorporationTaxDueWithinOneYear')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other taxes and social security&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('813-815', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('816-819', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection6subsectionitem2add" pre="section1subsection6.AddItem(section1subsection6subsectionitem2)" />
    <var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:OtherTaxationSocialSecurityWithinOneYear')" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other creditors&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('692', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('800-806', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem2add" pre="section1subsection7.AddItem(section1subsection7subsectionitem2)" />
    <var name="section1subsection7subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('820-824', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem3add" pre="section1subsection7.AddItem(section1subsection7subsectionitem3)" />
    <var name="section1subsection7subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('825-829', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem4add" pre="section1subsection7.AddItem(section1subsection7subsectionitem4)" />
    <var name="section1subsection7subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('778-778', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem5add" pre="section1subsection7.AddItem(section1subsection7subsectionitem5)" />
    <var name="section1subsection7subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('785-789', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem6add" pre="section1subsection7.AddItem(section1subsection7subsectionitem6)" />
    <var name="section1subsection7subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('790-791', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem7add" pre="section1subsection7.AddItem(section1subsection7subsectionitem7)" />
    <var name="section1subsection7subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('799-799', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem8add" pre="section1subsection7.AddItem(section1subsection7subsectionitem8)" />
    <var name="section1subsection7subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('807-809', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem9add" pre="section1subsection7.AddItem(section1subsection7subsectionitem9)" />
    <var name="section1subsection7subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('775-777', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem10add" pre="section1subsection7.AddItem(section1subsection7subsectionitem10)" />
    <var name="section1subsection7subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('779-779', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem11add" pre="section1subsection7.AddItem(section1subsection7subsectionitem11)" />
    <var name="section1subsection7subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('840-844', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem12add" pre="section1subsection7.AddItem(section1subsection7subsectionitem12)" />
    <var name="section1subsection7subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('830', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection7subsectionitem13add" pre="section1subsection7.AddItem(section1subsection7subsectionitem13)" />
    <var name="section1subsection7subsectionitem14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('831', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection7subsectionitem14add" pre="section1subsection7.AddItem(section1subsection7subsectionitem14)" />
    <var name="section1subsection7subsectionitem15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('832', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection7subsectionitem15add" pre="section1subsection7.AddItem(section1subsection7subsectionitem15)" />
    <var name="section1subsection7subsectionitem16" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('833', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection7subsectionitem16add" pre="section1subsection7.AddItem(section1subsection7subsectionitem16)" />
    <var name="section1subsection7subsectionitem17" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('834', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection7subsectionitem17add" pre="section1subsection7.AddItem(section1subsection7subsectionitem17)" />
    <var name="section1subsection7subsectionitem18" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('835', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection7subsectionitem18add" pre="section1subsection7.AddItem(section1subsection7subsectionitem18)" />
    <var name="section1subsection7subsectionitem19" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('837', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection7subsectionitem19add" pre="section1subsection7.AddItem(section1subsection7subsectionitem19)" />
    <var name="section1subsection7subsectionitem20" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('838', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection7subsectionitem20add" pre="section1subsection7.AddItem(section1subsection7subsectionitem20)" />
    <var name="section1subsection7subsectionitem21" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('839', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection7subsectionitem21add" pre="section1subsection7.AddItem(section1subsection7subsectionitem21)" />
    <var name="section1subsection7subsectionitem22" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('836', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection7subsectionitem22add" pre="section1subsection7.AddItem(section1subsection7subsectionitem22)" />
    <var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:OtherCreditorsDueWithinOneYear')" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Payments on account on long term contracts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('792-792', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
    <var name="section1subsection8XBRLConceptNameSet" pre="section1subsection8.SetConceptName('uk-gaap:PaymentsReceivedOnAccountWithinOneYear')" />
    <var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:CreditorsDueWithinOneYear')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
						</report-template>
						<report-template version="12" name="Creditors due within one year medium/large" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="CompanySize != 'Small'" enabled="Conditional" section-name="CreditorsDueWithinOneYearMediumLarge" page-break-before="False" keep-with-next-strength="1" template-guid="3632bca0-3ee3-4eab-ad64-444aa91669d6">
							<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'CreditorsUnder1YearMediumLarge', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('CreditorsUnder1YearNote', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Trade creditors&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('793-798', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:TradeCreditorsWithinOneYear')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Preference shares&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('778-778', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:RedeemablePreferenceShares')" />
    <var name="section1subsection2XBRLDimensionsSet" pre="section1subsection2.SetDimensions('uk-gaap:FinancialInstrumentCurrentNon-currentDimension=uk-gaap:CurrentFinancialInstruments')" />
    <var name="section1subsection2XBRLHypercubeNameSet" pre="section1subsection2.SetHypercubeName('uk-gaap:FinancialInstrumentsHypercube')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cumulative preference share dividends unpaid&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('779-779', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:CumulativePreferenceShareDividendsUnpaidWithinOneYear')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Convertible debentures&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('770-774', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:ConvertibleDebt')" />
    <var name="section1subsection4XBRLDimensionsSet" pre="section1subsection4.SetDimensions('uk-gaap:FinancialInstrumentCurrentNon-currentDimension=uk-gaap:CurrentFinancialInstruments')" />
    <var name="section1subsection4XBRLHypercubeNameSet" pre="section1subsection4.SetHypercubeName('uk-gaap:FinancialInstrumentsHypercube')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Non-convertible debentures&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('775-777', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:DebenturesOtherLoans')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Bank loans and overdrafts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('750', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('751', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection6subsectionitem2add" pre="section1subsection6.AddItem(section1subsection6subsectionitem2)" />
    <var name="section1subsection6subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('752', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection6subsectionitem3add" pre="section1subsection6.AddItem(section1subsection6subsectionitem3)" />
    <var name="section1subsection6subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('753', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection6subsectionitem4add" pre="section1subsection6.AddItem(section1subsection6subsectionitem4)" />
    <var name="section1subsection6subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('754', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection6subsectionitem5add" pre="section1subsection6.AddItem(section1subsection6subsectionitem5)" />
    <var name="section1subsection6subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('755', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection6subsectionitem6add" pre="section1subsection6.AddItem(section1subsection6subsectionitem6)" />
    <var name="section1subsection6subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('756', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection6subsectionitem7add" pre="section1subsection6.AddItem(section1subsection6subsectionitem7)" />
    <var name="section1subsection6subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('757', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection6subsectionitem8add" pre="section1subsection6.AddItem(section1subsection6subsectionitem8)" />
    <var name="section1subsection6subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('758', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection6subsectionitem9add" pre="section1subsection6.AddItem(section1subsection6subsectionitem9)" />
    <var name="section1subsection6subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('759', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection6subsectionitem10add" pre="section1subsection6.AddItem(section1subsection6subsectionitem10)" />
    <var name="section1subsection6subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('780-784', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem11add" pre="section1subsection6.AddItem(section1subsection6subsectionitem11)" />
    <var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:BankBorrowingsOverdrafts')" />
    <var name="section1subsection6XBRLDimensionsSet" pre="section1subsection6.SetDimensions('uk-gaap:FinancialInstrumentCurrentNon-currentDimension=uk-gaap:CurrentFinancialInstruments')" />
    <var name="section1subsection6XBRLHypercubeNameSet" pre="section1subsection6.SetHypercubeName('uk-gaap:FinancialInstrumentsHypercube')" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other loans&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('785-789', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:OtherBorrowings')" />
    <var name="section1subsection7XBRLDimensionsSet" pre="section1subsection7.SetDimensions('uk-gaap:FinancialInstrumentCurrentNon-currentDimension=uk-gaap:CurrentFinancialInstruments')" />
    <var name="section1subsection7XBRLHypercubeNameSet" pre="section1subsection7.SetHypercubeName('uk-gaap:FinancialInstrumentsHypercube')" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Short term loan&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('790-791', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
    <var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
    <var name="section1subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Obligations under finance lease and hire purchase contracts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('840-844', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection9subsectionitem1add" pre="section1subsection9.AddItem(section1subsection9subsectionitem1)" />
    <var name="section1subsection9XBRLConceptNameSet" pre="section1subsection9.SetConceptName('uk-gaap:ObligationsUnderFinanceLeaseHirePurchaseContractsWithinOneYear')" />
    <var name="section1subsection9add" pre="section1.AddItem(section1subsection9)" />
    <var name="section1subsection10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Payments received on account&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection10subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('792-792', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection10subsectionitem1add" pre="section1subsection10.AddItem(section1subsection10subsectionitem1)" />
    <var name="section1subsection10XBRLConceptNameSet" pre="section1subsection10.SetConceptName('uk-gaap:PaymentsReceivedOnAccountWithinOneYear')" />
    <var name="section1subsection10add" pre="section1.AddItem(section1subsection10)" />
    <var name="section1subsection11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Bills of exchange&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection11subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('799-799', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection11subsectionitem1add" pre="section1subsection11.AddItem(section1subsection11subsectionitem1)" />
    <var name="section1subsection11XBRLConceptNameSet" pre="section1subsection11.SetConceptName('uk-gaap:BillsExchangeWithinOneYear')" />
    <var name="section1subsection11add" pre="section1.AddItem(section1subsection11)" />
    <var name="section1subsection12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amounts owed to group undertakings&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection12subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('687-688', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection12subsectionitem1add" pre="section1subsection12.AddItem(section1subsection12subsectionitem1)" />
    <var name="section1subsection12XBRLConceptNameSet" pre="section1subsection12.SetConceptName('uk-gaap:AmountsOwedToSubsidiariesWithinOneYear')" />
    <var name="section1subsection12add" pre="section1.AddItem(section1subsection12)" />
    <var name="section1subsection13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amounts owed to participating interests&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection13subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('689-689', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection13subsectionitem1add" pre="section1subsection13.AddItem(section1subsection13subsectionitem1)" />
    <var name="section1subsection13XBRLConceptNameSet" pre="section1subsection13.SetConceptName('uk-gaap:AmountsOwedToOtherParticipatingInterestsWithinOneYear')" />
    <var name="section1subsection13add" pre="section1.AddItem(section1subsection13)" />
    <var name="section1subsection14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Corporation tax&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection14subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('810-811', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection14subsectionitem1add" pre="section1subsection14.AddItem(section1subsection14subsectionitem1)" />
    <var name="section1subsection14subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('812-812', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection14subsectionitem2add" pre="section1subsection14.AddItem(section1subsection14subsectionitem2)" />
    <var name="section1subsection14XBRLConceptNameSet" pre="section1subsection14.SetConceptName('uk-gaap:CorporationTaxDueWithinOneYear')" />
    <var name="section1subsection14add" pre="section1.AddItem(section1subsection14)" />
    <var name="section1subsection15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other taxes and social security&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection15subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('813-815', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection15subsectionitem1add" pre="section1subsection15.AddItem(section1subsection15subsectionitem1)" />
    <var name="section1subsection15subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('816-819', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection15subsectionitem2add" pre="section1subsection15.AddItem(section1subsection15subsectionitem2)" />
    <var name="section1subsection15XBRLConceptNameSet" pre="section1subsection15.SetConceptName('uk-gaap:OtherTaxationSocialSecurityWithinOneYear')" />
    <var name="section1subsection15add" pre="section1.AddItem(section1subsection15)" />
    <var name="section1subsection16" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other creditors&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection16subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('692', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection16subsectionitem1add" pre="section1subsection16.AddItem(section1subsection16subsectionitem1)" />
    <var name="section1subsection16subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('800-806', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection16subsectionitem2add" pre="section1subsection16.AddItem(section1subsection16subsectionitem2)" />
    <var name="section1subsection16subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('820-824', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection16subsectionitem3add" pre="section1subsection16.AddItem(section1subsection16subsectionitem3)" />
    <var name="section1subsection16subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('825-829', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection16subsectionitem4add" pre="section1subsection16.AddItem(section1subsection16subsectionitem4)" />
    <var name="section1subsection16XBRLConceptNameSet" pre="section1subsection16.SetConceptName('uk-gaap:OtherCreditorsDueWithinOneYear')" />
    <var name="section1subsection16add" pre="section1.AddItem(section1subsection16)" />
    <var name="section1subsection17" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Directors&amp;apos; current accounts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection17subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('830', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection17subsectionitem1add" pre="section1subsection17.AddItem(section1subsection17subsectionitem1)" />
    <var name="section1subsection17subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('831', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection17subsectionitem2add" pre="section1subsection17.AddItem(section1subsection17subsectionitem2)" />
    <var name="section1subsection17subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('832', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection17subsectionitem3add" pre="section1subsection17.AddItem(section1subsection17subsectionitem3)" />
    <var name="section1subsection17subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('833', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection17subsectionitem4add" pre="section1subsection17.AddItem(section1subsection17subsectionitem4)" />
    <var name="section1subsection17subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('834', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection17subsectionitem5add" pre="section1subsection17.AddItem(section1subsection17subsectionitem5)" />
    <var name="section1subsection17subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('835', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection17subsectionitem6add" pre="section1subsection17.AddItem(section1subsection17subsectionitem6)" />
    <var name="section1subsection17subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('836', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection17subsectionitem7add" pre="section1subsection17.AddItem(section1subsection17subsectionitem7)" />
    <var name="section1subsection17subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('837', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection17subsectionitem8add" pre="section1subsection17.AddItem(section1subsection17subsectionitem8)" />
    <var name="section1subsection17subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('838', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection17subsectionitem9add" pre="section1subsection17.AddItem(section1subsection17subsectionitem9)" />
    <var name="section1subsection17subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('839', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection17subsectionitem10add" pre="section1subsection17.AddItem(section1subsection17subsectionitem10)" />
    <var name="section1subsection17XBRLConceptNameSet" pre="section1subsection17.SetConceptName('uk-gaap:LoansFromDirectorsWithinOneYear')" />
    <var name="section1subsection17add" pre="section1.AddItem(section1subsection17)" />
    <var name="section1subsection18" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Accruals and deferred income&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection18subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('807-809', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection18subsectionitem1add" pre="section1subsection18.AddItem(section1subsection18subsectionitem1)" />
    <var name="section1subsection18XBRLConceptNameSet" pre="section1subsection18.SetConceptName('uk-gaap:AccrualsDeferredIncomeWithinOneYear')" />
    <var name="section1subsection18add" pre="section1.AddItem(section1subsection18)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:CreditorsDueWithinOneYear')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
						</report-template>
						<report-template version="12" name="Secured creditors due within one year" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|SecuredCreditors|SecuredOver1Year|SecuredOver1Year|Rows|*&quot;)[0].HasValue" enabled="Conditional" section-name="SecuredCreditorsLT1Yr" page-break-before="False" keep-with-next-strength="1" template-guid="64ad0bdf-fc64-4603-84ae-87e66a643dd7">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Creditors amounts falling due within one year includes the following liabilities, on which security has been given by the company:</para>
</add-to-body></template>
							<report-template version="12" name="Secured creditors due within one year" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="SecuredCreditorsLT1YrValues" page-break-before="False" keep-with-next-strength="0" template-guid="2befe81d-075a-4bb2-bf46-e8bb8c03e5db">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SecuredCreditorsUnder1Year', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('SecuredCreditorsLT1YrValues', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Secured creditors due within one year&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|SecuredCreditors|SecuredWithin1Year|SecuredWithin1Year|Rows|*', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
						</report-template>
					</report-template>
					<report-template version="12" name="Creditors: Amounts falling due after more than one year" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryRange('845-899').HasTransactions" enabled="Conditional" section-name="CreditorsGT1Year" page-break-before="False" keep-with-next-strength="0" template-guid="9422642b-ca92-4173-9e05-e57a5aea07c7">
						<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
						<report-template version="12" name="Creditors due after more than one year small" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="CompanySize = 'Small' " enabled="Conditional" section-name="CreditorsDueAfterOneYearSmall" page-break-before="False" keep-with-next-strength="1" template-guid="f8c5d918-796e-4202-923f-ce9a911bcbf4">
							<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'CreditorsOver1Year', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('CreditorsGT1YrValuesSmall', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Trade creditors&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('880-880', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:TradeCreditorsAfterOneYear')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Convertible debentures&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('845-849', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:ConvertibleDebt')" />
    <var name="section1subsection2XBRLDimensionsSet" pre="section1subsection2.SetDimensions('uk-gaap:FinancialInstrumentCurrentNon-currentDimension=uk-gaap:Non-currentFinancialInstruments')" />
    <var name="section1subsection2XBRLHypercubeNameSet" pre="section1subsection2.SetHypercubeName('uk-gaap:FinancialInstrumentsHypercube')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Bank loans and overdrafts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('860-862', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('863-865', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem2add" pre="section1subsection3.AddItem(section1subsection3subsectionitem2)" />
    <var name="section1subsection3subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('866-868', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem3add" pre="section1subsection3.AddItem(section1subsection3subsectionitem3)" />
    <var name="section1subsection3subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('869-869', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem4add" pre="section1subsection3.AddItem(section1subsection3subsectionitem4)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:BankBorrowingsOverdrafts')" />
    <var name="section1subsection3XBRLDimensionsSet" pre="section1subsection3.SetDimensions('uk-gaap:FinancialInstrumentCurrentNon-currentDimension=uk-gaap:Non-currentFinancialInstruments')" />
    <var name="section1subsection3XBRLHypercubeNameSet" pre="section1subsection3.SetHypercubeName('uk-gaap:FinancialInstrumentsHypercube')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amounts owed to group undertakings and undertakings in which the company has a participating interest&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('703-704', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('705-705', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection4subsectionitem2add" pre="section1subsection4.AddItem(section1subsection4subsectionitem2)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:AmountsOwedToGroupUndertakingsOtherParticipatingInterestsAfterOneYear')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other creditors&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('707', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('883-884', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem2add" pre="section1subsection5.AddItem(section1subsection5subsectionitem2)" />
    <var name="section1subsection5subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('855-858', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem3add" pre="section1subsection5.AddItem(section1subsection5subsectionitem3)" />
    <var name="section1subsection5subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('859-859', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem4add" pre="section1subsection5.AddItem(section1subsection5subsectionitem4)" />
    <var name="section1subsection5subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('850-854', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem5add" pre="section1subsection5.AddItem(section1subsection5subsectionitem5)" />
    <var name="section1subsection5subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('870-872', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem6add" pre="section1subsection5.AddItem(section1subsection5subsectionitem6)" />
    <var name="section1subsection5subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('873-875', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem7add" pre="section1subsection5.AddItem(section1subsection5subsectionitem7)" />
    <var name="section1subsection5subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('876-878', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem8add" pre="section1subsection5.AddItem(section1subsection5subsectionitem8)" />
    <var name="section1subsection5subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('879-879', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem9add" pre="section1subsection5.AddItem(section1subsection5subsectionitem9)" />
    <var name="section1subsection5subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('890-892', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem10add" pre="section1subsection5.AddItem(section1subsection5subsectionitem10)" />
    <var name="section1subsection5subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('893-895', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem11add" pre="section1subsection5.AddItem(section1subsection5subsectionitem11)" />
    <var name="section1subsection5subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('896-898', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem12add" pre="section1subsection5.AddItem(section1subsection5subsectionitem12)" />
    <var name="section1subsection5subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('899-899', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem13add" pre="section1subsection5.AddItem(section1subsection5subsectionitem13)" />
    <var name="section1subsection5subsectionitem14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('881-881', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem14add" pre="section1subsection5.AddItem(section1subsection5subsectionitem14)" />
    <var name="section1subsection5subsectionitem15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('882-882', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem15add" pre="section1subsection5.AddItem(section1subsection5subsectionitem15)" />
    <var name="section1subsection5subsectionitem16" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('888', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection5subsectionitem16add" pre="section1subsection5.AddItem(section1subsection5subsectionitem16)" />
    <var name="section1subsection5subsectionitem17" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('889', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection5subsectionitem17add" pre="section1subsection5.AddItem(section1subsection5subsectionitem17)" />
    <var name="section1subsection5subsectionitem18" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('885-887', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem18add" pre="section1subsection5.AddItem(section1subsection5subsectionitem18)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:OtherCreditorsAfterOneYear')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:CreditorsDueAfterOneYear')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
						</report-template>
						<report-template version="12" name="Creditors after more than one year medium/large" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="CompanySize != 'Small'" enabled="Conditional" section-name="CreditorsDueAfterOneYearMediumLarge" page-break-before="False" keep-with-next-strength="0" template-guid="aa4611a1-237c-4604-b2bd-43c2b0bdb2a8">
							<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'CreditorsOver1Year', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('CreditorsGT1YrValues', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Trade creditors&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('880-880', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:TradeCreditorsAfterOneYear')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Preference shares&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('855-858', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:RedeemablePreferenceShares')" />
    <var name="section1subsection2XBRLDimensionsSet" pre="section1subsection2.SetDimensions('uk-gaap:FinancialInstrumentCurrentNon-currentDimension=uk-gaap:Non-currentFinancialInstruments')" />
    <var name="section1subsection2XBRLHypercubeNameSet" pre="section1subsection2.SetHypercubeName('uk-gaap:FinancialInstrumentsHypercube')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cumulative preference share dividends unpaid&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('859-859', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:CumulativePreferenceShareDividendsUnpaidAfterOneYear')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Convertible debentures&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('845-849', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:ConvertibleDebt')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Non-convertible debentures&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('850-854', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:DebenturesOtherLoans')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Bank loans and overdrafts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('860-862', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('863-865', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem2add" pre="section1subsection6.AddItem(section1subsection6subsectionitem2)" />
    <var name="section1subsection6subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('866-868', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem3add" pre="section1subsection6.AddItem(section1subsection6subsectionitem3)" />
    <var name="section1subsection6subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('869-869', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem4add" pre="section1subsection6.AddItem(section1subsection6subsectionitem4)" />
    <var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:BankBorrowingsOverdrafts')" />
    <var name="section1subsection6XBRLDimensionsSet" pre="section1subsection6.SetDimensions('uk-gaap:FinancialInstrumentCurrentNon-currentDimension=uk-gaap:Non-currentFinancialInstruments')" />
    <var name="section1subsection6XBRLHypercubeNameSet" pre="section1subsection6.SetHypercubeName('uk-gaap:FinancialInstrumentsHypercube')" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other loans&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('870-872', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('873-875', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem2add" pre="section1subsection7.AddItem(section1subsection7subsectionitem2)" />
    <var name="section1subsection7subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('876-878', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem3add" pre="section1subsection7.AddItem(section1subsection7subsectionitem3)" />
    <var name="section1subsection7subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('879-879', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem4add" pre="section1subsection7.AddItem(section1subsection7subsectionitem4)" />
    <var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:OtherBorrowings')" />
    <var name="section1subsection7XBRLDimensionsSet" pre="section1subsection7.SetDimensions('uk-gaap:FinancialInstrumentCurrentNon-currentDimension=uk-gaap:Non-currentFinancialInstruments')" />
    <var name="section1subsection7XBRLHypercubeNameSet" pre="section1subsection7.SetHypercubeName('uk-gaap:FinancialInstrumentsHypercube')" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Obligations under finance lease and hire purchase contracts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('890-892', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
    <var name="section1subsection8subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('893-895', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem2add" pre="section1subsection8.AddItem(section1subsection8subsectionitem2)" />
    <var name="section1subsection8subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('896-898', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem3add" pre="section1subsection8.AddItem(section1subsection8subsectionitem3)" />
    <var name="section1subsection8subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('899-899', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem4add" pre="section1subsection8.AddItem(section1subsection8subsectionitem4)" />
    <var name="section1subsection8XBRLConceptNameSet" pre="section1subsection8.SetConceptName('uk-gaap:ObligationsUnderFinanceLeaseHirePurchaseContractsAfterOneYear')" />
    <var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
    <var name="section1subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Payments on account on long term contracts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('881-881', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection9subsectionitem1add" pre="section1subsection9.AddItem(section1subsection9subsectionitem1)" />
    <var name="section1subsection9XBRLConceptNameSet" pre="section1subsection9.SetConceptName('uk-gaap:PaymentsReceivedOnAccountAfterOneYear')" />
    <var name="section1subsection9add" pre="section1.AddItem(section1subsection9)" />
    <var name="section1subsection10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Bills of exchange&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection10subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('882-882', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection10subsectionitem1add" pre="section1subsection10.AddItem(section1subsection10subsectionitem1)" />
    <var name="section1subsection10XBRLConceptNameSet" pre="section1subsection10.SetConceptName('uk-gaap:BillsExchangeAfterOneYear')" />
    <var name="section1subsection10add" pre="section1.AddItem(section1subsection10)" />
    <var name="section1subsection11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amounts owed to group undertakings&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection11subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('703-704', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection11subsectionitem1add" pre="section1subsection11.AddItem(section1subsection11subsectionitem1)" />
    <var name="section1subsection11XBRLConceptNameSet" pre="section1subsection11.SetConceptName('uk-gaap:AmountsOwedToSubsidiariesAfterOneYear')" />
    <var name="section1subsection11add" pre="section1.AddItem(section1subsection11)" />
    <var name="section1subsection12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amounts owed to participating interests&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection12subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('705-705', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection12subsectionitem1add" pre="section1subsection12.AddItem(section1subsection12subsectionitem1)" />
    <var name="section1subsection12XBRLConceptNameSet" pre="section1subsection12.SetConceptName('uk-gaap:AmountsOwedToOtherParticipatingInterestsAfterOneYear')" />
    <var name="section1subsection12add" pre="section1.AddItem(section1subsection12)" />
    <var name="section1subsection13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other creditors&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection13subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('707', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection13subsectionitem1add" pre="section1subsection13.AddItem(section1subsection13subsectionitem1)" />
    <var name="section1subsection13subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('883-884', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection13subsectionitem2add" pre="section1subsection13.AddItem(section1subsection13subsectionitem2)" />
    <var name="section1subsection13XBRLConceptNameSet" pre="section1subsection13.SetConceptName('uk-gaap:OtherCreditorsAfterOneYear')" />
    <var name="section1subsection13add" pre="section1.AddItem(section1subsection13)" />
    <var name="section1subsection14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Directors&amp;apos; current accounts&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection14subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('888', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection14subsectionitem1add" pre="section1subsection14.AddItem(section1subsection14subsectionitem1)" />
    <var name="section1subsection14subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('889', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection14subsectionitem2add" pre="section1subsection14.AddItem(section1subsection14subsectionitem2)" />
    <var name="section1subsection14XBRLConceptNameSet" pre="section1subsection14.SetConceptName('uk-gaap:LoansFromDirectorsAfterOneYear')" />
    <var name="section1subsection14add" pre="section1.AddItem(section1subsection14)" />
    <var name="section1subsection15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Accruals and deferred income&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection15subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('885-887', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection15subsectionitem1add" pre="section1subsection15.AddItem(section1subsection15subsectionitem1)" />
    <var name="section1subsection15XBRLConceptNameSet" pre="section1subsection15.SetConceptName('uk-gaap:AccrualsDeferredIncomeAfterOneYear')" />
    <var name="section1subsection15add" pre="section1.AddItem(section1subsection15)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:CreditorsDueAfterOneYear')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
						</report-template>
						<report-template version="12" name="Secured creditors due after more than one year" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|SecuredCreditors|SecuredOver1Year|SecuredOver1Year|Rows|*&quot;)[0].HasValue" enabled="Conditional" section-name="SecuredCreditorsGT1Yr" page-break-before="False" keep-with-next-strength="1" template-guid="c7cf05b6-4429-4e75-8dad-40a785e3ecb3">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Creditors amounts falling due after more than one year includes the following liabilities, on which security has been given by the company:</para>
</add-to-body></template>
							<report-template version="12" name="Secured creditors due after more than one year" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="SecuredCreditorsGT1YrValues" page-break-before="False" keep-with-next-strength="0" template-guid="4935bddb-8e1c-481f-8b25-d9975712316e">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SecuredCreditorsOver1Year', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('SecuredCreditorsGT1YrValues', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Secured creditors after one year&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|SecuredCreditors|SecuredOver1Year|SecuredOver1Year|Rows|*', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
						</report-template>
						<report-template version="12" name="Creditors due after more than five years" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="HasCreditorsGT5Yrs" enabled="Conditional" section-name="CreditorsDueAfterMoreThanFiveYears" page-break-before="False" keep-with-next-strength="1" template-guid="b11159f3-39af-4e62-9cb4-d7c898eb0800">
							<variables>
								<variable name="HasCreditorsGT5Yrs">(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('847').Totals!=null and 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('847').Totals[0].HasTransactions 

or
(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('847').Totals[1].HasTransactions) ))

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('848').Totals!=null and 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('848').Totals[0].HasTransactions 

or
(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('848').Totals[1].HasTransactions) ))

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('852').Totals!=null and 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('852').Totals[0].HasTransactions 

or
(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('852').Totals[1].HasTransactions) ))

or 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('853').Totals!=null and 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('853').Totals[0].HasTransactions 

or
(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('853').Totals[1].HasTransactions) ))

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('857').Totals!=null and 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('857').Totals[0].HasTransactions 

or
(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('857').Totals[1].HasTransactions) ))

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('869').Totals!=null and 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('869').Totals[0].HasTransactions 

or
(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('869').Totals[1].HasTransactions) ))

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('879').Totals!=null and 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('879').Totals[0].HasTransactions 

or
(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('879').Totals[1].HasTransactions) ))

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('899').Totals!=null and 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('899').Totals[0].HasTransactions 

or
(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('899').Totals[1].HasTransactions) ))

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange('866-868').Totals!=null and 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange('866-868').Totals[0].HasTransactions 

or
(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange('866-868').Totals[1].HasTransactions) ))

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange('876-878').Totals!=null and 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange('876-878').Totals[0].HasTransactions 

or
(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange('876-878').Totals[1].HasTransactions) ))

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange('896-898').Totals!=null and 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange('896-898').Totals[0].HasTransactions 

or
(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange('896-898').Totals[1].HasTransactions) ))

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('888.03').Totals!=null and 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('888.03').Totals[0].HasTransactions 

or
(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('888.03').Totals[1].HasTransactions) ))
or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('889.03').Totals!=null and 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('889.03').Totals[0].HasTransactions 

or
(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('889.03').Totals[1].HasTransactions) ))

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('888.02').Totals!=null and 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('888.02').Totals[0].HasTransactions 

or
(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('888.02').Totals[1].HasTransactions) ))

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('889.02').Totals!=null and 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('889.02').Totals[0].HasTransactions 

or
(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('889.02').Totals[1].HasTransactions) ))

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('707.02').Totals!=null and 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('707.02').Totals[0].HasTransactions 

or
(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('707.02').Totals[1].HasTransactions) ))

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('883.02').Totals!=null and 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('883.02').Totals[0].HasTransactions 

or
(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('883.02').Totals[1].HasTransactions) ))
or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('884.02').Totals!=null and 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('884.02').Totals[0].HasTransactions 

or
(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('884.02').Totals[1].HasTransactions) ))

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('885.02').Totals!=null and 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('885.02').Totals[0].HasTransactions 

or
(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('885.02').Totals[1].HasTransactions) ))

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('886.02').Totals!=null and 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('886.02').Totals[0].HasTransactions 

or
(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('886.02').Totals[1].HasTransactions) ))

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('887.02').Totals!=null and 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('887.02').Totals[0].HasTransactions 

or
(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('887.02').Totals[1].HasTransactions) ))

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('880.02').Totals!=null and 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('880.02').Totals[0].HasTransactions 

or
(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('880.02').Totals[1].HasTransactions) ))

or

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('881.02').Totals!=null and 

(reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('881.02').Totals[0].HasTransactions 

or
(reportHelper.HasPriorPeriod and
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubCode('881.02').Totals[1].HasTransactions) ))</variable>
							</variables>
							<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Included in the creditors are the following amounts due after more than five years:</para>
</add-to-body></template>
							<report-template version="12" name="Creditors due after more than five years " include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="CreditorsDueAfterMoreThanFiveYearsValues" page-break-before="False" keep-with-next-strength="0" template-guid="1852093c-7a3a-433d-bd95-ea7f04d02f92">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'CreditorsOver5Years', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('CreditorsDueOver5Yrs', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;After more than five years by instalments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('847', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('852', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem2add" pre="section1subsection1.AddItem(section1subsection1subsectionitem2)" />
    <var name="section1subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('866-868', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem3add" pre="section1subsection1.AddItem(section1subsection1subsectionitem3)" />
    <var name="section1subsection1subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('876-878', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem4add" pre="section1subsection1.AddItem(section1subsection1subsectionitem4)" />
    <var name="section1subsection1subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('896-898', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem5add" pre="section1subsection1.AddItem(section1subsection1subsectionitem5)" />
    <var name="section1subsection1subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('888.03', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem6add" pre="section1subsection1.AddItem(section1subsection1subsectionitem6)" />
    <var name="section1subsection1subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('889.03', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem7add" pre="section1subsection1.AddItem(section1subsection1subsectionitem7)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:InstalmentDebtsDueAfter5Years')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;After more than five years not by instalments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('848', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('857', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem2add" pre="section1subsection2.AddItem(section1subsection2subsectionitem2)" />
    <var name="section1subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('848', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem3add" pre="section1subsection2.AddItem(section1subsection2subsectionitem3)" />
    <var name="section1subsection2subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('853', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem4add" pre="section1subsection2.AddItem(section1subsection2subsectionitem4)" />
    <var name="section1subsection2subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('869-869', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem5add" pre="section1subsection2.AddItem(section1subsection2subsectionitem5)" />
    <var name="section1subsection2subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('879-879', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem6add" pre="section1subsection2.AddItem(section1subsection2subsectionitem6)" />
    <var name="section1subsection2subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('899-899', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem7add" pre="section1subsection2.AddItem(section1subsection2subsectionitem7)" />
    <var name="section1subsection2subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('888.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem8add" pre="section1subsection2.AddItem(section1subsection2subsectionitem8)" />
    <var name="section1subsection2subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('889.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem9add" pre="section1subsection2.AddItem(section1subsection2subsectionitem9)" />
    <var name="section1subsection2subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('707.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section1subsection2subsectionitem10add" pre="section1subsection2.AddItem(section1subsection2subsectionitem10)" />
    <var name="section1subsection2subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('883.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem11add" pre="section1subsection2.AddItem(section1subsection2subsectionitem11)" />
    <var name="section1subsection2subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('884.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem12add" pre="section1subsection2.AddItem(section1subsection2subsectionitem12)" />
    <var name="section1subsection2subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('885.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem13add" pre="section1subsection2.AddItem(section1subsection2subsectionitem13)" />
    <var name="section1subsection2subsectionitem14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('886.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem14add" pre="section1subsection2.AddItem(section1subsection2subsectionitem14)" />
    <var name="section1subsection2subsectionitem15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('887.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem15add" pre="section1subsection2.AddItem(section1subsection2subsectionitem15)" />
    <var name="section1subsection2subsectionitem16" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('880.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem16add" pre="section1subsection2.AddItem(section1subsection2subsectionitem16)" />
    <var name="section1subsection2subsectionitem17" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('881.02', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem17add" pre="section1subsection2.AddItem(section1subsection2subsectionitem17)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:Non-instalmentDebtsDueAfter5Years')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
						</report-template>
					</report-template>
					<report-template version="12" name="Obligations under finance leases and HP contracts" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="FRSSE = false and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange('840-844').HasTransactions" enabled="Conditional" section-name="FLHPObilgations" page-break-before="False" keep-with-next-strength="0" template-guid="4cd3359a-b031-44e6-ad3e-8e41f196222a">
						<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent" />
      <table-cell>
        <para para-alignment="Left" outer-top-border-clearance="5mm" outer-bottom-border-clearance="0mm" base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
        <para para-alignment="Left" outer-top-border-clearance="5mm" outer-bottom-border-clearance="0mm" base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">Amounts repayable:</para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
						<report-template version="12" name="Obligations under finance leases and HP contracts" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FLHPObilgationsValues" page-break-before="False" keep-with-next-strength="0" template-guid="4ded0dbb-1aa4-4b29-b063-93b2154e391c">
							<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'FinanceLeaseObligations', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BusinessSegmentsAssetDataHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('HPFLObligations', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;In one year or less on demand&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('840-844', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:ObligationsUnderFinanceLeaseHirePurchaseContractsWithinOneYear')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Between one and two years&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('890-892', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:ObligationsUnderFinanceLeasesHirePurchaseContractsBetweenOneToTwoYears')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Between two and five years&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('893-895', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:ObligationsUnderFinanceLeasesHirePurchaseContractsBetweenTwoToFiveYears')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;After more than five years by instalments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('896-898', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:ObligationsUnderFinanceLeasesHirePurchaseContractsAfterFiveYears')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;After more than five years not by instalments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('899-899', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:ObligationsUnderFinanceLeaseHirePurchaseContracts')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
						</report-template>
					</report-template>
				</report-template>
				<report-template version="12" name="Provisions" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange(900,900).HasTransactions or reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange(901,901).Totals[0].Value &lt; 0 or reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimarySubRange(902,902).HasTransactions" enabled="Conditional" section-name="Provisions" page-break-before="False" keep-with-next-strength="0" template-guid="6d05eb90-5152-44dc-955f-3e28e0a2e2ee">
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Provisions values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="(reportHelper.HasPriorPeriod and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&quot;901&quot;).Totals[0].Value&lt;=0)" enabled="Conditional" section-name="ProvisionsValues" page-break-before="False" keep-with-next-strength="0" template-guid="821fe688-4669-4214-af46-7329c005897c">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'Provisions', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetChartFilter(new string[] { '900-900' } )" />
    <var name="column2filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PensionContributions', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1, column2filter2 }, false, '&lt;para&gt;Pension contributions&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:ProvisionsClassesDimension=uk-gaap:ProvisionsForPensionsSimilarObligations')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:ProvisionsForLiabilitiesChargesHypercube')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetChartFilter(new string[] { '901-901' } )" />
    <var name="column3filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('DeferredTax', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1, column3filter2 }, false, '&lt;para&gt;Deferred tax&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:ProvisionsClassesDimension=uk-gaap:ProvisionsForDeferredTaxation')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:ProvisionsForLiabilitiesChargesHypercube')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4filter1" pre="newComputation.GetChartFilter(new string[] { '902-902' } )" />
    <var name="column4filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('OtherProvision', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column4filter1, column4filter2 }, false, '&lt;para&gt;Other provision&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column4XBRLDimensionsSet" pre="column4.SetDimensions('uk-gaap:ProvisionsClassesDimension=uk-gaap:OtherProvisions')" />
    <var name="column4XBRLHypercubeNameSet" pre="column4.SetHypercubeName('uk-gaap:ProvisionsForLiabilitiesChargesHypercube')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <var name="column5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableCalculationColumn.Create('Total', 'PensionContributions +&#xD;DeferredTax +&#xD;OtherProvision&#xD;&#xA;&#xD;&#xA;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', false, '&lt;para&gt;Total&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right')" />
    <var name="column5add" pre="smartTable.AddColumn(column5)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('BFwd', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.StartDate.Value.ToString(&amp;apos;d MMMM yyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Provision for pension contributions payable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('900.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Deferred tax&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('901.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other provision&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('902.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:ProvisionsForLiabilitiesCharges')" />
    <var name="section1XBRLPeriodSet" pre="section1.SetPeriod('StartCurrentPeriod')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Movement', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;charged/(credited)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; to the profit and loss account&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('901.05', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('900.05', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem2add" pre="section2subsection1.AddItem(section2subsection1subsectionitem2)" />
    <var name="section2subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('902.05', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem3add" pre="section2subsection1.AddItem(section2subsection1subsectionitem3)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:ProvisionsChargedCreditedToProfitLossAccountDuringPeriod')" />
    <var name="section2subsection1XBRLPeriodSet" pre="section2subsection1.SetPeriod('CurrentPeriod')" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Utilised during the &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('901.10', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('900.10', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem2add" pre="section2subsection2.AddItem(section2subsection2subsectionitem2)" />
    <var name="section2subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('902.10', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem3add" pre="section2subsection2.AddItem(section2subsection2subsectionitem3)" />
    <var name="section2subsection2XBRLConceptNameSet" pre="section2subsection2.SetConceptName('uk-gaap:ProvisionsUtilisedDuringPeriod')" />
    <var name="section2subsection2XBRLPeriodSet" pre="section2subsection2.SetPeriod('CurrentPeriod')" />
    <var name="section2subsection2XBRLReverseSignSet" pre="section2subsection2.SetReverseSign(true)" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('CFwd', '&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.EndDate.Value.ToString(&amp;apos;d MMMM yyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.Always, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section3item1" pre="section3.AddTotalItem(section1)" />
    <var name="section3item2" pre="section3.AddTotalItem(section2)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:ProvisionsForLiabilitiesCharges')" />
    <var name="section3XBRLPeriodSet" pre="section3.SetPeriod('EndCurrentPeriod')" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Provisions excluding deferred tax" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="(reportHelper.HasPriorPeriod and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&quot;901&quot;).Totals[0].Value&gt;0)" enabled="Conditional" section-name="ProvisionsExcludingDeferredTax" page-break-before="False" keep-with-next-strength="0" template-guid="6be3b3de-b9a9-45c4-a7df-86e4117150a6">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'Provisions', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetChartFilter(new string[] { '900-900' } )" />
    <var name="column2filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PensionContributions', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1, column2filter2 }, false, '&lt;para&gt;Pension contributions&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:ProvisionsClassesDimension=uk-gaap:ProvisionsForPensionsSimilarObligations')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:ProvisionsForLiabilitiesChargesHypercube')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetChartFilter(new string[] { '902-902' } )" />
    <var name="column3filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('OtherProvision', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1, column3filter2 }, false, '&lt;para&gt;Other provision&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:ProvisionsClassesDimension=uk-gaap:OtherProvisions')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:ProvisionsForLiabilitiesChargesHypercube')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableCalculationColumn.Create('Total', 'PensionContributions +&#xD;&#xD;OtherProvision&#xD;&#xA;&#xD;&#xA;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', false, '&lt;para&gt;Total&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('BFwd', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.StartDate.Value.ToString(&amp;apos;d MMMM yyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Provision for pension contributions payable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('900.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Deferred tax&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('901.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other provision&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('902.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:ProvisionsForLiabilitiesCharges')" />
    <var name="section1XBRLPeriodSet" pre="section1.SetPeriod('StartCurrentPeriod')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Movement', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;charged/(credited)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; to the profit and loss account&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('900.05', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('902.05', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem2add" pre="section2subsection1.AddItem(section2subsection1subsectionitem2)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:ProvisionsChargedCreditedToProfitLossAccountDuringPeriod')" />
    <var name="section2subsection1XBRLPeriodSet" pre="section2subsection1.SetPeriod('CurrentPeriod')" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Utilised during the &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('900.10', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('902.10', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem2add" pre="section2subsection2.AddItem(section2subsection2subsectionitem2)" />
    <var name="section2subsection2XBRLConceptNameSet" pre="section2subsection2.SetConceptName('uk-gaap:ProvisionsUtilisedDuringPeriod')" />
    <var name="section2subsection2XBRLPeriodSet" pre="section2subsection2.SetPeriod('CurrentPeriod')" />
    <var name="section2subsection2XBRLReverseSignSet" pre="section2subsection2.SetReverseSign(true)" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('CFwd', '&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.EndDate.Value.ToString(&amp;apos;d MMMM yyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.Always, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section3item1" pre="section3.AddTotalItem(section1)" />
    <var name="section3item2" pre="section3.AddTotalItem(section2)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:ProvisionsForLiabilitiesCharges')" />
    <var name="section3XBRLPeriodSet" pre="section3.SetPeriod('EndCurrentPeriod')" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Analysis of deferred tax" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="(reportHelper.HasPriorPeriod and reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&quot;901&quot;).Totals[0].Value&lt;0)" enabled="Conditional" section-name="AnalysisOfDeferredTaxProvision" page-break-before="False" keep-with-next-strength="0" template-guid="737c5933-7b76-49a4-8d93-baf2096356fa">
						<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
						<report-template version="12" name="Deferred tax analysis values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="Deferred tax analysis values" page-break-before="False" keep-with-next-strength="0" template-guid="78409d4b-83f7-4363-87ff-00c7c4b21a95">
							<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'DeferredTaxAssetAnalysis', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('DeferredTaxAssetAnalysis', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Difference between accumulated depreciation and amortisation and capital allowances&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|DeferredTax|DeferredTax|Analysis|Rows|*:filter[XBRLDefinition|Current Period=Difference between accumulated depreciation and amortisation and capital allowances]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:DifferenceBetweenAccumulatedDepreciationAmortisationCapitalAllowances')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other timing differences&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|DeferredTax|DeferredTax|Analysis|Rows|*:filter[XBRLDefinition|Current Period=Other timing differences]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:OtherTimingDifferences')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Tax losses available&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|DeferredTax|DeferredTax|Analysis|Rows|*:filter[XBRLDefinition|Current Period=Tax losses available]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:TaxLossesAvailable')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:DeferredTaxLiability')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
						</report-template>
					</report-template>
				</report-template>
				<report-template version="12" name="Share capital" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|CompanyStatus|CompanyStatus|CompanyStatus|CompanyType|Current Period&quot;)[0].Value='Limited by share capital'" enabled="Conditional" section-name="ShareCapital" page-break-before="False" keep-with-next-strength="0" template-guid="f2085b85-10c5-471b-9ac0-979957a79f25">
					<variables>
						<variable name="list">reporting.queries.client.lookupaccountingperioddata("Disclosure|General|ShareCapital|AllottedShareCapital|AllottedShareCapital|Rows|*")</variable>
					</variables>
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Allotted, called up and fully paid" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="AlottedCalledUpAndFullyPaid" page-break-before="False" keep-with-next-strength="0" template-guid="18b93278-2cc8-4243-a20b-b418cfa50172">
						<template><add-to-body>
  <para para-alignment="Full" base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Allotted, called up and fully paid shares</para>
  <section condition="list[0].HasValue = false" toggle-expand-on-click="true" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|General|ShareCapital')">
    <para base-style="Link To Data">
		Share details
	</para>
  </section>
  <section condition="list[0].HasValue" toggle-expand-on-click="false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|General|ShareCapital')">
    <table base-style="Table Text">
      <!-- Column widths -->
      <column-details column-number="1" free-space="1" />
      <column-details column-number="2" width="20mm" />
      <column-details column-number="3" width="20mm" />
      <column-details column-number="4" width="20mm" condition="reportHelper.HasPriorPeriod" />
      <column-details column-number="5" width="20mm" condition="reportHelper.HasPriorPeriod" />
      <!-- Date Column Headers Row -->
      <table-row base-style="Table Column Heading">
        <table-cell>
        </table-cell>
        <table-cell number-columns-spanned="2" align="centre-top">
          <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
            <data para-alignment="Centre">if reportHelper.IsAnnual then reportHelper.CurrentPeriod.EndDate.Value.ToString('yyyy')

else

reportHelper.CurrentPeriod.EndDate.Value.ToString('d MMMM yyyy')
	</data>
            <inline para-alignment="Centre">
            </inline>
          </para>
        </table-cell>
        <table-cell number-columns-spanned="2" align="centre-top">
          <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
            <data para-alignment="Centre">if reportHelper.IsAnnual then reportHelper.ComparativePeriod(1).EndDate.Value.ToString('yyyy')

else

reportHelper.ComparativePeriod(1).EndDate.Value.ToString('d MMMM yyyy')
	</data>
            <inline para-alignment="Centre">
            </inline>
          </para>
        </table-cell>
      </table-row>
      <!-- No. and currency symbol header row -->
      <table-row base-style="Table Column Heading">
        <table-cell>
        </table-cell>
        <table-cell>
          <para para-alignment="Centre" outer-bottom-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">No. <ws /><inline condition="reportHelper.StatutoryNoteScaling = 1000">000</inline><inline condition="reportHelper.StatutoryNoteScaling = 1000000	">000 000</inline></para>
        </table-cell>
        <table-cell>
          <para para-alignment="Centre" outer-bottom-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
            <data>
				reportHelper.StatutoryNoteScalingHeader
			</data>
          </para>
        </table-cell>
        <table-cell>
          <para para-alignment="Centre" outer-bottom-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">No. <ws /><inline condition="reportHelper.StatutoryNoteScaling = 1000">000</inline><inline condition="reportHelper.StatutoryNoteScaling = 1000000	">000 000</inline></para>
        </table-cell>
        <table-cell>
          <para para-alignment="Centre" outer-bottom-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
            <data>reportHelper.StatutoryNoteScalingHeader</data>
          </para>
        </table-cell>
      </table-row>
      <!-- Individual shares rows-->
      <table-row-iterator iterate-over="list" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
        <var name="currentItem" init="0" pre="currentItem + 1" />
        <var name="totalNo" init="0m" pre="Convert.ToDecimal(reporting.queries.client.lookupaccountingperioddata(item, '*|NumberSharesAllotted|Current Period')[0].Value) + totalNo" />
        <var name="totalValue" init="0m" pre="Convert.ToDecimal(reporting.queries.client.lookupaccountingperioddata(item, '*|AllottedTotal|Current Period')[0].Value) + totalValue" />
        <var name="totalNoPrior" init="0m" pre="Convert.ToDecimal(reporting.queries.client.lookupaccountingperioddata(item, '*|NumberSharesAllotted|Prior Period')[0].Value) + totalNoPrior" />
        <var name="totalValuePrior" init="0m" pre="Convert.ToDecimal(reporting.queries.client.lookupaccountingperioddata(item, '*|AllottedTotal|Prior Period')[0].Value) + totalValuePrior" />
        <!-- XBRL variables to assign the correct dimension to each row-->
        <var name="ShareClass" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|XBRLShareClass|Current Period')[0].Value" />
        <var name="XBRLShareClass" pre="&#xD;&#xA;		if ShareClass = 'Ordinary share class 1' then 'uk-bus:OrdinaryShareClass1' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 2' then 'uk-bus:OrdinaryShareClass2' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 3' then 'uk-bus:OrdinaryShareClass3' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 4' then 'uk-bus:OrdinaryShareClass4' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 5' then 'uk-bus:OrdinaryShareClass5' else&#xD;&#xA;		if ShareClass = 'Preference share class 1' then 'uk-bus:PreferenceShareClass1' else&#xD;&#xA;		if ShareClass = 'Preference share class 2' then 'uk-bus:PreferenceShareClass2' else&#xD;&#xA;		if ShareClass = 'Preference share class 3' then 'uk-bus:PreferenceShareClass3' else&#xD;&#xA;		if ShareClass = 'Preference share class 4' then 'uk-bus:PreferenceShareClass4' else&#xD;&#xA;		if ShareClass = 'Preference share class 5' then 'uk-bus:PreferenceShareClass5' else&#xD;&#xA;		'uk-bus:AllShareClassesDefault'" />
        <var name="ShareType" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|XBRLShareType|Current Period')[0].Value" />
        <var name="XBRLShareType" pre="&#xD;&#xA;		if ShareType = 'Not applicable' then 'uk-bus:AllShareTypesDefault' else&#xD;&#xA;		if ShareType = 'Cumulative' then 'uk-bus:CumulativeShares' else&#xD;&#xA;		if ShareType = 'Cumulative and redeemable shares' then 'uk-bus:CumulativeRedeemableShares' else&#xD;&#xA;		if ShareType = 'Cumulative and non-redeemable shares' then 'uk-bus:CumulativeNon-redeemableShares' else&#xD;&#xA;		if ShareType = 'Non-cumulative' then 'uk-bus:Non-cumulativeShares' else&#xD;&#xA;		if ShareType = 'Non-cumulative and redeemable shares' then 'uk-bus:Non-cumulativeNon-redeemableShares' else&#xD;&#xA;		if ShareType = 'Non-cumulative and non-redeemable shares' then 'uk-bus:Non-cumulativeNon-redeemableShares' else&#xD;&#xA;		if ShareType = 'Other share types' then 'uk-bus:OtherShareTypes' else&#xD;&#xA;		'uk-bus:AllShareTypesDefault'" />
        <table-row xbrl-hypercube="uk-bus:SharesHypercube" xbrl-dimensions="uk-bus:ShareClassesDimension= XBRLShareClass,uk-bus:ShareTypesDimension=XBRLShareType">
          <!-- Description and nominal value column-->
          <table-cell align="bottom-left">
            <para para-alignment="Full" currency-format="{cur}#,#0.00;({cur}#,#0.00);Nil" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
              <inline xbrl-period="CurrentPeriod">
                <inline xbrl-concept="uk-bus:DescriptionShareType" xbrl-period="CurrentPeriod" xbrl-invert-sign="True">
                  <data>reporting.queries.client.lookupaccountingperioddata(item, '*|Description|Current Period')[0].Value</data>
                </inline>
              </inline>
              <ws /> of <ws /><inline xbrl-concept="uk-gaap:ParValueShare" xbrl-period="CurrentPeriod" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|NominalValue|Current Period')[0].Value</data></inline><ws /> each</para>
          </table-cell>
          <!-- Current period number column -->
          <table-cell>
            <para para-alignment="right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
              <inline xbrl-concept="uk-gaap:NumberSharesAllotted" xbrl-period="EndCurrentPeriod">
                <data>reporting.queries.client.lookupaccountingperioddata(item, '*|NumberSharesAllotted|Current Period')[0].Value  / reportHelper.StatutoryNoteRounding</data>
              </inline>
            </para>
          </table-cell>
          <!-- Current period total value column -->
          <table-cell align="bottom-right">
            <para para-alignment="right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
              <inline xbrl-concept="uk-gaap:ValueSharesAllotted" xbrl-period="EndCurrentPeriod">
                <data>reporting.queries.client.lookupaccountingperioddata(item, '*|AllottedTotal|Current Period')[0].Value / reportHelper.StatutoryNoteRounding</data>
              </inline>
            </para>
          </table-cell>
          <!-- Prior period number column -->
          <table-cell align="bottom-right">
            <para para-alignment="right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
              <inline xbrl-concept="uk-gaap:NumberSharesAllotted" xbrl-period="EndPriorPeriod">
                <data>reporting.queries.client.lookupaccountingperioddata(item, '*|NumberSharesAllotted|Prior Period')[0].Value  / reportHelper.StatutoryNoteRounding</data>
              </inline>
            </para>
          </table-cell>
          <!-- Prior period total value column-->
          <table-cell align="bottom-right">
            <para para-alignment="right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
              <inline xbrl-concept="uk-gaap:ValueSharesAllotted" xbrl-period="EndPriorPeriod">
                <data>reporting.queries.client.lookupaccountingperioddata(item, '*|AllottedTotal|Prior Period')[0].Value / reportHelper.StatutoryNoteRounding</data>
              </inline>
            </para>
          </table-cell>
        </table-row>
        <!-- Total Row when more than one row -->
        <table-row condition="currentItem = list.Count and list.Count &gt; 1">
          <table-cell>
          </table-cell>
          <!-- Total No. -->
          <table-cell>
            <para xbrl-concept="uk-gaap:NumberSharesAllotted" xbrl-period="EndCurrentPeriod" top-border-style="line" top-border-size="0.5pt" bottom-border-style="doubleline" bottom-border-size="2pt" currency-format="#,#" para-alignment="right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
              <data>
					totalNo  / reportHelper.StatutoryNoteRounding
				</data>
            </para>
          </table-cell>
          <!-- Total Value -->
          <table-cell>
            <para xbrl-concept="uk-gaap:ValueSharesAllotted" xbrl-period="EndCurrentPeriod" outer-left-border-clearance="2mm" top-border-style="line" top-border-size="0.5pt" bottom-border-style="doubleline" bottom-border-size="2pt" currency-format="#,#" para-alignment="right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
              <data>
						totalValue  / reportHelper.StatutoryNoteRounding
					</data>
            </para>
          </table-cell>
          <!-- Total No. Prior -->
          <table-cell>
            <para xbrl-concept="uk-gaap:NumberSharesAllotted" xbrl-period="EndPriorPeriod" outer-left-border-clearance="2mm" top-border-style="line" top-border-size="0.5pt" bottom-border-style="doubleline" bottom-border-size="2pt" currency-format="#,#" para-alignment="right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
              <data>
	totalNoPrior  / reportHelper.StatutoryNoteRounding
</data>
            </para>
          </table-cell>
          <!-- Total Value Prior -->
          <table-cell>
            <para xbrl-concept="uk-gaap:ValueSharesAllotted" xbrl-period="EndPriorPeriod" outer-left-border-clearance="2mm" top-border-style="line" top-border-size="0.5pt" bottom-border-style="doubleline" bottom-border-size="2pt" currency-format="#,#" para-alignment="right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
              <data>
				totalValuePrior  / reportHelper.StatutoryNoteRounding
			</data>
            </para>
          </table-cell>
        </table-row>
      </table-row-iterator>
      <!-- Double underlines for when one row only -->
      <table-row condition="list.Count =1">
        <table-cell>
        </table-cell>
        <!-- Total No. -->
        <table-cell>
          <para bottom-border-style="doubleline" bottom-border-size="2pt" currency-format="#,#" para-alignment="right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
          </para>
        </table-cell>
        <!-- Total Value -->
        <table-cell>
          <para outer-left-border-clearance="2mm" bottom-border-style="doubleline" bottom-border-size="2pt" currency-format="#,#" para-alignment="right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
          </para>
        </table-cell>
        <!-- Total No. Prior -->
        <table-cell>
          <para outer-left-border-clearance="2mm" bottom-border-style="doubleline" bottom-border-size="2pt" currency-format="#,#" para-alignment="right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
          </para>
        </table-cell>
        <!-- Total Value Prior -->
        <table-cell>
          <para outer-left-border-clearance="2mm" bottom-border-style="doubleline" bottom-border-size="2pt" currency-format="#,#" para-alignment="right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
          </para>
        </table-cell>
      </table-row>
    </table>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="New shares allotted" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="list[0].HasValue" enabled="Conditional" section-name="NewSharesIssued" page-break-before="False" keep-with-next-strength="0" template-guid="9e30fe16-c910-4cc8-9c1a-b45812641e9a">
						<variables>
							<variable name="list">reporting.queries.client.lookupaccountingperioddata("Disclosure|General|ShareCapital|SharesAllotted|SharesAllotted|Rows|*")</variable>
						</variables>
						<template><add-to-body>
  <para para-alignment="Full" base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">New shares allotted</para>
  <section condition="list[0].HasValue=false" toggle-expand-on-click="true" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|General|ShareCapital')">
    <para base-style="Link To Data">
		New shares allotted
	</para>
  </section>
  <section condition="list[0].HasValue" toggle-expand-on-click="false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|General|ShareCapital')">
    <table>
      <table-row-iterator iterate-over="list" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
        <var name="ShareClass" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|XBRLShareClass|Current Period')[0].Value" />
        <var name="XBRLShareClass" pre="&#xD;&#xA;		if ShareClass = 'Ordinary share class 1' then 'uk-bus:OrdinaryShareClass1' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 2' then 'uk-bus:OrdinaryShareClass2' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 3' then 'uk-bus:OrdinaryShareClass3' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 4' then 'uk-bus:OrdinaryShareClass4' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 5' then 'uk-bus:OrdinaryShareClass5' else&#xD;&#xA;		if ShareClass = 'Preference share class 1' then 'uk-bus:PreferenceShareClass1' else&#xD;&#xA;		if ShareClass = 'Preference share class 2' then 'uk-bus:PreferenceShareClass2' else&#xD;&#xA;		if ShareClass = 'Preference share class 3' then 'uk-bus:PreferenceShareClass3' else&#xD;&#xA;		if ShareClass = 'Preference share class 4' then 'uk-bus:PreferenceShareClass4' else&#xD;&#xA;		if ShareClass = 'Preference share class 5' then 'uk-bus:PreferenceShareClass5' else&#xD;&#xA;		'uk-bus:AllShareClassesDefault'" />
        <var name="ShareType" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|XBRLShareType|Current Period')[0].Value" />
        <var name="XBRLShareType" pre="&#xD;&#xA;		if ShareType = 'Not applicable' then 'uk-bus:AllShareTypesDefault' else&#xD;&#xA;		if ShareType = 'Cumulative' then 'uk-bus:CumulativeShares' else&#xD;&#xA;		if ShareType = 'Cumulative and redeemable shares' then 'uk-bus:CumulativeRedeemableShares' else&#xD;&#xA;		if ShareType = 'Cumulative and non-redeemable shares' then 'uk-bus:CumulativeNon-redeemableShares' else&#xD;&#xA;		if ShareType = 'Non-cumulative' then 'uk-bus:Non-cumulativeShares' else&#xD;&#xA;		if ShareType = 'Non-cumulative and redeemable shares' then 'uk-bus:Non-cumulativeNon-redeemableShares' else&#xD;&#xA;		if ShareType = 'Non-cumulative and non-redeemable shares' then 'uk-bus:Non-cumulativeNon-redeemableShares' else&#xD;&#xA;		if ShareType = 'Other share types' then 'uk-bus:OtherShareTypes' else&#xD;&#xA;		'uk-bus:AllShareTypesDefault'" />
        <table-row>
          <table-cell>
            <para para-alignment="Full" xbrl-hypercube="uk-bus:SharesHypercube" xbrl-dimensions="uk-bus:ShareClassesDimension=XBRLShareClass,uk-bus:ShareTypesDimension=XBRLShareType" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:IndividualIssueSharesGrouping">During the <ws /><data>
					reportHelper.CurrentPeriod.YearPeriod
				</data><ws /><inline xbrl-concept="uk-gaap:NumberSharesIssued" xbrl-period="CurrentPeriod"><data base-style="Inline Number">reporting.queries.client.lookupaccountingperioddata(item, '*|NumberShares|Current Period')[0].Value</data></inline><ws /><data> reporting.queries.client.lookupaccountingperioddata(item, '*|Description|Current Period')[0].Value</data><ws /> having an aggregate nominal value of <ws /><inline xbrl-concept="uk-gaap:NominalValueSharesIssued" xbrl-period="CurrentPeriod"><data>
	reporting.queries.client.lookupaccountingperioddata(item, '*|AggregateNominalValue|Current Period')[0].Value
</data></inline><ws /> were allotted for an aggregate consideration of <ws /><inline xbrl-concept="uk-gaap:ConsiderationForSharesIssued" xbrl-period="CurrentPeriod"><data base-style="Inline Currency">
					reporting.queries.client.lookupaccountingperioddata(item, '*|Consideration|Current Period')[0].Value
				</data></inline>
.<inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|Reason|Current Period')[0].HasValue"><ws /><inline xbrl-concept="uk-gaap:DescriptionOrReasonsForShareIssue" xbrl-period="CurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|Reason|Current Period')[0].Value</data></inline></inline>
.</para>
          </table-cell>
        </table-row>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Redeemable preference shares" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="list[0].HasValue" enabled="Conditional" section-name="RedeemablePreferenceShares" page-break-before="False" keep-with-next-strength="0" template-guid="1d6ca7a9-2da5-491a-8ac5-aea0bfdd4738">
						<variables>
							<variable name="list">reporting.queries.client.lookupaccountingperioddata("Disclosure|General|ShareCapital|RedeemablePreferenceShares|RedeemablePreferenceShares|*")</variable>
						</variables>
						<template><add-to-body>
  <para base-style="Title" para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
Redeemable preference shares
</para>
  <section condition="list[0].HasValue = false" toggle-expand-on-click="true" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|General|ShareCapital')">
    <para base-style="Link To Data">
		Redeemable preference shares
	</para>
  </section>
  <section condition="list[0].HasValue" toggle-expand-on-click="false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|General|ShareCapital')">
    <table>
      <table-row-iterator iterate-over="list" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
        <var name="ShareClass" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|RedeemablePreferenceShare|RedeemablePreferenceShare|XBRLShareClass|Current Period')[0].Value" />
        <var name="XBRLShareClass" pre="&#xD;&#xA;		if ShareClass = 'Ordinary share class 1' then 'uk-bus:OrdinaryShareClass1' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 2' then 'uk-bus:OrdinaryShareClass2' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 3' then 'uk-bus:OrdinaryShareClass3' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 4' then 'uk-bus:OrdinaryShareClass4' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 5' then 'uk-bus:OrdinaryShareClass5' else&#xD;&#xA;		if ShareClass = 'Preference share class 1' then 'uk-bus:PreferenceShareClass1' else&#xD;&#xA;		if ShareClass = 'Preference share class 2' then 'uk-bus:PreferenceShareClass2' else&#xD;&#xA;		if ShareClass = 'Preference share class 3' then 'uk-bus:PreferenceShareClass3' else&#xD;&#xA;		if ShareClass = 'Preference share class 4' then 'uk-bus:PreferenceShareClass4' else&#xD;&#xA;		if ShareClass = 'Preference share class 5' then 'uk-bus:PreferenceShareClass5' else&#xD;&#xA;		'uk-bus:AllShareClassesDefault'" />
        <var name="ShareType" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|RedeemablePreferenceShare|RedeemablePreferenceShare|XBRLShareType|Current Period')[0].Value" />
        <var name="XBRLShareType" pre="&#xD;&#xA;		if ShareType = 'Not applicable' then 'uk-bus:AllShareTypesDefault' else&#xD;&#xA;		if ShareType = 'Cumulative' then 'uk-bus:CumulativeShares' else&#xD;&#xA;		if ShareType = 'Cumulative and redeemable shares' then 'uk-bus:CumulativeRedeemableShares' else&#xD;&#xA;		if ShareType = 'Cumulative and non-redeemable shares' then 'uk-bus:CumulativeNon-redeemableShares' else&#xD;&#xA;		if ShareType = 'Non-cumulative' then 'uk-bus:Non-cumulativeShares' else&#xD;&#xA;		if ShareType = 'Non-cumulative and redeemable shares' then 'uk-bus:Non-cumulativeNon-redeemableShares' else&#xD;&#xA;		if ShareType = 'Non-cumulative and non-redeemable shares' then 'uk-bus:Non-cumulativeNon-redeemableShares' else&#xD;&#xA;		if ShareType = 'Other share types' then 'uk-bus:OtherShareTypes' else&#xD;&#xA;		'uk-bus:AllShareTypesDefault'" />
        <table-row>
          <table-cell>
            <para para-alignment="Full" xbrl-hypercube="uk-bus:SharesHypercube" xbrl-dimensions="uk-bus:ShareClassesDimension=XBRLShareClass,uk-bus:ShareTypesDimension=XBRLShareType" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The <ws /><inline xbrl-period="CurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, "*|RedeemablePreferenceShare|RedeemablePreferenceShare|Description|Current Period")[0].Value</data></inline><ws /> are <ws /><inline xbrl-concept="uk-gaap:StatementOnWhetherRedemptionMandatoryCompanyOptionOrShareholderOption" xbrl-period="CurrentPeriod"><inline condition="reporting.queries.client.lookupaccountingperioddata(item, &quot;*|RedeemablePreferenceShare|RedeemablePreferenceShare|RedemptionOptions|Current Period&quot;)[0].Value = 'Mandatory'">redeemable</inline><inline condition="reporting.queries.client.lookupaccountingperioddata(item, &quot;*|RedeemablePreferenceShare|RedeemablePreferenceShare|RedemptionOptions|Current Period&quot;)[0].Value = 'Option of the company'">redeemable at the option of the company</inline><inline condition="reporting.queries.client.lookupaccountingperioddata(item, &quot;*|RedeemablePreferenceShare|RedeemablePreferenceShare|RedemptionOptions|Current Period&quot;)[0].Value = 'Option of the holder'">redeemable at the option of the holder</inline><inline condition="reporting.queries.client.lookupaccountingperioddata(item, &quot;*|RedeemablePreferenceShare|RedeemablePreferenceShare|RedemptionOptions|Current Period&quot;)[0].Value = 'Option of the company or holder'">redeemable at the option of the company or holder</inline></inline><inline condition="reporting.queries.client.lookupaccountingperioddata(item, &quot;*|RedeemablePreferenceShare|RedeemablePreferenceShare|EarliestDate|Current Period&quot;)[0].HasValue&#xD;&#xA; and &#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(item, &quot;*|RedeemablePreferenceShare|RedeemablePreferenceShare|LatestDate|Current Period&quot;)[0].HasValue"><ws /><inline condition="(reporting.queries.client.lookupaccountingperioddata(item, &quot;*|RedeemablePreferenceShare|RedeemablePreferenceShare|EarliestDate|Current Period&quot;)[0].HasValue and reporting.queries.client.lookupaccountingperioddata(item, &quot;*|RedeemablePreferenceShare|RedeemablePreferenceShare|LatestDate|Current Period&quot;)[0].HasValue = false) or (reporting.queries.client.lookupaccountingperioddata(item, &quot;*|RedeemablePreferenceShare|RedeemablePreferenceShare|EarliestDate|Current Period&quot;)[0].Value = reporting.queries.client.lookupaccountingperioddata(item, &quot;*|RedeemablePreferenceShare|RedeemablePreferenceShare|LatestDate|Current Period&quot;)[0].Value)">on <ws /><inline xbrl-concept="uk-gaap:DefiniteRedemptionDateRedeemablePreferenceShare" xbrl-period="EndCurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, "*|RedeemablePreferenceShare|RedeemablePreferenceShare|EarliestDate|Current Period")[0].Value</data></inline></inline><inline condition="reporting.queries.client.lookupaccountingperioddata(item, &quot;*|RedeemablePreferenceShare|RedeemablePreferenceShare|EarliestDate|Current Period&quot;)[0].Value != reporting.queries.client.lookupaccountingperioddata(item, &quot;*|RedeemablePreferenceShare|RedeemablePreferenceShare|LatestDate|Current Period&quot;)[0].Value">between <ws /><inline xbrl-concept="uk-gaap:EarliestRedemptionDateRedeemablePreferenceShare" xbrl-period="EndCurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, "*|RedeemablePreferenceShare|RedeemablePreferenceShare|EarliestDate|Current Period")[0].Value</data></inline><ws /> and <ws /><inline xbrl-concept="uk-gaap:DefiniteRedemptionDateRedeemablePreferenceShare" xbrl-period="EndCurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, "*|RedeemablePreferenceShare|RedeemablePreferenceShare|LatestDate|Current Period")[0].Value</data></inline></inline></inline>
. They are redeemable at <ws /><inline xbrl-concept="uk-gaap:RedemptionValueRedeemablePreferenceShare" xbrl-period="EndCurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, "*|RedeemablePreferenceShare|RedeemablePreferenceShare|RedemptionValue|Current Period")[0].Value</data></inline><ws /> per share and <ws /><inline xbrl-concept="uk-gaap:DescriptionRightsToVotes" xbrl-period="CurrentPeriod">carry <ws /><inline condition="reporting.queries.client.lookupaccountingperioddata(item, &quot;*|RedeemablePreferenceShare|RedeemablePreferenceShare|VotingRights|Current Period&quot;)[0].Value = 'No'">no voting rights</inline><data>reporting.queries.client.lookupaccountingperioddata(item, "*|RedeemablePreferenceShare|RedeemablePreferenceShare|VotingRightsDetails|Current Period")[0].Value</data></inline>
.<inline condition="reporting.queries.client.lookupaccountingperioddata(item, &quot;*|RedeemablePreferenceShare|RedeemablePreferenceShare|RightsOnWindingUp|Current Period&quot;)[0].HasValue"><ws /><inline xbrl-concept="uk-gaap:DescriptionRightsOnWindingUpIncludingPriorityAmounts" xbrl-period="CurrentPeriod">On a winding up of the company the holders of the shares have a right to receive <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, "*|RedeemablePreferenceShare|RedeemablePreferenceShare|RightsOnWindingUp|Current Period")[0].Value</data></inline>
.</inline></para>
          </table-cell>
        </table-row>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Purchase of own shares" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|PurchaseOwnShares|*&quot;)[0].HasValue or (reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|OwnShares|OwnSharesHeld|MaximumNumberOwnSharesHeld|Current Period&quot;)[0].HasValue) or (reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|OwnShares|DisposalOwnShares|DisposalOwnShares|*&quot;)[0].HasValue) or (reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|MaximumNumberShares|Current Period&quot;)[0].HasValue or reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|MaximumNominalValue|Current Period&quot;)[0].HasValue)" enabled="Conditional" section-name="OwnSharesNotes" page-break-before="False" keep-with-next-strength="0" template-guid="648db42e-f9b0-4bc1-b17e-91b332599197">
						<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
						<report-template version="12" name="Purchase of own shares" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|PurchaseOwnShares|*&quot;)[0].HasValue" enabled="Conditional" section-name="PurchaseOfOwnSharesNotes" page-break-before="False" keep-with-next-strength="0" template-guid="44813796-c90f-4cd4-94d5-c9ea34dc4b89">
							<template><add-to-body>
  <para toggle-expand-on-click="true" condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|PurchaseOwnShares|*')[0].HasValue=false" base-style="Link To Data" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|OwnShares')">
	Purchase of own shares
		
	</para>
  <section condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|PurchaseOwnShares|*')[0].HasValue" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|OwnShares')">
    <var name="Purchase" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|PurchaseOwnShares|*')" />
    <iterator condition="Purchase[0].HasValue" iterate-over="Purchase" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
      <var name="ShareClass" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|PurchaseOwnShares|PurchaseOwnShares|XBRLShareClass|Current Period')[0].Value" />
      <var name="XBRLShareClass" pre="&#xD;&#xA;		if ShareClass = 'Ordinary share class 1' then 'uk-bus:OrdinaryShareClass1' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 2' then 'uk-bus:OrdinaryShareClass2' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 3' then 'uk-bus:OrdinaryShareClass3' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 4' then 'uk-bus:OrdinaryShareClass4' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 5' then 'uk-bus:OrdinaryShareClass5' else&#xD;&#xA;		if ShareClass = 'Preference share class 1' then 'uk-bus:PreferenceShareClass1' else&#xD;&#xA;		if ShareClass = 'Preference share class 2' then 'uk-bus:PreferenceShareClass2' else&#xD;&#xA;		if ShareClass = 'Preference share class 3' then 'uk-bus:PreferenceShareClass3' else&#xD;&#xA;		if ShareClass = 'Preference share class 4' then 'uk-bus:PreferenceShareClass4' else&#xD;&#xA;		if ShareClass = 'Preference share class 5' then 'uk-bus:PreferenceShareClass5' else&#xD;&#xA;		'uk-bus:AllShareClassesDefault'" />
      <var name="ShareType" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|PurchaseOwnShares|PurchaseOwnShares|XBRLShareType|Current Period')[0].Value" />
      <var name="XBRLShareType" pre="&#xD;&#xA;		if ShareType = 'Not applicable' then 'uk-bus:AllShareTypesDefault' else&#xD;&#xA;		if ShareType = 'Cumulative' then 'uk-bus:CumulativeShares' else&#xD;&#xA;		if ShareType = 'Cumulative and redeemable shares' then 'uk-bus:CumulativeRedeemableShares' else&#xD;&#xA;		if ShareType = 'Cumulative and non-redeemable shares' then 'uk-bus:CumulativeNon-redeemableShares' else&#xD;&#xA;		if ShareType = 'Non-cumulative' then 'uk-bus:Non-cumulativeShares' else&#xD;&#xA;		if ShareType = 'Non-cumulative and redeemable shares' then 'uk-bus:Non-cumulativeNon-redeemableShares' else&#xD;&#xA;		if ShareType = 'Non-cumulative and non-redeemable shares' then 'uk-bus:Non-cumulativeNon-redeemableShares' else&#xD;&#xA;		if ShareType = 'Other share types' then 'uk-bus:OtherShareTypes' else&#xD;&#xA;		'uk-bus:AllShareTypesDefault'" />
      <para xbrl-hypercube="uk-bus:SharesHypercube" xbrl-dimensions="uk-bus:ShareClassesDimension=XBRLShareClass,uk-bus:ShareTypesDimension=XBRLShareType" para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">During the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> the company purchased <ws /><inline xbrl-concept="uk-direp:NumberOwnSharesPurchased" xbrl-period="CurrentPeriod"><data base-style="Inline Number">reporting.queries.client.lookupaccountingperioddata(item, '*|PurchaseOwnShares|PurchaseOwnShares|NumberShares|Current Period')[0].Value</data></inline><ws /> of its own <ws /><inline xbrl-period="CurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|PurchaseOwnShares|PurchaseOwnShares|Description|Current Period')[0].Value</data></inline><ws /> at a nominal value of <ws /><inline xbrl-concept="uk-direp:NominalValueOwnSharesPurchased" xbrl-period="CurrentPeriod" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|PurchaseOwnShares|PurchaseOwnShares|NominalValue|Current Period')[0].Value</data></inline>
. The <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, '*|PurchaseOwnShares|PurchaseOwnShares|Description|Current Period')[0].Value</data><ws /> were purchased for a consideration of <ws /><inline xbrl-concept="uk-direp:NetConsiderationPaidForOwnShares" xbrl-period="CurrentPeriod" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|PurchaseOwnShares|PurchaseOwnShares|Consideration|Current Period')[0].Value</data></inline><ws /> and represent <ws /><inline xbrl-concept="uk-direp:PercentageCalled-upShareCapitalRepresentedByPurchasesDuringPeriod" xbrl-period="CurrentPeriod" xbrl-scaling="0"><data base-style="Percentage">reporting.queries.client.lookupaccountingperioddata(item, '*|PurchaseOwnShares|PurchaseOwnShares|Percentage|Current Period')[0].Value</data></inline><inline base-style="Percentage"><ws /> of the called up share capital of that class of share.</inline><ws /><ws /><inline xbrl-concept="uk-direp:DescriptionReasonsForPurchaseOwnShares" xbrl-period="CurrentPeriod" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|PurchaseOwnShares|PurchaseOwnShares|Reason|Current Period')[0].Value</data></inline></para>
    </iterator>
  </section>
</add-to-body></template>
						</report-template>
						<report-template version="12" name="Disposal of own shares" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|OwnShares|DisposalOwnShares|DisposalOwnShares|*&quot;)[0].HasValue" enabled="Conditional" section-name="DisposalOfOwnSharesNotes" page-break-before="False" keep-with-next-strength="0" template-guid="428a2391-73a4-4d6b-9cca-ce77c48f39f9">
							<template><add-to-body>
  <para base-style="Link To Data" toggle-expand-on-click="true" condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|OwnShares|DisposalOwnShares|DisposalOwnShares|*')[0].HasValue=false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|OwnShares')">
Disposal of own shares
</para>
  <section condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|OwnShares|DisposalOwnShares|DisposalOwnShares|*')[0].HasValue" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|OwnShares')">
    <var name="Disposal" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|OwnShares|DisposalOwnShares|DisposalOwnShares|*')" />
    <iterator condition="Disposal[0].HasValue" iterate-over="Disposal" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
      <var name="ShareClass" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|DisposalOwnShares|DisposalOwnShares|XBRLShareClass|Current Period')[0].Value" />
      <var name="XBRLShareClass" pre="&#xD;&#xA;		if ShareClass = 'Ordinary share class 1' then 'uk-bus:OrdinaryShareClass1' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 2' then 'uk-bus:OrdinaryShareClass2' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 3' then 'uk-bus:OrdinaryShareClass3' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 4' then 'uk-bus:OrdinaryShareClass4' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 5' then 'uk-bus:OrdinaryShareClass5' else&#xD;&#xA;		if ShareClass = 'Preference share class 1' then 'uk-bus:PreferenceShareClass1' else&#xD;&#xA;		if ShareClass = 'Preference share class 2' then 'uk-bus:PreferenceShareClass2' else&#xD;&#xA;		if ShareClass = 'Preference share class 3' then 'uk-bus:PreferenceShareClass3' else&#xD;&#xA;		if ShareClass = 'Preference share class 4' then 'uk-bus:PreferenceShareClass4' else&#xD;&#xA;		if ShareClass = 'Preference share class 5' then 'uk-bus:PreferenceShareClass5' else&#xD;&#xA;		'uk-bus:AllShareClassesDefault'" />
      <var name="ShareType" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|DisposalOwnShares|DisposalOwnShares|XBRLShareType|Current Period')[0].Value" />
      <var name="XBRLShareType" pre="&#xD;&#xA;		if ShareType = 'Not applicable' then 'uk-bus:AllShareTypesDefault' else&#xD;&#xA;		if ShareType = 'Cumulative' then 'uk-bus:CumulativeShares' else&#xD;&#xA;		if ShareType = 'Cumulative and redeemable shares' then 'uk-bus:CumulativeRedeemableShares' else&#xD;&#xA;		if ShareType = 'Cumulative and non-redeemable shares' then 'uk-bus:CumulativeNon-redeemableShares' else&#xD;&#xA;		if ShareType = 'Non-cumulative' then 'uk-bus:Non-cumulativeShares' else&#xD;&#xA;		if ShareType = 'Non-cumulative and redeemable shares' then 'uk-bus:Non-cumulativeNon-redeemableShares' else&#xD;&#xA;		if ShareType = 'Non-cumulative and non-redeemable shares' then 'uk-bus:Non-cumulativeNon-redeemableShares' else&#xD;&#xA;		if ShareType = 'Other share types' then 'uk-bus:OtherShareTypes' else&#xD;&#xA;		'uk-bus:AllShareTypesDefault'" />
      <para para-alignment="Full" xbrl-hypercube="uk-bus:SharesHypercube" xbrl-dimensions="uk-bus:ShareClassesDimension=XBRLShareClass,uk-bus:ShareTypesDimension=XBRLShareType" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">During the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> the company disposed of <ws /><inline xbrl-concept="uk-direp:NumberOwnSharesSold" xbrl-period="CurrentPeriod" xbrl-scaling="0"><data base-style="Inline Number">reporting.queries.client.lookupaccountingperioddata(item, '*|DisposalOwnShares|DisposalOwnShares|NumberShares|Current Period')[0].Value</data></inline><ws /> of its own <ws /><inline xbrl-period="CurrentPeriod" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|DisposalOwnShares|DisposalOwnShares|Description|Current Period')[0].Value</data></inline><ws /> at a nominal value of <ws /><inline xbrl-concept="uk-direp:NominalValueOwnSharesSold" xbrl-period="CurrentPeriod" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|DisposalOwnShares|DisposalOwnShares|NominalValue|Current Period')[0].Value</data></inline>
.<inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|DisposalOwnShares|DisposalOwnShares|Proceeds|Current Period')[0].Value&gt;0"><ws /> The proceeds of the disposal amounted to <ws /><inline xbrl-concept="uk-direp:SaleOwnShares" xbrl-period="CurrentPeriod" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|DisposalOwnShares|DisposalOwnShares|Proceeds|Current Period')[0].Value</data></inline><ws /> and <ws /></inline><inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|DisposalOwnShares|DisposalOwnShares|Proceeds|Current Period')[0].Value=0"><ws /> The disposed shares <ws /></inline>
represent <ws /><data base-style="Percentage">reporting.queries.client.lookupaccountingperioddata(item, '*|DisposalOwnShares|DisposalOwnShares|Percentage|Current Period')[0].Value</data><ws /> of that class of share.</para>
    </iterator>
  </section>
</add-to-body></template>
						</report-template>
						<report-template version="12" name="Maxiumum number and nominal value" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|MaximumNumberShares|Current Period&quot;)[0].HasValue or reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|MaximumNominalValue|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="MaximumNumberAndNominalValueNotes" page-break-before="False" keep-with-next-strength="0" template-guid="73488934-a9c6-4638-b1d9-4090c22cd151">
							<template><add-to-body>
  <para base-style="Link To Data" toggle-expand-on-click="true" condition="(reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|MaximumNumberShares|Current Period')[0].HasValue or reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|MaximumNominalValue|Current Period')[0].HasValue)=false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|OwnShares')">
Maximum number and value of own shares purchased
</para>
  <section condition="(reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|MaximumNumberShares|Current Period')[0].HasValue or reporting.queries.client.lookupaccountingperioddata('Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|MaximumNominalValue|Current Period')[0].HasValue)" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|DirectorsReport|OwnShares')">
    <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The maximum number of its own shares held by the company during the year was <ws /><inline xbrl-concept="uk-direp:MaximumNumberOwnSharesHeldByEntityInPeriod" xbrl-period="CurrentPeriod" xbrl-scaling="0"><data base-style="Inline Number">reporting.queries.client.lookupaccountingperioddata("Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|MaximumNumberShares|Current Period")[0].Value</data></inline><ws /> having a maximum aggregate nominal value of <ws /><inline xbrl-concept="uk-direp:MaximumNominalValueOwnSharesHeldByEntityInPeriod" xbrl-period="CurrentPeriod" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|DirectorsReport|OwnShares|PurchaseOwnShares|MaximumNominalValue|Current Period")[0].Value</data></inline>
.</para>
  </section>
</add-to-body></template>
						</report-template>
					</report-template>
				</report-template>
				<report-template version="12" name="Dividends" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|General|Dividends|FinalDividendRecommended|FinalDividendRecommended|Current Period&quot;)[0].HasValue or reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|General|Dividends|FinalDividendRecommended|FinalDividendRecommended|Prior Period&quot;)[0].HasValue or DividendsRecognised or CumulativeDividendArrears[0].HasValue" enabled="Conditional" section-name="Dividends" page-break-before="False" keep-with-next-strength="0" template-guid="06fc1d38-454f-4699-86db-d1a268b6ad60">
					<variables>
						<variable name="CumulativeDividendArrears">reporting.queries.client.lookupaccountingperioddata("Disclosure|General|ShareCapital|CumulativeDividendArrears|CumulativeDividendArrears|*")</variable>
						<variable name="DividendsRecognised">reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('988').HasTransactions
or
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('989').HasTransactions
or
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('990').HasTransactions
or
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('991').HasTransactions
or
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('992').HasTransactions
or
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('993').HasTransactions
or
reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('994').HasTransactions</variable>
					</variables>
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Dividends values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|General|Dividends|FinalDividendRecommended|FinalDividendRecommended|Current Period&quot;)[0].HasValue or reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|General|Dividends|FinalDividendRecommended|FinalDividendRecommended|Prior Period&quot;)[0].HasValue or DividendsRecognised" enabled="Conditional" section-name="DividendsValues" page-break-before="False" keep-with-next-strength="0" template-guid="e0727e40-a9e4-4ed1-bcb3-6ed0fdabe7f9">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'Dividends', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('DividendsPaid', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Dividends paid&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Prior &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; final dividend paid&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('988.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('990.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem2add" pre="section1subsection1.AddItem(section1subsection1subsectionitem2)" />
    <var name="section1subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('992.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem3add" pre="section1subsection1.AddItem(section1subsection1subsectionitem3)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:FinalPayment')" />
    <var name="section1subsection1XBRLDimensionsSet" pre="section1subsection1.SetDimensions('uk-gaap:DividendsDimension=uk-gaap:DividendsPaid,uk-bus:ShareClassesDimension=uk-bus:AllOrdinaryShares')" />
    <var name="section1subsection1XBRLHypercubeNameSet" pre="section1subsection1.SetHypercubeName('uk-gaap:DividendsHypercube')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; interim dividend paid&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('988.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('990.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem2add" pre="section1subsection2.AddItem(section1subsection2subsectionitem2)" />
    <var name="section1subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('992.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem3add" pre="section1subsection2.AddItem(section1subsection2subsectionitem3)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:InterimPayment')" />
    <var name="section1subsection2XBRLDimensionsSet" pre="section1subsection2.SetDimensions('uk-gaap:DividendsDimension=uk-gaap:DividendsPaid,uk-bus:ShareClassesDimension=uk-bus:AllOrdinaryShares')" />
    <var name="section1subsection2XBRLHypercubeNameSet" pre="section1subsection2.SetHypercubeName('uk-gaap:DividendsHypercube')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Preference dividend paid&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('994', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:TotalDividendPayment')" />
    <var name="section1subsection3XBRLDimensionsSet" pre="section1subsection3.SetDimensions('uk-gaap:DividendsDimension=uk-gaap:DividendsPaid,uk-bus:ShareClassesDimension=uk-bus:AllPreferenceShares')" />
    <var name="section1subsection3XBRLHypercubeNameSet" pre="section1subsection3.SetHypercubeName('uk-gaap:DividendsHypercube')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:TotalDividendPayment')" />
    <var name="section1XBRLDimensionsSet" pre="section1.SetDimensions('uk-gaap:DividendsDimension=uk-gaap:DividendsPaid')" />
    <var name="section1XBRLHypercubeNameSet" pre="section1.SetHypercubeName('uk-gaap:DividendsHypercube')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('DividendsProposed', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Dividends proposed and recognised in the accounts&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Ordinary dividend proposed&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('989', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('993', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem2add" pre="section2subsection1.AddItem(section2subsection1subsectionitem2)" />
    <var name="section2subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('991', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem3add" pre="section2subsection1.AddItem(section2subsection1subsectionitem3)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:TotalDividendPayment')" />
    <var name="section2subsection1XBRLDimensionsSet" pre="section2subsection1.SetDimensions('uk-gaap:DividendsDimension=uk-gaap:DividendsProposed,uk-bus:ShareClassesDimension=uk-bus:AllOrdinaryShares')" />
    <var name="section2subsection1XBRLHypercubeNameSet" pre="section2subsection1.SetHypercubeName('uk-gaap:DividendsHypercube')" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Preference dividend proposed&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('995', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2XBRLConceptNameSet" pre="section2subsection2.SetConceptName('uk-gaap:TotalDividendPayment')" />
    <var name="section2subsection2XBRLDimensionsSet" pre="section2subsection2.SetDimensions('uk-gaap:DividendsDimension=uk-gaap:DividendsProposed,uk-bus:ShareClassesDimension=uk-bus:AllPreferenceShares')" />
    <var name="section2subsection2XBRLHypercubeNameSet" pre="section2subsection2.SetHypercubeName('uk-gaap:DividendsHypercube')" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2XBRLConceptNameSet" pre="section2.SetConceptName('uk-gaap:TotalDividendPayment')" />
    <var name="section2XBRLDimensionsSet" pre="section2.SetDimensions('uk-gaap:DividendsDimension=uk-gaap:DividendsProposed')" />
    <var name="section2XBRLHypercubeNameSet" pre="section2.SetHypercubeName('uk-gaap:DividendsHypercube')" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('TotalDividendsRecognised', '&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section3item1" pre="section3.AddTotalItem(section1)" />
    <var name="section3item2" pre="section3.AddTotalItem(section2)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:TotalDividendPayment')" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <var name="section4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('RecommendedDividend', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Proposed for approval by shareholders at AGM:&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Recommended final dividend proposed for approval by shareholders&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section4subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|General|Dividends|FinalDividendRecommended|FinalDividendRecommended', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection1subsectionitem1add" pre="section4subsection1.AddItem(section4subsection1subsectionitem1)" />
    <var name="section4subsection1add" pre="section4.AddItem(section4subsection1)" />
    <var name="section4XBRLConceptNameSet" pre="section4.SetConceptName('uk-direp:DividendRecommendedByDirectors')" />
    <var name="section4add" pre="smartTable.AddTableBlock(section4)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Cumulative dividend arrears" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="CumulativeDividendArrears[0].HasValue" enabled="Conditional" section-name="CumulativeDividendArrears" page-break-before="False" keep-with-next-strength="0" template-guid="aea1dd79-2db0-4b45-9682-831ad432578e">
						<template><add-to-body>
  <para base-style="Title" para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
Cumulative dividend arrears
</para>
  <section condition="CumulativeDividendArrears[0].HasValue = false" toggle-expand-on-click="true" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|General|ShareCapital')">
    <para base-style="Link To Data">
		Cumulative dividend arrears
	</para>
  </section>
  <section condition="CumulativeDividendArrears[0].HasValue" toggle-expand-on-click="false" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|General|ShareCapital')">
    <table>
      <table-row-iterator iterate-over="CumulativeDividendArrears" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
        <var name="ShareClass" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|CumulativeDividendArrear|CumulativeDividendArrear|XBRLShareClass|Current Period')[0].Value" />
        <var name="XBRLShareClass" pre="&#xD;&#xA;		if ShareClass = 'Ordinary share class 1' then 'uk-bus:OrdinaryShareClass1' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 2' then 'uk-bus:OrdinaryShareClass2' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 3' then 'uk-bus:OrdinaryShareClass3' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 4' then 'uk-bus:OrdinaryShareClass4' else&#xD;&#xA;		if ShareClass = 'Ordinary share class 5' then 'uk-bus:OrdinaryShareClass5' else&#xD;&#xA;		if ShareClass = 'Preference share class 1' then 'uk-bus:PreferenceShareClass1' else&#xD;&#xA;		if ShareClass = 'Preference share class 2' then 'uk-bus:PreferenceShareClass2' else&#xD;&#xA;		if ShareClass = 'Preference share class 3' then 'uk-bus:PreferenceShareClass3' else&#xD;&#xA;		if ShareClass = 'Preference share class 4' then 'uk-bus:PreferenceShareClass4' else&#xD;&#xA;		if ShareClass = 'Preference share class 5' then 'uk-bus:PreferenceShareClass5' else&#xD;&#xA;		'uk-bus:AllShareClassesDefault'" />
        <var name="ShareType" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|CumulativeDividendArrear|CumulativeDividendArrear|XBRLShareType|Current Period')[0].Value" />
        <var name="XBRLShareType" pre="&#xD;&#xA;		if ShareType = 'Not applicable' then 'uk-bus:AllShareTypesDefault' else&#xD;&#xA;		if ShareType = 'Cumulative' then 'uk-bus:CumulativeShares' else&#xD;&#xA;		if ShareType = 'Cumulative and redeemable shares' then 'uk-bus:CumulativeRedeemableShares' else&#xD;&#xA;		if ShareType = 'Cumulative and non-redeemable shares' then 'uk-bus:CumulativeNon-redeemableShares' else&#xD;&#xA;		if ShareType = 'Non-cumulative' then 'uk-bus:Non-cumulativeShares' else&#xD;&#xA;		if ShareType = 'Non-cumulative and redeemable shares' then 'uk-bus:Non-cumulativeNon-redeemableShares' else&#xD;&#xA;		if ShareType = 'Non-cumulative and non-redeemable shares' then 'uk-bus:Non-cumulativeNon-redeemableShares' else&#xD;&#xA;		if ShareType = 'Other share types' then 'uk-bus:OtherShareTypes' else&#xD;&#xA;		'uk-bus:AllShareTypesDefault'" />
        <table-row>
          <table-cell>
            <para para-alignment="Full" xbrl-hypercube="uk-bus:SharesHypercube" xbrl-dimensions="uk-bus:ShareClassesDimension=XBRLShareClass,uk-bus:ShareTypesDimension=XBRLShareType" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">There are <ws /><inline xbrl-concept="uk-gaap:AmountArrearsShares" xbrl-period="EndCurrentPeriod"><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata(item, '*|CumulativeDividendArrear|CumulativeDividendArrear|Amount|Current Period')[0].Value</data></inline><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.CurrentPeriod.EndDate.Value.Year</data><ws /> - <ws /><inline xbrl-concept="uk-gaap:AmountArrearsShares" xbrl-period="EndPriorPeriod"><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata(item, '*|CumulativeDividendArrear|CumulativeDividendArrear|Amount|Prior Period')[0].Value</data></inline>
)</inline><ws /> fixed cumulative dividends in arrears in relation to <ws /><inline xbrl-period="CurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|CumulativeDividendArrear|CumulativeDividendArrear|Description|Current Period')[0].Value</data></inline><inline xbrl-concept="uk-gaap:DescriptionPeriodArrears" xbrl-period="CurrentPeriod"><inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|CumulativeDividendArrear|CumulativeDividendArrear|EarliestDate|Current Period')[0].HasValue and reporting.queries.client.lookupaccountingperioddata(item, '*|CumulativeDividendArrear|CumulativeDividendArrear|LatestDate|Current Period')[0].HasValue"><ws /> which were due <ws /><inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|CumulativeDividendArrear|CumulativeDividendArrear|EarliestDate|Current Period')[0].Value = reporting.queries.client.lookupaccountingperioddata(item, '*|CumulativeDividendArrear|CumulativeDividendArrear|LatestDate|Current Period')[0].Value">on <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, '*|CumulativeDividendArrear|CumulativeDividendArrear|EarliestDate|Current Period')[0].Value</data></inline><inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|CumulativeDividendArrear|CumulativeDividendArrear|EarliestDate|Current Period')[0].Value != reporting.queries.client.lookupaccountingperioddata(item, '*|CumulativeDividendArrear|CumulativeDividendArrear|LatestDate|Current Period')[0].Value&#xD;&#xD;&#xA;&#xD;&#xD;&#xA;">between <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, '*|CumulativeDividendArrear|CumulativeDividendArrear|EarliestDate|Current Period')[0].Value</data><ws /> and <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, '*|CumulativeDividendArrear|CumulativeDividendArrear|LatestDate|Current Period')[0].Value</data></inline></inline><inline condition="reportHelper.HasPriorPeriod and (reporting.queries.client.lookupaccountingperioddata(item, '*|CumulativeDividendArrear|CumulativeDividendArrear|EarliestDate|Prior Period')[0].HasValue and reporting.queries.client.lookupaccountingperioddata(item, '*|CumulativeDividendArrear|CumulativeDividendArrear|LatestDate|Prior Period')[0].HasValue)"><ws /> (<data>reportHelper.ComparativePeriod(1).EndDate.Value.Year</data><ws /> - <ws /><inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|CumulativeDividendArrear|CumulativeDividendArrear|EarliestDate|Prior Period')[0].Value = reporting.queries.client.lookupaccountingperioddata(item, '*|CumulativeDividendArrear|CumulativeDividendArrear|LatestDate|Prior Period')[0].Value">on <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, '*|CumulativeDividendArrear|CumulativeDividendArrear|EarliestDate|Prior Period')[0].Value</data></inline><inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|CumulativeDividendArrear|CumulativeDividendArrear|EarliestDate|Prior Period')[0].Value != reporting.queries.client.lookupaccountingperioddata(item, '*|CumulativeDividendArrear|CumulativeDividendArrear|LatestDate|Prior Period')[0].Value&#xD;&#xD;&#xA;&#xD;&#xD;&#xA;">between <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, '*|CumulativeDividendArrear|CumulativeDividendArrear|EarliestDate|Prior Period')[0].Value</data><ws /> and <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, '*|CumulativeDividendArrear|CumulativeDividendArrear|LatestDate|Prior Period')[0].Value</data></inline>
)</inline></inline>
.</para>
          </table-cell>
        </table-row>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
				</report-template>
				<report-template version="12" name="Reconciliation of movement in shareholders' funds" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="FRSSE = false" enabled="Conditional" section-name="ROMISF" page-break-before="False" keep-with-next-strength="1" template-guid="e0ee980b-5d7c-4d9d-a970-138e73e83d3f">
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Reconciliation of movement in shareholders funds" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="ROMISFValues" page-break-before="False" keep-with-next-strength="0" template-guid="39c360db-11c3-436d-99ab-0f0ac69670fc">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'ROMISF', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('Current')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('Prior')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Movement', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Net &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;addition/(reduction)&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; to shareholders&amp;apos; funds&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; attributable to the members of the company&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('001-049', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('050-159', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem2add" pre="section1subsection1.AddItem(section1subsection1subsectionitem2)" />
    <var name="section1subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('160-229', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem3add" pre="section1subsection1.AddItem(section1subsection1subsectionitem3)" />
    <var name="section1subsection1subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('230-399', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem4add" pre="section1subsection1.AddItem(section1subsection1subsectionitem4)" />
    <var name="section1subsection1subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('400-409', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem5add" pre="section1subsection1.AddItem(section1subsection1subsectionitem5)" />
    <var name="section1subsection1subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('410-419', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem6add" pre="section1subsection1.AddItem(section1subsection1subsectionitem6)" />
    <var name="section1subsection1subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('420-421', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem7add" pre="section1subsection1.AddItem(section1subsection1subsectionitem7)" />
    <var name="section1subsection1subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('422-423', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem8add" pre="section1subsection1.AddItem(section1subsection1subsectionitem8)" />
    <var name="section1subsection1subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('424-429', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem9add" pre="section1subsection1.AddItem(section1subsection1subsectionitem9)" />
    <var name="section1subsection1subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('430-439', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem10add" pre="section1subsection1.AddItem(section1subsection1subsectionitem10)" />
    <var name="section1subsection1subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('440-441', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem11add" pre="section1subsection1.AddItem(section1subsection1subsectionitem11)" />
    <var name="section1subsection1subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('442-469', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem12add" pre="section1subsection1.AddItem(section1subsection1subsectionitem12)" />
    <var name="section1subsection1subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('470-484', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem13add" pre="section1subsection1.AddItem(section1subsection1subsectionitem13)" />
    <var name="section1subsection1subsectionitem14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('485-489', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem14add" pre="section1subsection1.AddItem(section1subsection1subsectionitem14)" />
    <var name="section1subsection1subsectionitem15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('490-499', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem15add" pre="section1subsection1.AddItem(section1subsection1subsectionitem15)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:ProfitLossForPeriod')" />
    <var name="section1subsection1XBRLPeriodSet" pre="section1subsection1.SetPeriod('Duration')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other recognised gains and losses relating to the &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('956', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('985', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem2add" pre="section1subsection2.AddItem(section1subsection2subsectionitem2)" />
    <var name="section1subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('953', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem3add" pre="section1subsection2.AddItem(section1subsection2subsectionitem3)" />
    <var name="section1subsection2subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('957', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem4add" pre="section1subsection2.AddItem(section1subsection2subsectionitem4)" />
    <var name="section1subsection2subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('987', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem5add" pre="section1subsection2.AddItem(section1subsection2subsectionitem5)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:OtherRecognisedGainsLossesForPeriod')" />
    <var name="section1subsection2XBRLPeriodSet" pre="section1subsection2.SetPeriod('Duration')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Dividends&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('993', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('991', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem2add" pre="section1subsection3.AddItem(section1subsection3subsectionitem2)" />
    <var name="section1subsection3subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('992', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem3add" pre="section1subsection3.AddItem(section1subsection3subsectionitem3)" />
    <var name="section1subsection3subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('994', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem4add" pre="section1subsection3.AddItem(section1subsection3subsectionitem4)" />
    <var name="section1subsection3subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('990', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem5add" pre="section1subsection3.AddItem(section1subsection3subsectionitem5)" />
    <var name="section1subsection3subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('995', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem6add" pre="section1subsection3.AddItem(section1subsection3subsectionitem6)" />
    <var name="section1subsection3subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('989', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem7add" pre="section1subsection3.AddItem(section1subsection3subsectionitem7)" />
    <var name="section1subsection3subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('988', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem8add" pre="section1subsection3.AddItem(section1subsection3subsectionitem8)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:EquityDividendsPaid')" />
    <var name="section1subsection3XBRLPeriodSet" pre="section1subsection3.SetPeriod('Duration')" />
    <var name="section1subsection3XBRLReverseSignSet" pre="section1subsection3.SetReverseSign(true)" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;New share capital allotted&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('922-922', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('921-921', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem2add" pre="section1subsection4.AddItem(section1subsection4subsectionitem2)" />
    <var name="section1subsection4subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('912-912', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem3add" pre="section1subsection4.AddItem(section1subsection4subsectionitem3)" />
    <var name="section1subsection4subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('911-911', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem4add" pre="section1subsection4.AddItem(section1subsection4subsectionitem4)" />
    <var name="section1subsection4subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('931', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem5add" pre="section1subsection4.AddItem(section1subsection4subsectionitem5)" />
    <var name="section1subsection4subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('932', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem6add" pre="section1subsection4.AddItem(section1subsection4subsectionitem6)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:NetProceedsFromSharesIssuedDuringPeriod')" />
    <var name="section1subsection4XBRLPeriodSet" pre="section1subsection4.SetPeriod('Duration')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Purchase of own share capital&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('913-913', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('923-923', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem2add" pre="section1subsection5.AddItem(section1subsection5subsectionitem2)" />
    <var name="section1subsection5subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('943', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem3add" pre="section1subsection5.AddItem(section1subsection5subsectionitem3)" />
    <var name="section1subsection5subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('942', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem4add" pre="section1subsection5.AddItem(section1subsection5subsectionitem4)" />
    <var name="section1subsection5subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('983', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem5add" pre="section1subsection5.AddItem(section1subsection5subsectionitem5)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:NetPaymentsForReacquisitionOrRedemptionShares')" />
    <var name="section1subsection5XBRLPeriodSet" pre="section1subsection5.SetPeriod('Duration')" />
    <var name="section1subsection5XBRLReverseSignSet" pre="section1subsection5.SetReverseSign(true)" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Transfer of preference share capital to liabilities&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('924-924', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:TransferToFromFinancialLiabilitiesFromToEquityCausedByChangeInRedemptionProhibition')" />
    <var name="section1subsection6XBRLPeriodSet" pre="section1subsection6.SetPeriod('Duration')" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other movement of ordinary share capital&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('914-919', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7XBRLPeriodSet" pre="section1subsection7.SetPeriod('Duration')" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:NetIncreaseDecreaseInShareholdersFunds')" />
    <var name="section1XBRLPeriodSet" pre="section1.SetPeriod('Duration')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('OpeningShareholdersFundsDeficit', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Shareholders&amp;apos; &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;funds/(deficit)&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; at &lt;ws/&gt;&lt;inline condition=&quot;reportHelper.IsAnnual&quot;&gt;&lt;data&gt;reportHelper.CurrentPeriod.StartDate.Value.ToString(&amp;apos;d MMMM&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;reportHelper.IsAnnual = false&quot;&gt;start of period&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;(reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,1).Comparatives.BalanceRoot,951),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,1).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero&#xD;&#xA;+&#xD;&#xA;reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,1).Comparatives.BalanceRoot,981),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,1).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero)!= 0&quot;&gt;&lt;ws/&gt; (previously &lt;ws/&gt;&lt;data&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;(-(reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding,1).Comparatives.BalanceRoot,910),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding,1).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero&#xD;&#xA;+&#xD;&#xA;reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding,1).Comparatives.BalanceRoot,920),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding,1).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero&#xD;&#xA;+&#xD;&#xA;reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding,1).Comparatives.BalanceRoot,930),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding,1).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero&#xD;&#xA;+&#xD;&#xA;reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding,1).Comparatives.BalanceRoot,940),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding,1).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero&#xD;&#xA;+&#xD;&#xA;reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding,1).Comparatives.BalanceRoot,950),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding,1).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero&#xD;&#xA;+reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding,1).Comparatives.BalanceRoot,960),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding,1).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero&#xD;&#xA;+&#xD;&#xA;reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding,1).Comparatives.BalanceRoot,970),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding,1).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero&#xD;&#xA;+&#xD;&#xA;reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding,1).Comparatives.BalanceRoot,980),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding,1).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero)).ToString(reporting.CurrentClient.CurrencySymbol+&amp;apos;#,#;(&amp;apos;+reporting.CurrentClient.CurrencySymbol+&amp;apos;#,#)&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; before prior &lt;ws/&gt;&lt;data&gt;reportHelper.ComparativePeriod(1).YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; adjustment of &lt;ws/&gt;&lt;data&gt;(-(reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,1).Comparatives.BalanceRoot,951),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,1).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero&#xD;&#xA;+&#xD;&#xA;reporting.Queries.Computation.GetTotal(reporting.Queries.Chart.FindNominalCode(reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,1).Comparatives.BalanceRoot,981),reporting.GetComputations(reporting.CurrentPeriod.ClientDetails.ReportOptions.PrimaryStatementRounding,1).Comparatives.Dimensions.ComparativePeriods.CurrentPeriod).UnsignedAmount.ValueOrZero)).ToString(reporting.CurrentClient.CurrencySymbol+&amp;apos;#,#;&amp;apos;+reporting.CurrentClient.CurrencySymbol+&amp;apos;#,#&amp;apos;)&lt;/data&gt;&#xD;&#xA;)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Ordinary share capital b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('910-910', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Preference share capital b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('920-920', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Share premium b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('930', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem1add" pre="section2subsection3.AddItem(section2subsection3subsectionitem1)" />
    <var name="section2subsection3add" pre="section2.AddItem(section2subsection3)" />
    <var name="section2subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Capital redemption reserve b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('940', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection4subsectionitem1add" pre="section2subsection4.AddItem(section2subsection4subsectionitem1)" />
    <var name="section2subsection4add" pre="section2.AddItem(section2subsection4)" />
    <var name="section2subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Revaluation reserve b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('950', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection5subsectionitem1add" pre="section2subsection5.AddItem(section2subsection5subsectionitem1)" />
    <var name="section2subsection5add" pre="section2.AddItem(section2subsection5)" />
    <var name="section2subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other reserves - b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('960', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection6subsectionitem1add" pre="section2subsection6.AddItem(section2subsection6subsectionitem1)" />
    <var name="section2subsection6add" pre="section2.AddItem(section2subsection6)" />
    <var name="section2subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other reserves 2 - b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('970', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection7subsectionitem1add" pre="section2subsection7.AddItem(section2subsection7subsectionitem1)" />
    <var name="section2subsection7add" pre="section2.AddItem(section2subsection7)" />
    <var name="section2subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Profit and loss account reserve b/fwd&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('980-980', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection8subsectionitem1add" pre="section2subsection8.AddItem(section2subsection8subsectionitem1)" />
    <var name="section2subsection8add" pre="section2.AddItem(section2subsection8)" />
    <var name="section2subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Profit and loss reserve prior period adjustment&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('981-981', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection9subsectionitem1add" pre="section2subsection9.AddItem(section2subsection9subsectionitem1)" />
    <var name="section2subsection9add" pre="section2.AddItem(section2subsection9)" />
    <var name="section2subsection10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Revaluation reserve prior period adjustment&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection10subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('951', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection10subsectionitem1add" pre="section2subsection10.AddItem(section2subsection10subsectionitem1)" />
    <var name="section2subsection10add" pre="section2.AddItem(section2subsection10)" />
    <var name="section2XBRLConceptNameSet" pre="section2.SetConceptName('uk-gaap:ShareholderFunds')" />
    <var name="section2XBRLPeriodSet" pre="section2.SetPeriod('Start')" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('ClosingShareholdersFundsDeficit', '&lt;para&gt;Shareholders&amp;apos; &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;funds/(deficit)&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; at &lt;ws/&gt;&lt;inline condition=&quot;reportHelper.IsAnnual&quot;&gt;&lt;data&gt;reportHelper.CurrentPeriod.EndDate.Value.ToString(&amp;apos;d MMMM&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;reportHelper.IsAnnual = false&quot;&gt;end of period&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.Always, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section3item1" pre="section3.AddTotalItem(section1)" />
    <var name="section3item2" pre="section3.AddTotalItem(section2)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:ShareholderFunds')" />
    <var name="section3XBRLPeriodSet" pre="section3.SetPeriod('End')" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
				</report-template>
				<report-template version="12" name="Reserves" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="true" enabled="Always" section-name="Reserves" page-break-before="False" keep-with-next-strength="0" template-guid="2da4f2bb-f0c6-4af1-9fa7-a174bc61aac1">
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Reserves values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="ReservesValues" page-break-before="False" keep-with-next-strength="0" template-guid="f609c294-72bf-4731-b702-7b63dc90cd7f">
						<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'Reserves', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetChartFilter(new string[] { '930-939' } )" />
    <var name="column2filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('SharePremiumAccount', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1, column2filter2 }, false, '&lt;para&gt;Share premium account&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetChartFilter(new string[] { '940-949' } )" />
    <var name="column3filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CapitalRedemptionReserve', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1, column3filter2 }, false, '&lt;para&gt;Capital redemption reserve&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4filter1" pre="newComputation.GetChartFilter(new string[] { '950-959' } )" />
    <var name="column4filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('RevaluationReserve', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column4filter1, column4filter2 }, false, '&lt;para&gt;Revaluation reserve&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <var name="column5filter1" pre="newComputation.GetChartFilter(new string[] { '960-969' } )" />
    <var name="column5filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('OtherReserves', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column5filter1, column5filter2 }, false, '&lt;para&gt;Other reserves&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column5add" pre="smartTable.AddColumn(column5)" />
    <var name="column6filter1" pre="newComputation.GetChartFilter(new string[] { '970-979' } )" />
    <var name="column6filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('OtherReserves2', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column6filter1, column6filter2 }, false, '&lt;para&gt;Other reserves 2&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column6add" pre="smartTable.AddColumn(column6)" />
    <var name="column7filter1" pre="newComputation.GetChartFilter(new string[] { '490-499', '485-489', '470-484', '442-469', '440-441', '430-439', '424-429', '422-423', '420-421', '410-419', '400-409', '230-399', '160-229', '050-159', '001-049', '980-998' } )" />
    <var name="column7filter2" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('ProfitAndLossAccount', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column7filter1, column7filter2 }, false, '&lt;para&gt;Profit and loss account&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column7add" pre="smartTable.AddColumn(column7)" />
    <var name="column8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableCalculationColumn.Create('Total', 'CapitalRedemptionReserve+&#xD;OtherReserves+&#xD;OtherReserves2+&#xD;ProfitAndLossAccount+&#xD;RevaluationReserve+&#xD;SharePremiumAccount&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', false, '&lt;para&gt;Total&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right')" />
    <var name="column8XBRLPeriodSet" pre="column8.SetPeriod('CurrentPeriod')" />
    <var name="column8add" pre="smartTable.AddColumn(column8)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('BFwd', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.StartDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; as restated&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.StartDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('930', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('940', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem2add" pre="section1subsection1.AddItem(section1subsection1subsectionitem2)" />
    <var name="section1subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('950', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem3add" pre="section1subsection1.AddItem(section1subsection1subsectionitem3)" />
    <var name="section1subsection1subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('960', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem4add" pre="section1subsection1.AddItem(section1subsection1subsectionitem4)" />
    <var name="section1subsection1subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('970', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem5add" pre="section1subsection1.AddItem(section1subsection1subsectionitem5)" />
    <var name="section1subsection1subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('980-980', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem6add" pre="section1subsection1.AddItem(section1subsection1subsectionitem6)" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Prior &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; adjustment&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('951', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('981-981', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem2add" pre="section1subsection2.AddItem(section1subsection2subsectionitem2)" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Movement', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; for the &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('001-049', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('050-159', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem2add" pre="section2subsection1.AddItem(section2subsection1subsectionitem2)" />
    <var name="section2subsection1subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('160-229', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem3add" pre="section2subsection1.AddItem(section2subsection1subsectionitem3)" />
    <var name="section2subsection1subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('230-399', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem4add" pre="section2subsection1.AddItem(section2subsection1subsectionitem4)" />
    <var name="section2subsection1subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('400-409', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem5add" pre="section2subsection1.AddItem(section2subsection1subsectionitem5)" />
    <var name="section2subsection1subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('410-419', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem6add" pre="section2subsection1.AddItem(section2subsection1subsectionitem6)" />
    <var name="section2subsection1subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('420-421', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem7add" pre="section2subsection1.AddItem(section2subsection1subsectionitem7)" />
    <var name="section2subsection1subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('422-423', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem8add" pre="section2subsection1.AddItem(section2subsection1subsectionitem8)" />
    <var name="section2subsection1subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('424-429', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem9add" pre="section2subsection1.AddItem(section2subsection1subsectionitem9)" />
    <var name="section2subsection1subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('430-439', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem10add" pre="section2subsection1.AddItem(section2subsection1subsectionitem10)" />
    <var name="section2subsection1subsectionitem11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('440-441', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem11add" pre="section2subsection1.AddItem(section2subsection1subsectionitem11)" />
    <var name="section2subsection1subsectionitem12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('442-469', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem12add" pre="section2subsection1.AddItem(section2subsection1subsectionitem12)" />
    <var name="section2subsection1subsectionitem13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('470-484', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem13add" pre="section2subsection1.AddItem(section2subsection1subsectionitem13)" />
    <var name="section2subsection1subsectionitem14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('485-489', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem14add" pre="section2subsection1.AddItem(section2subsection1subsectionitem14)" />
    <var name="section2subsection1subsectionitem15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('490-499', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem15add" pre="section2subsection1.AddItem(section2subsection1subsectionitem15)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:ProfitLossForPeriod')" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Dividends&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('988', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('989', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem2add" pre="section2subsection2.AddItem(section2subsection2subsectionitem2)" />
    <var name="section2subsection2subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('990', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem3add" pre="section2subsection2.AddItem(section2subsection2subsectionitem3)" />
    <var name="section2subsection2subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('991', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem4add" pre="section2subsection2.AddItem(section2subsection2subsectionitem4)" />
    <var name="section2subsection2subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('992', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem5add" pre="section2subsection2.AddItem(section2subsection2subsectionitem5)" />
    <var name="section2subsection2subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('993', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem6add" pre="section2subsection2.AddItem(section2subsection2subsectionitem6)" />
    <var name="section2subsection2subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('994', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem7add" pre="section2subsection2.AddItem(section2subsection2subsectionitem7)" />
    <var name="section2subsection2subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('995', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem8add" pre="section2subsection2.AddItem(section2subsection2subsectionitem8)" />
    <var name="section2subsection2XBRLConceptNameSet" pre="section2subsection2.SetConceptName('uk-gaap:DividendsWithdrawnFromTotalReserves')" />
    <var name="section2subsection2XBRLReverseSignSet" pre="section2subsection2.SetReverseSign(true)" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Premium on issue of shares&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('931', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem1add" pre="section2subsection3.AddItem(section2subsection3subsectionitem1)" />
    <var name="section2subsection3subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('932', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem2add" pre="section2subsection3.AddItem(section2subsection3subsectionitem2)" />
    <var name="section2subsection3XBRLConceptNameSet" pre="section2subsection3.SetConceptName('uk-gaap:PremiumOnShareIssues-Net')" />
    <var name="section2subsection3add" pre="section2.AddItem(section2subsection3)" />
    <var name="section2subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Purchase of own shares&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('942', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection4subsectionitem1add" pre="section2subsection4.AddItem(section2subsection4subsectionitem1)" />
    <var name="section2subsection4subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('943', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection4subsectionitem2add" pre="section2subsection4.AddItem(section2subsection4subsectionitem2)" />
    <var name="section2subsection4subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('983', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection4subsectionitem3add" pre="section2subsection4.AddItem(section2subsection4subsectionitem3)" />
    <var name="section2subsection4subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('933', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection4subsectionitem4add" pre="section2subsection4.AddItem(section2subsection4subsectionitem4)" />
    <var name="section2subsection4XBRLConceptNameSet" pre="section2subsection4.SetConceptName('uk-gaap:PurchaseOwnSharesDecreaseIncreaseInTotalReserves')" />
    <var name="section2subsection4XBRLReverseSignSet" pre="section2subsection4.SetReverseSign(true)" />
    <var name="section2subsection4add" pre="section2.AddItem(section2subsection4)" />
    <var name="section2subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Transfer of realised profits&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('952', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection5subsectionitem1add" pre="section2subsection5.AddItem(section2subsection5subsectionitem1)" />
    <var name="section2subsection5subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('986', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection5subsectionitem2add" pre="section2subsection5.AddItem(section2subsection5subsectionitem2)" />
    <var name="section2subsection5add" pre="section2.AddItem(section2subsection5)" />
    <var name="section2subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;Surplus/(deficit)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; on property revaluation&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('953', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection6subsectionitem1add" pre="section2subsection6.AddItem(section2subsection6subsectionitem1)" />
    <var name="section2subsection6XBRLConceptNameSet" pre="section2subsection6.SetConceptName('uk-gaap:RevaluationSurplusInPeriod')" />
    <var name="section2subsection6add" pre="section2.AddItem(section2subsection6)" />
    <var name="section2subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Unrealised &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;gain/(loss)&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; on trade investments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('956', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection7subsectionitem1add" pre="section2subsection7.AddItem(section2subsection7subsectionitem1)" />
    <var name="section2subsection7XBRLConceptNameSet" pre="section2subsection7.SetConceptName('uk-gaap:UnrealisedGainLossOnTradeInvestmentsNotUnderFRS26')" />
    <var name="section2subsection7add" pre="section2.AddItem(section2subsection7)" />
    <var name="section2subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Deferred tax&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('957', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection8subsectionitem1add" pre="section2subsection8.AddItem(section2subsection8subsectionitem1)" />
    <var name="section2subsection8subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('967', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection8subsectionitem2add" pre="section2subsection8.AddItem(section2subsection8subsectionitem2)" />
    <var name="section2subsection8subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('977', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection8subsectionitem3add" pre="section2subsection8.AddItem(section2subsection8subsectionitem3)" />
    <var name="section2subsection8XBRLConceptNameSet" pre="section2subsection8.SetConceptName('uk-gaap:DeferredTaxArisingOnOtherGainsLossesRecognisedInThisStatement')" />
    <var name="section2subsection8add" pre="section2.AddItem(section2subsection8)" />
    <var name="section2subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Foreign currency translation &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;gains/(losses)&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('985', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection9subsectionitem1add" pre="section2subsection9.AddItem(section2subsection9subsectionitem1)" />
    <var name="section2subsection9XBRLConceptNameSet" pre="section2subsection9.SetConceptName('uk-gaap:GainLossRecognisedFromForeignExchangeDifferencesExcludingGainsOnFinancialInstrumentsFairValueThroughProfitOrLoss')" />
    <var name="section2subsection9add" pre="section2.AddItem(section2subsection9)" />
    <var name="section2subsection10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Actuarial &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;gain/(loss)&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; on pension schemes&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection10subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('987.00', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection10subsectionitem1add" pre="section2subsection10.AddItem(section2subsection10subsectionitem1)" />
    <var name="section2subsection10XBRLConceptNameSet" pre="section2subsection10.SetConceptName('uk-gaap:ActuarialGainLossRecognisedInPensionSchemes')" />
    <var name="section2subsection10add" pre="section2.AddItem(section2subsection10)" />
    <var name="section2subsection11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Deferred tax relating to actuarial gain/loss on pension schemes&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection11subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('987.01', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection11subsectionitem1add" pre="section2subsection11.AddItem(section2subsection11subsectionitem1)" />
    <var name="section2subsection11XBRLConceptNameSet" pre="section2subsection11.SetConceptName('uk-gaap:DeferredTaxArisingOnGainsLossesInPensionSchemes')" />
    <var name="section2subsection11add" pre="section2.AddItem(section2subsection11)" />
    <var name="section2subsection12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other reserve movements&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection12subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('935', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection12subsectionitem1add" pre="section2subsection12.AddItem(section2subsection12subsectionitem1)" />
    <var name="section2subsection12subsectionitem2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('945', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection12subsectionitem2add" pre="section2subsection12.AddItem(section2subsection12subsectionitem2)" />
    <var name="section2subsection12subsectionitem3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('955', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection12subsectionitem3add" pre="section2subsection12.AddItem(section2subsection12subsectionitem3)" />
    <var name="section2subsection12subsectionitem4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('965', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection12subsectionitem4add" pre="section2subsection12.AddItem(section2subsection12subsectionitem4)" />
    <var name="section2subsection12subsectionitem5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('975', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection12subsectionitem5add" pre="section2subsection12.AddItem(section2subsection12subsectionitem5)" />
    <var name="section2subsection12subsectionitem6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('945', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection12subsectionitem6add" pre="section2subsection12.AddItem(section2subsection12subsectionitem6)" />
    <var name="section2subsection12subsectionitem7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('982', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection12subsectionitem7add" pre="section2subsection12.AddItem(section2subsection12subsectionitem7)" />
    <var name="section2subsection12subsectionitem8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('972', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection12subsectionitem8add" pre="section2subsection12.AddItem(section2subsection12subsectionitem8)" />
    <var name="section2subsection12subsectionitem9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('962', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection12subsectionitem9add" pre="section2subsection12.AddItem(section2subsection12subsectionitem9)" />
    <var name="section2subsection12subsectionitem10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('984', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection12subsectionitem10add" pre="section2subsection12.AddItem(section2subsection12subsectionitem10)" />
    <var name="section2subsection12XBRLConceptNameSet" pre="section2subsection12.SetConceptName('uk-gaap:RemainingRecognisedGainsLossesForPeriod')" />
    <var name="section2subsection12add" pre="section2.AddItem(section2subsection12)" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('ClosingBalance', '&lt;para&gt;At &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.EndDate.Value.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section3item1" pre="section3.AddTotalItem(section1)" />
    <var name="section3item2" pre="section3.AddTotalItem(section2)" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
				</report-template>
				<report-template version="12" name="Prior period adjustments" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|PriorPeriodAdjustments|PriorPeriodAdjustments|Details|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="PriorPeriodAdjustments" page-break-before="False" keep-with-next-strength="0" template-guid="5189d071-ecc6-47df-969a-d805b7c86373">
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Specific prior period adjustments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="SpecificPriorPeriodAdjustments" page-break-before="False" keep-with-next-strength="0" template-guid="36bb017c-c461-4c82-a75a-518c704fa469">
						<template><add-to-body>
  <para para-alignment="Full" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|FinancialStatements|PriorPeriodAdjustments')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:PriorPeriodPolicyChangeAdjustmentsGeneralFree-textComment" xbrl-period="CurrentPeriod">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|PriorPeriodAdjustments|PriorPeriodAdjustments|Details|Current Period")[0].Value</data>
  </para>
</add-to-body></template>
					</report-template>
				</report-template>
				<report-template version="12" name="Pension schemes" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('905').HasTransactions" enabled="Conditional" section-name="PensionSchemes" page-break-before="False" keep-with-next-strength="0" template-guid="8a78095c-9cb7-4fa0-bb14-ddd99c9e305d">
					<variables>
						<variable name="Scheme1Description">((Digita.AccountsPro.BO.Client.DataStructure.PageListItem)
reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*")[0]).Name
</variable>
					</variables>
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Pension scheme 1" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('905').HasTransactions and FRSSE = false" enabled="Conditional" section-name="FRS17PensionScheme1" page-break-before="False" keep-with-next-strength="0" template-guid="38bd6276-ea46-4722-9331-59baa04eaf2a">
						<template><add-to-body>
</add-to-body></template>
						<report-template version="12" name="Details of scheme" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme1Details" page-break-before="False" keep-with-next-strength="1" template-guid="cb5a7328-f3d8-457a-a039-fca3056a9db7">
							<template><add-to-body>
  <para para-alignment="Full" font-style="+bold" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline xbrl-concept="uk-gaap:NameDefinedBenefitScheme" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1">
      <data base-style="Title">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[0]|SchemeDetails|Name|Current Period")[0].Value</data>
    </inline>
  </para>
</add-to-body></template>
							<report-template version="12" name="Description of scheme" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme1Description" page-break-before="False" keep-with-next-strength="0" template-guid="697cb645-8de4-4d36-a06a-1fa07339ab78">
								<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:DescriptionDefinedBenefitScheme" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[0]|SchemeDetails|Description|Current Period")[0].Value</data>
  </para>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Contributions" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Conditional" section-name="FRS17PensionScheme1Contributions" page-break-before="False" keep-with-next-strength="0" template-guid="def6fa88-fbbf-4ea1-a8d5-c6f333ae79b8">
								<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Contributions<inline condition="(reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|SchemeDetails|Contribution|Current Period&quot;)[0].Value &gt;=0 and&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|SchemeDetails|Contribution|Prior Period&quot;)[0].Value &gt;=0) )&#xD;&#xA;&#xD;&#xA;or&#xD;&#xA;&#xD;&#xA;(reportHelper.HasPriorPeriod=false and&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|SchemeDetails|Contribution|Current Period&quot;)[0].Value &gt;=0)"><ws /> payable</inline><inline condition="(reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|SchemeDetails|Contribution|Current Period&quot;)[0].Value &lt;0 and&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|SchemeDetails|Contribution|Prior Period&quot;)[0].Value &lt;0) )&#xD;&#xA;&#xD;&#xA;or&#xD;&#xA;(reportHelper.HasPriorPeriod=false and&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|SchemeDetails|Contribution|Current Period&quot;)[0].Value &lt;0)"><ws /> (prepaid)</inline><inline condition="reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|SchemeDetails|Contribution|Current Period&quot;)[0].Value &gt;=0 and&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|SchemeDetails|Contribution|Prior Period&quot;)[0].Value &lt;0)"><ws /> payable/(prepaid)</inline><inline condition="reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|SchemeDetails|Contribution|Current Period&quot;)[0].Value &lt;0 and&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|SchemeDetails|Contribution|Prior Period&quot;)[0].Value &gt;=0)"><ws /> (prepaid)/payable</inline><ws /> to the pension scheme at the end of the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> are <ws /><inline xbrl-concept="uk-gaap:OutstandingPre-paidContributionsToDefinedBenefitSchemeBalanceSheetDate" xbrl-period="EndCurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[0]|SchemeDetails|Contribution|Current Period")[0].Value</data></inline><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.PriorPeriod.EndDate.Value.Year</data><ws /> - <ws /><inline xbrl-concept="uk-gaap:OutstandingPre-paidContributionsToDefinedBenefitSchemeBalanceSheetDate" xbrl-period="EndPriorPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[0]|SchemeDetails|Contribution|Prior Period")[0].Value</data></inline>
)</inline>
.
<br /><br /><inline xbrl-concept="uk-gaap:StatementOnExpectedFutureContributionsToDefinedBenefitSchemeByEmployerDuringFollowingYear" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1">The total contributions in the next year are expected to be <ws /><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[0]|SchemeDetails|DisclosedBy|Current Period&quot;)[0].Value = 'Amount'"><data>reporting.CurrentClient.CurrencySymbol</data></inline><data base-style="Number">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[0]|SchemeDetails|FutureContribution|Current Period")[0].Value

</data><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[0]|SchemeDetails|DisclosedBy|Current Period&quot;)[0].Value = '%'">% of pensionable earnings</inline>
.</inline></para>
</add-to-body></template>
							</report-template>
						</report-template>
						<report-template version="12" name="Scheme assets and liabilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme1AssetsAndLiabilities" page-break-before="False" keep-with-next-strength="0" template-guid="0fa82d19-ce5a-4bb4-8533-d9a188fe8c48">
							<template><add-to-body>
</add-to-body></template>
							<report-template version="12" name="Reconciliation of scheme assets and liabilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme1Reconciliation" page-break-before="False" keep-with-next-strength="1" template-guid="371f17d8-6142-4cf2-a4d8-d526c7d5c9d5">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Reconciliation of scheme assets and liabilities to assets and liabilities recognised</inline>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
The amounts recognised in the balance sheet are as follows:</para>
</add-to-body></template>
								<report-template version="12" name="Reconciliation of scheme assets and liabilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme1ReconciliationValues" page-break-before="False" keep-with-next-strength="0" template-guid="8dfff19f-19bb-49e8-9dcd-a3c92ee751df">
									<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ActuarialFairValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Fair value of scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[0]|Assets|FairValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:FairValueAssetsDefinedBenefitScheme')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ActuarialPresentValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Present value of scheme liabilities&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Reconciliation|Calculation|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:DefinedBenefitObligationPresentValue')" />
    <var name="section2subsection1XBRLReverseSignSet" pre="section2subsection1.SetReverseSign(true)" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('ActuarialValue', '&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section3item1" pre="section3.AddTotalItem(section1)" />
    <var name="section3item2" pre="section3.AddTotalItem(section2)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
    <var name="section3XBRLReverseSignSet" pre="section3.SetReverseSign(true)" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <var name="section4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ReconcilingItems', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section4subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Unrecognised past service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Reconciliation|Reconciliation|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection1subsectionitem1add" pre="section4subsection1.AddItem(section4subsection1subsectionitem1)" />
    <var name="section4subsection1XBRLConceptNameSet" pre="section4subsection1.SetConceptName('uk-gaap:PastServiceCostNotRecognisedInBalanceSheet')" />
    <var name="section4subsection1add" pre="section4.AddItem(section4subsection1)" />
    <var name="section4subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amounts not recognised as an asset under FRS 17 paragraph 41&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Reconciliation|Reconciliation|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection2subsectionitem1add" pre="section4subsection2.AddItem(section4subsection2subsectionitem1)" />
    <var name="section4subsection2XBRLConceptNameSet" pre="section4subsection2.SetConceptName('uk-gaap:AmountNotRecognisedAsAnAssetBecauseIAS58bLimit')" />
    <var name="section4subsection2XBRLReverseSignSet" pre="section4subsection2.SetReverseSign(true)" />
    <var name="section4subsection2add" pre="section4.AddItem(section4subsection2)" />
    <var name="section4subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other amounts recognised in the balance sheet&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Reconciliation|Reconciliation|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection3subsectionitem1add" pre="section4subsection3.AddItem(section4subsection3subsectionitem1)" />
    <var name="section4subsection3XBRLConceptNameSet" pre="section4subsection3.SetConceptName('uk-gaap:OtherAssetsLiabilitiesRelatedToDefinedBenefitSchemeRecognisedInBalanceSheet')" />
    <var name="section4subsection3add" pre="section4.AddItem(section4subsection3)" />
    <var name="section4subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other amounts not recognised in the balance sheet&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Reconciliation|Reconciliation|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem1add" pre="section4subsection4.AddItem(section4subsection4subsectionitem1)" />
    <var name="section4subsection4add" pre="section4.AddItem(section4subsection4)" />
    <var name="section4add" pre="smartTable.AddTableBlock(section4)" />
    <var name="section5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('SurplusDeficit', '&lt;para&gt;Defined benefit pension scheme &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;surplus/(deficit)&amp;quot;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section5item1" pre="section5.AddTotalItem(section3)" />
    <var name="section5item2" pre="section5.AddTotalItem(section4)" />
    <var name="section5XBRLConceptNameSet" pre="section5.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
    <var name="section5XBRLReverseSignSet" pre="section5.SetReverseSign(true)" />
    <var name="section5add" pre="smartTable.AddTableBlock(section5)" />
    <var name="section6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('RelatedDeferredTax', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Related deferred tax &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;asset/(liability)&amp;quot;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section6subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Deferred tax on pension asset/liability&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section6subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('905.80', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem1add" pre="section6subsection1.AddItem(section6subsection1subsectionitem1)" />
    <var name="section6subsection1add" pre="section6.AddItem(section6subsection1)" />
    <var name="section6XBRLConceptNameSet" pre="section6.SetConceptName('uk-gaap:DeferredTaxLiabilityAssetRelatedToDefinedBenefitScheme')" />
    <var name="section6XBRLReverseSignSet" pre="section6.SetReverseSign(true)" />
    <var name="section6add" pre="smartTable.AddTableBlock(section6)" />
    <var name="section7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('NetAssetLiability', '&lt;para&gt;Net &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;asset/(liability)&amp;quot;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; in the balance sheet&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section7item1" pre="section7.AddTotalItem(section5)" />
    <var name="section7item2" pre="section7.AddTotalItem(section6)" />
    <var name="section7XBRLConceptNameSet" pre="section7.SetConceptName('uk-gaap:RetirementBenefitObligationsSurplus')" />
    <var name="section7XBRLReverseSignSet" pre="section7.SetReverseSign(true)" />
    <var name="section7add" pre="smartTable.AddTableBlock(section7)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
								</report-template>
							</report-template>
							<report-template version="12" name="Assets" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme1Assets" page-break-before="False" keep-with-next-strength="0" template-guid="911a0108-ba35-4633-8324-6071f61d53d1">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Scheme assets</inline>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Changes in the fair value of scheme assets are as follows:</para>
</add-to-body></template>
								<report-template version="12" name="Changes in fair value" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme1ChangesInFairValue" page-break-before="False" keep-with-next-strength="0" template-guid="75108b87-3cc8-4446-9298-996cd48709a2">
									<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('Current')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('Prior')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('AssetMovement', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Fair value at end of &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Fair value at start of &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|Movement|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:FairValueAssetsDefinedBenefitScheme')" />
    <var name="section1subsection1XBRLPeriodSet" pre="section1subsection1.SetPeriod('Start')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expected return on assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|Movement|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:ExpenseIncomeFromExpectedReturnOnAssetsDefinedBenefitScheme')" />
    <var name="section1subsection2XBRLPeriodSet" pre="section1subsection2.SetPeriod('Duration')" />
    <var name="section1subsection2XBRLReverseSignSet" pre="section1subsection2.SetReverseSign(true)" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Actuarial gains and losses&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|Movement|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:ActuarialGainLossOnAssetsDefinedBenefitScheme')" />
    <var name="section1subsection3XBRLPeriodSet" pre="section1subsection3.SetPeriod('Duration')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Foreign exchange differences&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|Movement|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:IncreaseDecreaseInAssetsDefinedBenefitSchemeFromForeignExchangeDifferences')" />
    <var name="section1subsection4XBRLPeriodSet" pre="section1subsection4.SetPeriod('Duration')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Employer contributions&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|Movement|Rows|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:ContributionsToDefinedBenefitSchemeByEmployer')" />
    <var name="section1subsection5XBRLPeriodSet" pre="section1subsection5.SetPeriod('Duration')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Contributions by scheme participants&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|Movement|Rows|*:item[5]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:ContributionsByDefinedBenefitSchemeParticipants')" />
    <var name="section1subsection6XBRLPeriodSet" pre="section1subsection6.SetPeriod('Duration')" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Benefits paid&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|Movement|Rows|*:item[6]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:BenefitsPaidRelatedToDefinedBenefitScheme')" />
    <var name="section1subsection7XBRLPeriodSet" pre="section1subsection7.SetPeriod('Duration')" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Assets acquired in business combinations&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|Movement|Rows|*:item[7]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
    <var name="section1subsection8XBRLConceptNameSet" pre="section1subsection8.SetConceptName('uk-gaap:IncreaseDecreaseInAssetsDefinedBenefitSchemeFromBusinessCombinationsDisposals')" />
    <var name="section1subsection8XBRLPeriodSet" pre="section1subsection8.SetPeriod('Duration')" />
    <var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
    <var name="section1subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Assets distributed on settlements&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|Movement|Rows|*:item[8]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection9subsectionitem1add" pre="section1subsection9.AddItem(section1subsection9subsectionitem1)" />
    <var name="section1subsection9XBRLConceptNameSet" pre="section1subsection9.SetConceptName('uk-gaap:IncreaseDecreaseInAssetsDefinedBenefitSchemeFromSettlements')" />
    <var name="section1subsection9XBRLPeriodSet" pre="section1subsection9.SetPeriod('Duration')" />
    <var name="section1subsection9add" pre="section1.AddItem(section1subsection9)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:FairValueAssetsDefinedBenefitScheme')" />
    <var name="section1XBRLPeriodSet" pre="section1.SetPeriod('End')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
								</report-template>
								<report-template version="12" name="Asset categories" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme1AssetAnalysis" page-break-before="False" keep-with-next-strength="1" template-guid="00cf10a7-b7b9-4606-b116-2dd6cb8257c0">
									<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Analysis of assets</inline>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The major categories of scheme assets<inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[0]|Assets|DisclosedBy|Current Period&quot;)[0].Value = '%'"><ws /> as a percentage of total scheme assets</inline><ws /> are as follows:</para>
</add-to-body></template>
									<report-template version="12" name="Asset categories expressed as an amount" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[0]|Assets|DisclosedBy|Current Period&quot;)[0].Value = 'Amount'" enabled="Conditional" section-name="FRS17PensionScheme1AssetCategories£" page-break-before="False" keep-with-next-strength="0" template-guid="700b79e5-3a50-4e43-b9f9-1615fd649fc6">
										<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('AssetFairValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Equity instruments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|Category|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:EquitiesHeldInPensionSchemeFairValue')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Debt instruments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|Category|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:DebtInstrumentsBondsHeldInPensionSchemeFairValue')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Property&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|Category|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:PropertyHeldInPensionSchemeFairValue')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cash&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|Category|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:CashHeldInPensionSchemeFairValue')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|Category|Rows|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:OtherAssetsHeldInPensionSchemeFairValue')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:FairValueAssetsDefinedBenefitScheme')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
									</report-template>
									<report-template version="12" name="Asset categories expressed as a %" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[0]|Assets|DisclosedBy|Current Period&quot;)[0].Value = '%'" enabled="Conditional" section-name="FRS17PensionScheme1AssetCategories%" page-break-before="False" keep-with-next-strength="0" template-guid="da65fb4b-38f9-48bf-b9a5-106e9df8aa69">
										<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Table Text Percentage')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Table Text Percentage')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Table Text Percentage')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Table Text Percentage Final Value')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;%&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;%&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('AssetFairValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Equity instruments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|Category|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:EquitiesHeldInPensionSchemePercentage')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Debt instruments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|Category|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:DebtInstrumentsBondsHeldInPensionSchemePercentage')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Property&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|Category|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:PropertyHeldInPensionSchemePercentage')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cash&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|Category|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:CashHeldInPensionSchemePercentage')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|Category|Rows|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:OtherAssetsHeldInPensionSchemePercentage')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
									</report-template>
								</report-template>
								<report-template version="12" name="Actual return on scheme assets" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Conditional" section-name="FRS17PensionScheme1ActualReturnOnSchemeAssets" page-break-before="False" keep-with-next-strength="0" template-guid="ac8229fc-2a1a-48ce-a316-b710e1ac5e7b">
									<template><add-to-body>
  <para base-style="Title" font-style="+italic" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          Actual return on scheme's assets
        </para>
</add-to-body></template>
									<report-template version="12" name="Actual return on scheme assets" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme1AssetActualReturn" page-break-before="False" keep-with-next-strength="1" template-guid="32f3d60b-c2ad-43b8-bc2a-0825d68192ee">
										<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ActualReturn', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Actual return on scheme assets&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[0]|Assets|ActualReturn', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:ActualReturnOnAssetsBenefitSchemeScheme')" />
    <var name="section1XBRLDimensionsSet" pre="section1.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="section1XBRLHypercubeNameSet" pre="section1.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
									</report-template>
								</report-template>
								<report-template version="12" name="No financial instruments or property occupied" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|OwnFinancialInstruments|Rows|*&quot;,null, true).Count = 0) and (reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|UsedByEntity|Rows|*&quot;,null, true).Count = 0)" enabled="Conditional" section-name="FRS17PensionScheme1NoFinancialInstrumentsOrPropertyOccupied" page-break-before="False" keep-with-next-strength="0" template-guid="95bd86ef-387f-4e16-8898-bbe115d881ad">
									<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The pension scheme has not invested<inline condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|OwnFinancialInstruments|Rows|*&quot;,null, true).Count = 0)"><ws /> in any of the company's own financial instruments</inline><inline condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|OwnFinancialInstruments|Rows|*&quot;,null, true).Count = 0) and (reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|UsedByEntity|Rows|*&quot;,null, true).Count = 0)"><ws /> or</inline><inline condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|UsedByEntity|Rows|*&quot;,null, true).Count = 0)"><ws /> in properties or other assets used by the company</inline>
.</para>
</add-to-body></template>
								</report-template>
								<report-template version="12" name="Own financial instruments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|OwnFinancialInstruments|Rows|*&quot;,null, true).Count &gt; 0" enabled="Conditional" section-name="FRS17PensionScheme1AssetOwnFinancialInstruments" page-break-before="False" keep-with-next-strength="1" template-guid="e8fc8240-c163-4f4e-a824-9059c7fe1a01">
									<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The entity's own financial instruments included in the fair value of scheme assets are as follows:</para>
</add-to-body></template>
									<report-template version="12" name="Own financial instruments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme1AssetOwnFinancialInstrumentsValues" page-break-before="False" keep-with-next-strength="0" template-guid="836a432d-741f-44e0-91f2-af10be745c46">
										<template><add-to-body>
  <table condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|OwnFinancialInstruments|Rows|*')[0].HasValue">
    <column-details column-number="1" free-space="100" align="bottom-left" />
    <column-details column-number="2" width="2mm" align="bottom-right" />
    <column-details column-number="3" width="22mm" align="bottom-right" />
    <column-details column-number="4" width="2mm" align="bottom-right" />
    <column-details column-number="5" width="2mm" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
    <column-details column-number="6" width="22mm" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
    <column-details column-number="7" width="2mm" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
    <table-row base-style="Table Column Heading">
      <table-cell>
      </table-cell>
      <table-cell>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data para-alignment="Centre">if reportHelper.IsAnnual then reportHelper.CurrentPeriod.EndDate.Value.ToString('yyyy')

else

reportHelper.CurrentPeriod.EndDate.Value.ToString('d MMMM yyyy')</data>
          <inline para-alignment="Centre">
          </inline>
          <br />
          <data para-alignment="Centre">
					reportHelper.StatutoryNoteScalingHeader
				</data>
          <inline para-alignment="Centre">
          </inline>
        </para>
      </table-cell>
      <table-cell>
      </table-cell>
      <table-cell>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data para-alignment="Centre">if reportHelper.IsAnnual then reportHelper.ComparativePeriod(1).EndDate.Value.ToString('yyyy')

else

reportHelper.ComparativePeriod(1).EndDate.Value.ToString('d MMMM yyyy')</data>
          <inline para-alignment="Centre">
          </inline>
          <br />
          <data para-alignment="Centre">
					reportHelper.StatutoryNoteScalingHeader
				</data>
          <inline para-alignment="Centre">
          </inline>
        </para>
      </table-cell>
    </table-row>
    <table-row-iterator iterate-over="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|OwnFinancialInstruments|Rows|*')" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
      <table-row xbrl-concept="uk-gaap:EntityFinancialInstrumentIncludedInPensionSchemeGrouping" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1">
        <table-cell>
          <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <inline xbrl-concept="uk-gaap:DescriptionEntityFinancialInstrumentIncludedInPensionScheme" xbrl-period="CurrentPeriod">
              <data>reporting.queries.client.lookupaccountingperioddata(item, '*|*|Current Period')[0].Value</data>
            </inline>
          </para>
        </table-cell>
        <table-cell />
        <table-cell>
          <para para-alignment="Left" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <inline xbrl-concept="uk-gaap:FairValueEntityFinancialInstrumentIncludedInPensionScheme" xbrl-period="CurrentPeriod">
              <data base-style="Table Text">reporting.queries.client.lookupaccountingperioddata(item, '*|*|Current Period')[1].Value / reportHelper.StatutoryNoteScaling</data>
            </inline>
          </para>
        </table-cell>
        <table-cell />
        <table-cell />
        <table-cell>
          <para para-alignment="Right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <data base-style="Table Text">reporting.queries.client.lookupaccountingperioddata(item, '*|*|Prior Period')[0].Value / reportHelper.StatutoryNoteScaling</data>
          </para>
        </table-cell>
        <table-cell />
      </table-row>
    </table-row-iterator>
    <table-row>
      <table-cell />
      <table-cell />
      <table-cell bottom-border-style="Doubleline" bottom-border-size="2pt">
      </table-cell>
      <table-cell />
      <table-cell />
      <table-cell bottom-border-style="Doubleline" bottom-border-size="2pt">
      </table-cell>
      <table-cell />
    </table-row>
  </table>
</add-to-body></template>
									</report-template>
								</report-template>
								<report-template version="12" name="Property occupied" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|UsedByEntity|Rows|*&quot;,null, true).Count &gt; 0" enabled="Conditional" section-name="FRS17PensionScheme1AssetPropertyOccupied" page-break-before="False" keep-with-next-strength="1" template-guid="96836b82-abc6-4c62-a1df-9325676d2b76">
									<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The property occupied by, or other asset used by, the entity included in the fair value of scheme assets are as follows:</para>
</add-to-body></template>
									<report-template version="12" name="Property occupied" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme1AssetPropertyOccupiedValues" page-break-before="False" keep-with-next-strength="0" template-guid="9f298e6f-2f9e-40df-9f07-eb411685fd27">
										<template><add-to-body>
  <table condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|UsedByEntity|Rows|*')[0].HasValue">
    <column-details column-number="1" free-space="100" align="bottom-left" />
    <column-details column-number="2" width="2mm" align="bottom-right" />
    <column-details column-number="3" width="22mm" align="bottom-right" />
    <column-details column-number="4" width="2mm" align="bottom-right" />
    <column-details column-number="5" width="2mm" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
    <column-details column-number="6" width="22mm" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
    <column-details column-number="7" width="2mm" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
    <table-row base-style="Table Column Heading">
      <table-cell>
      </table-cell>
      <table-cell>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data para-alignment="Centre">if reportHelper.IsAnnual then reportHelper.CurrentPeriod.EndDate.Value.ToString('yyyy')

else

reportHelper.CurrentPeriod.EndDate.Value.ToString('d MMMM yyyy')</data>
          <inline para-alignment="Centre">
          </inline>
          <br />
          <data para-alignment="Centre">
					reportHelper.StatutoryNoteScalingHeader
				</data>
          <inline para-alignment="Centre">
          </inline>
        </para>
      </table-cell>
      <table-cell>
      </table-cell>
      <table-cell>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data para-alignment="Centre">if reportHelper.IsAnnual then reportHelper.ComparativePeriod(1).EndDate.Value.ToString('yyyy')

else

reportHelper.ComparativePeriod(1).EndDate.Value.ToString('d MMMM yyyy')</data>
          <inline para-alignment="Centre">
          </inline>
          <br />
          <data para-alignment="Centre">
					reportHelper.StatutoryNoteScalingHeader
				</data>
          <inline para-alignment="Centre">
          </inline>
        </para>
      </table-cell>
    </table-row>
    <table-row-iterator iterate-over="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|UsedByEntity|Rows|*')" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
      <table-row xbrl-concept="uk-gaap:PropertyInPensionSchemeOccupiedByEntityOrOtherAssetsInSchemeUsedByEntityGrouping" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1">
        <table-cell>
          <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <inline xbrl-concept="uk-gaap:DescriptionPropertyOrOtherAssetIncludedInPensionSchemeWhichUsedByEntity" xbrl-period="CurrentPeriod">
              <data>reporting.queries.client.lookupaccountingperioddata(item, '*|*|Current Period')[0].Value</data>
            </inline>
          </para>
        </table-cell>
        <table-cell />
        <table-cell>
          <para para-alignment="Right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <inline para-alignment="Left" xbrl-concept="uk-gaap:FairValuePropertyOrOtherAssetIncludedInPensionSchemeUsedByEntity" xbrl-period="CurrentPeriod">
              <data base-style="Table Text">reporting.queries.client.lookupaccountingperioddata(item, '*|*|Current Period')[1].Value / reportHelper.StatutoryNoteScaling</data>
              <inline para-alignment="Left">
              </inline>
            </inline>
          </para>
        </table-cell>
        <table-cell />
        <table-cell />
        <table-cell>
          <para para-alignment="Right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <data base-style="Table Text">reporting.queries.client.lookupaccountingperioddata(item, '*|*|Prior Period')[0].Value / reportHelper.StatutoryNoteScaling</data>
          </para>
        </table-cell>
        <table-cell />
      </table-row>
    </table-row-iterator>
    <table-row>
      <table-cell />
      <table-cell />
      <table-cell bottom-border-style="Doubleline" bottom-border-size="2pt">
      </table-cell>
      <table-cell />
      <table-cell />
      <table-cell bottom-border-style="Doubleline" bottom-border-size="2pt">
      </table-cell>
      <table-cell />
    </table-row>
  </table>
</add-to-body></template>
									</report-template>
								</report-template>
								<report-template version="12" name="Basis" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme1AssetBasis" page-break-before="False" keep-with-next-strength="0" template-guid="107c404f-b387-4712-a804-66f0683dba41">
									<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[0]|Assets|Basis|Current Period")[0].Value</data>
  </para>
</add-to-body></template>
								</report-template>
							</report-template>
							<report-template version="12" name="Liabilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme1Liabilities" page-break-before="False" keep-with-next-strength="1" template-guid="983a3897-585f-4215-a76c-da19bea4764f">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Scheme liabilities</inline>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Changes in the present value of scheme liabilities are as follows:</para>
</add-to-body></template>
								<report-template version="12" name="Changes in present value" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme1ChangesInPresentValue" page-break-before="False" keep-with-next-strength="0" template-guid="aa3644a0-9943-4a6b-9099-14dc4861d900">
									<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('Current')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('Prior')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('LiabilityMovement', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Present value at end of &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Present value at start of &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Liabilities|Movement|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:DefinedBenefitObligationPresentValue')" />
    <var name="section1subsection1XBRLDimensionsSet" pre="section1subsection1.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="section1subsection1XBRLHypercubeNameSet" pre="section1subsection1.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection1XBRLPeriodSet" pre="section1subsection1.SetPeriod('Start')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Liabilities|Movement|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:CurrentServiceCostDefinedBenefitScheme')" />
    <var name="section1subsection2XBRLDimensionsSet" pre="section1subsection2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="section1subsection2XBRLHypercubeNameSet" pre="section1subsection2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection2XBRLPeriodSet" pre="section1subsection2.SetPeriod('Duration')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Past service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Liabilities|Movement|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:PastServiceCostDefinedBenefitScheme')" />
    <var name="section1subsection3XBRLDimensionsSet" pre="section1subsection3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="section1subsection3XBRLHypercubeNameSet" pre="section1subsection3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection3XBRLPeriodSet" pre="section1subsection3.SetPeriod('Duration')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Actuarial gains and losses&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Liabilities|Movement|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:ActuarialGainLossOnLiabilitiesDefinedBenefitScheme')" />
    <var name="section1subsection4XBRLPeriodSet" pre="section1subsection4.SetPeriod('Duration')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Foreign exchange differences&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Liabilities|Movement|Rows|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:IncreaseDecreaseInLiabilitiesDefinedBenefitSchemeFromForeignExchangeDifferences')" />
    <var name="section1subsection5XBRLDimensionsSet" pre="section1subsection5.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="section1subsection5XBRLHypercubeNameSet" pre="section1subsection5.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection5XBRLPeriodSet" pre="section1subsection5.SetPeriod('Duration')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Interest cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Liabilities|Movement|Rows|*:item[5]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:ExpenseIncomeFromInterestCostDefinedBenefitScheme')" />
    <var name="section1subsection6XBRLDimensionsSet" pre="section1subsection6.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="section1subsection6XBRLHypercubeNameSet" pre="section1subsection6.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection6XBRLPeriodSet" pre="section1subsection6.SetPeriod('Duration')" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Benefits paid&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Liabilities|Movement|Rows|*:item[6]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:BenefitsPaidRelatedToDefinedBenefitScheme')" />
    <var name="section1subsection7XBRLDimensionsSet" pre="section1subsection7.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="section1subsection7XBRLHypercubeNameSet" pre="section1subsection7.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection7XBRLPeriodSet" pre="section1subsection7.SetPeriod('Duration')" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Contributions by scheme participants&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Liabilities|Movement|Rows|*:item[7]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
    <var name="section1subsection8XBRLConceptNameSet" pre="section1subsection8.SetConceptName('uk-gaap:ContributionsByDefinedBenefitSchemeParticipants')" />
    <var name="section1subsection8XBRLDimensionsSet" pre="section1subsection8.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="section1subsection8XBRLHypercubeNameSet" pre="section1subsection8.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection8XBRLPeriodSet" pre="section1subsection8.SetPeriod('Duration')" />
    <var name="section1subsection8XBRLReverseSignSet" pre="section1subsection8.SetReverseSign(true)" />
    <var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
    <var name="section1subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Liabilities assumed in business combinations&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Liabilities|Movement|Rows|*:item[8]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection9subsectionitem1add" pre="section1subsection9.AddItem(section1subsection9subsectionitem1)" />
    <var name="section1subsection9XBRLConceptNameSet" pre="section1subsection9.SetConceptName('uk-gaap:IncreaseDecreaseInLiabilitiesDefinedBenefitSchemeFromBusinessCombinations')" />
    <var name="section1subsection9XBRLDimensionsSet" pre="section1subsection9.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="section1subsection9XBRLHypercubeNameSet" pre="section1subsection9.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection9XBRLPeriodSet" pre="section1subsection9.SetPeriod('Duration')" />
    <var name="section1subsection9add" pre="section1.AddItem(section1subsection9)" />
    <var name="section1subsection10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Liabilities extinguished on settlements&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection10subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Liabilities|Movement|Rows|*:item[9]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection10subsectionitem1add" pre="section1subsection10.AddItem(section1subsection10subsectionitem1)" />
    <var name="section1subsection10XBRLConceptNameSet" pre="section1subsection10.SetConceptName('uk-gaap:IncreaseDecreaseInLiabilitiesDefinedBenefitSchemeFromSettlements')" />
    <var name="section1subsection10XBRLDimensionsSet" pre="section1subsection10.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="section1subsection10XBRLHypercubeNameSet" pre="section1subsection10.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection10XBRLPeriodSet" pre="section1subsection10.SetPeriod('Duration')" />
    <var name="section1subsection10add" pre="section1.AddItem(section1subsection10)" />
    <var name="section1subsection11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Effect of curtailments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection11subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Liabilities|Movement|Rows|*:item[10]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection11subsectionitem1add" pre="section1subsection11.AddItem(section1subsection11subsectionitem1)" />
    <var name="section1subsection11XBRLConceptNameSet" pre="section1subsection11.SetConceptName('uk-gaap:IncreaseDecreaseInLiabilitiesDefinedBenefitSchemeFromCurtailments')" />
    <var name="section1subsection11XBRLDimensionsSet" pre="section1subsection11.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="section1subsection11XBRLHypercubeNameSet" pre="section1subsection11.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection11XBRLPeriodSet" pre="section1subsection11.SetPeriod('Duration')" />
    <var name="section1subsection11add" pre="section1.AddItem(section1subsection11)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:DefinedBenefitObligationPresentValue')" />
    <var name="section1XBRLDimensionsSet" pre="section1.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="section1XBRLHypercubeNameSet" pre="section1.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1XBRLPeriodSet" pre="section1.SetPeriod('End')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('UnfundedFundedLiabilities', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Analysed as:&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Present value arising from unfunded schemes&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Liabilities|UnfundedPresentValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:DefinedBenefitObligationFromSchemesThatAreWhollyUnfundedPresentValue')" />
    <var name="section2subsection1XBRLDimensionsSet" pre="section2subsection1.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="section2subsection1XBRLHypercubeNameSet" pre="section2subsection1.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section2subsection1XBRLPeriodSet" pre="section2subsection1.SetPeriod('End')" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Present value arising from wholly or partly funded schemes&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Liabilities|FundedPresentValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2XBRLConceptNameSet" pre="section2subsection2.SetConceptName('uk-gaap:DefinedBenefitObligationFromSchemesThatAreWhollyOrPartlyFundedPresentValue')" />
    <var name="section2subsection2XBRLDimensionsSet" pre="section2subsection2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="section2subsection2XBRLHypercubeNameSet" pre="section2subsection2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section2subsection2XBRLPeriodSet" pre="section2subsection2.SetPeriod('End')" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2XBRLConceptNameSet" pre="section2.SetConceptName('uk-gaap:DefinedBenefitObligationPresentValue')" />
    <var name="section2XBRLPeriodSet" pre="section2.SetPeriod('End')" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
								</report-template>
							</report-template>
						</report-template>
						<report-template version="12" name="Principal actuarial assumptions" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme1Assumptions" page-break-before="False" keep-with-next-strength="1" template-guid="fcf68b52-37a3-4960-b264-80d9fd975450">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Principal actuarial assumpions</inline>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The principal actuarial assumpions at the balance sheet date are as follows:</para>
</add-to-body></template>
							<report-template version="12" name="Principal actuarial assumptions" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme1AssumptionsValues" page-break-before="False" keep-with-next-strength="0" template-guid="821dc1d8-5d2c-49bd-84df-f0b0c440334b">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Table Text Percentage')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Table Text Percentage')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Table Text Percentage')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Table Text Percentage Final Value')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;%&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;%&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ActuarialAssumptions', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Discount rate&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assumptions|ActuarialAssumptions|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:RateUsedToDiscountSchemeLiabilities')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Future salary increases&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assumptions|ActuarialAssumptions|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:AssumedRateIncreasePensionableSalaries')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Future pension increases&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assumptions|ActuarialAssumptions|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:AssumedRateIncreasePensionsInPaymentDeferredPensions')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Inflation&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assumptions|ActuarialAssumptions|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:AssumedRateInflation')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Proportion of employees opting for early retirement&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assumptions|ActuarialAssumptions|Rows|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:AssumedProportionEmployeesOptingForEarlyRetirement')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expected return on scheme assets - equity&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assumptions|ActuarialAssumptions|Rows|*:item[5]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:EquitiesHeldInPensionSchemeExpectedRateReturn')" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expected return on scheme assets - cash&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assumptions|ActuarialAssumptions|Rows|*:item[6]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:CashHeldInPensionSchemeExpectedRateReturn')" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expected return on scheme assets - property&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assumptions|ActuarialAssumptions|Rows|*:item[7]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
    <var name="section1subsection8XBRLConceptNameSet" pre="section1subsection8.SetConceptName('uk-gaap:PropertyHeldInPensionSchemeExpectedRateReturn')" />
    <var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
    <var name="section1subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expected return on scheme assets - other&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assumptions|ActuarialAssumptions|Rows|*:item[8]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection9subsectionitem1add" pre="section1subsection9.AddItem(section1subsection9subsectionitem1)" />
    <var name="section1subsection9XBRLConceptNameSet" pre="section1subsection9.SetConceptName('uk-gaap:ExpectedRateReturnOnTypeOtherAssetHeldInPensionScheme')" />
    <var name="section1subsection9add" pre="section1.AddItem(section1subsection9)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Mortality" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme1Mortality" page-break-before="False" keep-with-next-strength="0" template-guid="d069399e-8015-4e3c-a1f9-21209b85752c">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Post retirement mortality assumptions</inline>
  </para>
</add-to-body></template>
								<report-template version="12" name="Mortality" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme1MortalityValues" page-break-before="False" keep-with-next-strength="0" template-guid="230a4326-6247-448f-825a-2be8186e4128">
									<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'MyFirstTable', 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Table Text Percentage')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Table Text Percentage')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Table Text Percentage')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Table Text Percentage Final Value')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;Years&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;Years&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Mortality', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current pensioners at retirement age - male&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assumptions|MortalityRates|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:LongevityInYearsRetirementForCurrentUKPensionersMen')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current pensioners at retirement age - female&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assumptions|MortalityRates|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:LongevityInYearsRetirementForCurrentUKPensionersWomen')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Future pensioners at retirement age - male&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assumptions|MortalityRates|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:LongevityInYearsRetirementForFutureUKPensionersMen')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Future pensioners at retirement age - female&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assumptions|MortalityRates|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:LongevityInYearsRetirementForFutureUKPensionersWomen')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
								</report-template>
							</report-template>
						</report-template>
						<report-template version="12" name="Amounts recognised in profit and loss" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme1ProfitAndLoss" page-break-before="False" keep-with-next-strength="1" template-guid="cec528d4-6037-4392-b27d-20066281ed58">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Amounts recognised in the profit and loss account</inline>
  </para>
</add-to-body></template>
							<report-template version="12" name="Amounts recognised in operating profit" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme1OperatingProfitValues" page-break-before="False" keep-with-next-strength="0" template-guid="1850fd36-9835-4263-a1e6-fd7d533123ba">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('RecognisedInOperatingProfitLoss', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Amounts recognised in &lt;ws/&gt;&lt;data&gt;reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(1m,1m).ComparativesUnfiltered.AllCategoriesRoot,&amp;apos;OpProfit&amp;apos;).Description.ToLower()&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Recognised in arriving at operating &lt;ws/&gt;&lt;data&gt;reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(1m,1m).ComparativesUnfiltered.AllCategoriesRoot,&amp;apos;OpProfit&amp;apos;).Description.ToLower()&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:CurrentServiceCostDefinedBenefitScheme')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Past service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:PastServiceCostDefinedBenefitScheme')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Effect of FRS 17 paragraph 41&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:IncomeExpenseFromAmountsNotRecognisedAsAnAssetBecauseIAS58bLimit')" />
    <var name="section1subsection3XBRLDimensionsSet" pre="section1subsection3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="section1subsection3XBRLHypercubeNameSet" pre="section1subsection3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection3XBRLReverseSignSet" pre="section1subsection3.SetReverseSign(true)" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Losses (gains) on curtailments and settlements&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:ExpenseIncomeFromDefinedBenefitSchemeSettlementsCurtailments')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:ChargeCreditToOperatingProfitFromDefinedBenefitScheme')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('RecognisedInFinance', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Amounts recognised in other finance &lt;ws/&gt;&lt;inline condition=&quot;(reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[0].Value &amp;lt; 0&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[1].Value &amp;lt; 0)&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;(reportHelper.HasPriorPeriod=false and&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[0].Value &amp;lt; 0)&#xD;&#xA;&quot;&gt;income&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;(reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[0].Value &amp;gt;= 0&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[1].Value &amp;gt;= 0)&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;(reportHelper.HasPriorPeriod=false and&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[0].Value &amp;gt;= 0)&#xD;&#xA;&quot;&gt;&lt;ws/&gt; cost&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[0].Value &amp;lt; 0&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[1].Value &amp;gt;= 0&#xD;&#xA;&quot;&gt;&lt;ws/&gt; (income)/cost&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[0].Value &amp;gt;= 0&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[1].Value &amp;lt; 0&#xD;&#xA;&quot;&gt;&lt;ws/&gt; cost/(income)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Recognised in other finance cost&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Interest&lt;inline condition=&quot;(reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Current Period&amp;quot;)[0].Value &amp;lt;0 and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Prior Period&amp;quot;)[0].Value &amp;lt;0)&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;(reportHelper.HasPriorPeriod=false and&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Current Period&amp;quot;)[0].Value &amp;lt; 0)&#xD;&#xA;&#xD;&#xA;&quot;&gt;&lt;ws/&gt; income&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;(reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Current Period&amp;quot;)[0].Value &amp;gt;=0 and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Prior Period&amp;quot;)[0].Value &amp;gt;=0)&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;(reportHelper.HasPriorPeriod=false and&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Current Period&amp;quot;)[0].Value &amp;gt;= 0)&#xD;&#xA;&#xD;&#xA;&quot;&gt;&lt;ws/&gt; cost&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Current Period&amp;quot;)[0].Value &amp;lt;0 and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Prior Period&amp;quot;)[0].Value &amp;gt;=0&#xD;&#xA;&#xD;&#xA;&quot;&gt;&lt;ws/&gt; (income)/cost&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Current Period&amp;quot;)[0].Value &amp;gt;=0 and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Prior Period&amp;quot;)[0].Value &amp;lt;0&#xD;&#xA;&quot;&gt;&lt;ws/&gt; cost/(income)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:ExpenseIncomeFromInterestCostDefinedBenefitScheme')" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expected return on scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2XBRLConceptNameSet" pre="section2subsection2.SetConceptName('uk-gaap:ExpenseIncomeFromExpectedReturnOnAssetsDefinedBenefitScheme')" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2XBRLConceptNameSet" pre="section2.SetConceptName('uk-gaap:ChargeCreditToFinanceChargesFromDefinedBenefitScheme')" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('RecognisedInProfitAndLoss', '&lt;para&gt;Total recognised in the profit and loss account&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.Always, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section3item1" pre="section3.AddTotalItem(section1)" />
    <var name="section3item2" pre="section3.AddTotalItem(section2)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:PensionCostsDefinedBenefitScheme')" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
						</report-template>
						<report-template version="12" name="Amounts recognised in the STRGL" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme1STRGL" page-break-before="False" keep-with-next-strength="1" template-guid="fbe602ab-95b7-4b6d-8a0e-be961072de50">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Amounts recognised in the statement of total recognised gains and losses</inline>
  </para>
</add-to-body></template>
							<report-template version="12" name="Amounts recognised in the STRGL" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme1STRGLValues" page-break-before="False" keep-with-next-strength="0" template-guid="d2e8fe4b-0c4b-46c1-b97d-df061269af0d">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Section1', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Actuarial gains and losses recognised in the Statement of Total Recognised Gains and Losses&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Actual return less expected return on scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|STRGL|STRGLAmounts|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:ExperienceGainLossArisingOnAssetsDefinedBenefitScheme')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Effect of FRS 17 paragraph 41&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|STRGL|STRGLAmounts|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:GainLossFromImpactFRS17.41LimitRecognisedInStatementTotalRecognisedGainsLosses')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Changes in assumptions&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|STRGL|STRGLAmounts|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:GainLossFromChangesInAssumptionsUnderlyingPresentValueDefinedBenefitSchemeLiabilities')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other actuarial gains (losses)&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|STRGL|STRGLAmounts|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:ActuarialGainLossOnDefinedBenefitSchemeRecognisedInStatementTotalRecognisedGainsLosses')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Cumulative amount of actuarial gains and losses" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme1STRGLSumulativeAmount" page-break-before="False" keep-with-next-strength="0" template-guid="ad125d87-f2e0-4fff-a41f-22e03829a067">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The cumulative amount of actuarial gains and losses recognised in the statement of total recognised gains and (losses) since 1 January 2002 is <ws /><inline xbrl-concept="uk-gaap:CumulativeActuarialGainLossOnDefinedBenefitSchemeRecognisedInStatementTotalRecognisedGainsLosses" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|STRGL|STRGL|Current Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|STRGL|STRGLAmounts|Columns|Amount|*:item[0]|Current Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|STRGL|STRGLAmounts|Columns|Amount|*:item[1]|Current Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|STRGL|STRGLAmounts|Columns|Amount|*:item[2]|Current Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|STRGL|STRGLAmounts|Columns|Amount|*:item[3]|Current Period")[0].Value+

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|STRGL|STRGLAmounts|Columns|Amount|*:item[0]|Prior Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|STRGL|STRGLAmounts|Columns|Amount|*:item[1]|Prior Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|STRGL|STRGLAmounts|Columns|Amount|*:item[2]|Prior Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|STRGL|STRGLAmounts|Columns|Amount|*:item[3]|Prior Period")[0].Value</data></inline><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.PriorPeriod.EndDate.Value.Year</data><ws /> - <ws /><inline xbrl-concept="uk-gaap:CumulativeActuarialGainLossOnDefinedBenefitSchemeRecognisedInStatementTotalRecognisedGainsLosses" xbrl-period="PriorPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|STRGL|STRGL|Current Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|STRGL|STRGLAmounts|Columns|Amount|*:item[0]|Prior Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|STRGL|STRGLAmounts|Columns|Amount|*:item[1]|Prior Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|STRGL|STRGLAmounts|Columns|Amount|*:item[2]|Prior Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|STRGL|STRGLAmounts|Columns|Amount|*:item[3]|Prior Period")[0].Value</data></inline>
)</inline>
.</para>
</add-to-body></template>
							</report-template>
						</report-template>
						<report-template version="12" name="History of experience adjustments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme1History" page-break-before="False" keep-with-next-strength="1" template-guid="59cd24f2-a1df-44bf-96c9-033b134303b2">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">History of experience adjustments on scheme assets and liabilities</inline>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Amounts for the current<inline condition="((reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|FairValue|Columns|Amount|*:item[0]|*:filter[&gt;0]&quot; ,null, true).Count)-1)&lt;1"><ws /> period</inline><inline condition="((reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|FairValue|Columns|Amount|*:item[0]|*:filter[&gt;0]&quot; ,null, true).Count)-1)=1"><ws /> and previous period</inline><inline condition="((reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|FairValue|Columns|Amount|*:item[0]|*:filter[&gt;0]&quot; ,null, true).Count)-1)&gt;1"><ws /> and previous <ws /><data>(reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|FairValue|Columns|Amount|*:item[0]|*:filter[&gt;0]" ,null, true).Count)-1</data><ws /> periods</inline><ws /> are as follows:</para>
</add-to-body></template>
							<report-template version="12" name="History of experience adjustments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme1HistoryValues" page-break-before="False" keep-with-next-strength="0" template-guid="a9e7a753-2be5-4cc7-ae40-90e632b15d17">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4filter1" pre="newComputation.GetDateFilter(-2, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod2', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column4filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <var name="column5filter1" pre="newComputation.GetDateFilter(-3, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod3', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column5filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column5add" pre="smartTable.AddColumn(column5)" />
    <var name="column6filter1" pre="newComputation.GetDateFilter(-4, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod4', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column6filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column6add" pre="smartTable.AddColumn(column6)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('HistoryOfExperience', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;quot;surplus/(deficit)&amp;quot;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; in scheme&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Fair value of scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Assets|FairValue|Rows|*', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:FairValueAssetsDefinedBenefitScheme')" />
    <var name="section1subsection1XBRLDimensionsSet" pre="section1subsection1.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="section1subsection1XBRLHypercubeNameSet" pre="section1subsection1.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Present value of scheme liabilities&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|Liabilities|PresentValue|Rows|*', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:DefinedBenefitObligationPresentValue')" />
    <var name="section1subsection2XBRLDimensionsSet" pre="section1subsection2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="section1subsection2XBRLHypercubeNameSet" pre="section1subsection2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection2XBRLReverseSignSet" pre="section1subsection2.SetReverseSign(true)" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
    <var name="section1XBRLReverseSignSet" pre="section1.SetReverseSign(true)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Experience values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme1ExperienceValues" page-break-before="False" keep-with-next-strength="0" template-guid="f7c11a97-a5e1-43ae-a8a5-2035a32d4945">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Experience adjustments:</para>
</add-to-body></template>
								<report-template version="12" name="Experience expressed as an amount" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|ExperienceAdjustments|DisclosedBy|Current Period&quot;)[0].Value = 'Amount'" enabled="Conditional" section-name="FRS17PensionScheme1Experience£" page-break-before="False" keep-with-next-strength="0" template-guid="b76b956d-f4da-472a-9e5f-ed07ff518fe1">
									<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Grand Total')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Grand Total')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Grand Total')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Grand Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Grand Total')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Grand Total')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Grand Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Grand Total')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Grand Total')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4filter1" pre="newComputation.GetDateFilter(-2, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod2', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column4filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <var name="column5filter1" pre="newComputation.GetDateFilter(-3, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod3', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column5filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column5add" pre="smartTable.AddColumn(column5)" />
    <var name="column6filter1" pre="newComputation.GetDateFilter(-4, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod4', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column6filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column6add" pre="smartTable.AddColumn(column6)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ExperienceAmount', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Experience adjustments arising on scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|ExperienceAdjustments|ExperienceAdjustments|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:ExperienceGainLossArisingOnAssetsDefinedBenefitScheme')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Experience adjustments arising on scheme liabilities&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|ExperienceAdjustments|ExperienceAdjustments|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:ExperienceGainLossArisingOnLiabilitiesDefinedBenefitScheme')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
								</report-template>
								<report-template version="12" name="Experience expressed as a percentage" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|ExperienceAdjustments|DisclosedBy|Current Period&quot;)[0].Value = '%'" enabled="Conditional" section-name="FRS17PensionScheme1Experience%" page-break-before="False" keep-with-next-strength="0" template-guid="5835fb7c-5a56-4add-bfc4-9138016f1eca">
									<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'MyFirstTable', 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Grand Total')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Grand Total')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Grand Total')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Grand Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Grand Total')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Grand Total')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Grand Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Grand Total')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Grand Total')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;%&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;%&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4filter1" pre="newComputation.GetDateFilter(-2, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod2', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column4filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;%&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column4XBRLDimensionsSet" pre="column4.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column4XBRLHypercubeNameSet" pre="column4.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <var name="column5filter1" pre="newComputation.GetDateFilter(-3, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod3', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column5filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;%&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column5add" pre="smartTable.AddColumn(column5)" />
    <var name="column6filter1" pre="newComputation.GetDateFilter(-4, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod4', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column6filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;%&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column6XBRLDimensionsSet" pre="column6.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column6XBRLHypercubeNameSet" pre="column6.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column6add" pre="smartTable.AddColumn(column6)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ExperiencePercent', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Experience adjustments arising on scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|ExperienceAdjustments|ExperienceAdjustments|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:ExperienceGainLossArisingOnAssetsDefinedBenefitSchemeAsPercentageSchemeAssets')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Experience adjustments arising on scheme liabilities&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|ExperienceAdjustments|ExperienceAdjustments|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:ExperienceGainLossArisingOnLiabilitiesDefinedBenefitSchemeAsPercentageSchemeLiabilities')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
								</report-template>
							</report-template>
						</report-template>
						<report-template version="12" name="Restatement of comparatives" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[0]|ExperienceAdjustments|ComparativesRestated|Current Period&quot;)[0].Value =true" enabled="Conditional" section-name="FRS17PensionScheme1RestatedComparatives" page-break-before="False" keep-with-next-strength="0" template-guid="a6071c76-159d-446a-93fc-f0669b989c35">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:StatementThatEntityHasChosenNotToRestateValuesForPastYearsInAccordanceWithFRS17.95C" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1" xbrl-invert-sign="True">Comparative figures have not been restated as permitted by FRS 17.</para>
</add-to-body></template>
						</report-template>
					</report-template>
					<report-template version="12" name="FRSSE pension scheme 1" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('905').HasTransactions and FRSSE = true" enabled="Conditional" section-name="FRSSEPensionScheme1" page-break-before="False" keep-with-next-strength="0" template-guid="77dca284-39eb-452f-a00b-8a7d754224ad">
						<template><add-to-body>
</add-to-body></template>
						<report-template version="12" name="Details of scheme" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRSSEPensionScheme1Details" page-break-before="False" keep-with-next-strength="1" template-guid="e4ada734-31c7-42cc-be48-e25c590d92b8">
							<template><add-to-body>
  <para para-alignment="Full" base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:NameDefinedBenefitScheme" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[0]|SchemeDetails|Name|Current Period")[0].Value</data>
  </para>
</add-to-body></template>
							<report-template version="12" name="Description and valuation" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRSSEPensionScheme1DescriptionAnd Valuation" page-break-before="False" keep-with-next-strength="0" template-guid="06bdc3e6-3ac6-48b6-bb79-6c2be53a9097">
								<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:DescriptionDefinedBenefitScheme" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[0]|SchemeDetails|Description|Current Period")[0].Value</data>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The most recent valuation was at <ws /><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[0]|SchemeDetails|Date|Current Period")[0].Value</data><ws /> which has been updated to reflect conditions at the balance sheet date. <ws /><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[0]|SchemeDetails|Details|Current Period")[0].Value</data><ws /><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[0]|SchemeDetails|ActuaryEmployee|Current Period&quot;)[0].Value =true or &#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[0]|SchemeDetails|ActuaryOfficer|Current Period&quot;)[0].Value =true">The actuary is an <ws /><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[0]|SchemeDetails|ActuaryEmployee|Current Period&quot;)[0].Value =true">employee <ws /></inline><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[0]|SchemeDetails|ActuaryEmployee|Current Period&quot;)[0].Value =true and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[0]|SchemeDetails|ActuaryOfficer|Current Period&quot;)[0].Value =true"><ws /> and <ws /></inline><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[0]|SchemeDetails|ActuaryOfficer|Current Period&quot;)[0].Value =true">officer <ws /></inline>
of the company.</inline><ws /></para>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Contributions expressed as an amount" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionSchemesFRSSE|*:item[0]|SchemeDetails|DisclosedBy|Current Period&quot;)[0].Value = 'Amount'" enabled="Conditional" section-name="FRSSEPensionScheme1Contributions£" page-break-before="False" keep-with-next-strength="0" template-guid="eccdf9da-709e-4060-b34f-ed5eb234890e">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The contributions of the company were <ws /><inline xbrl-concept="uk-gaap:ContributionsToDefinedBenefitSchemeByEmployer" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1" xbrl-scaling="0"><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[0]|SchemeDetails|ContributionRates|Rows|*:item[0]|Current|Current Period")[0].Value</data></inline>
. <ws /><inline xbrl-concept="uk-gaap:StatementOnExpectedFutureContributionsToDefinedBenefitSchemeByEmployerDuringFollowingYear" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1">Future contributions in the next year are expected to be <ws /><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[0]|SchemeDetails|ContributionRates|Rows|*:item[0]|Future|Current Period")[0].Value</data>
.</inline></para>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Contributions expressed as a percentage" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionSchemesFRSSE|*:item[0]|SchemeDetails|DisclosedBy|Current Period&quot;)[0].Value = '%'" enabled="Conditional" section-name="FRSSEPensionScheme1Contributions%" page-break-before="False" keep-with-next-strength="0" template-guid="08fc4df0-5014-47b8-abeb-e889877a0390">
								<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The contributions of the company were <ws /><inline xbrl-concept="uk-gaap:NetContributionRateForLatestPeriodAsPercentagePensionableEarnings" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1"><data base-style="Percentage">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[0]|SchemeDetails|ContributionRates|Rows|*:item[0]|Current|Current Period")[0].Value</data></inline><ws /> of pensionable earnings. <ws /><inline xbrl-concept="uk-gaap:StatementOnExpectedFutureContributionsToDefinedBenefitSchemeByEmployerDuringFollowingYear" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1">Future contributions in the next year are expected to be <ws /><data base-style="Percentage">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[0]|SchemeDetails|ContributionRates|Rows|*:item[0]|Future|Current Period")[0].Value</data><inline base-style="Percentage"><ws /> of pensionable earnings</inline></inline>
.</para>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Service costs expected to increase" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Conditional" section-name="FRSSEPensionScheme1CostIncrease" page-break-before="False" keep-with-next-strength="0" template-guid="47337295-9c5f-430c-b330-c786c99a6289">
								<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[0]|SchemeDetails|SchemeClosed|Current Period&quot;)[0].Value = true&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[0]|SchemeDetails|AgeProfileRising|Current Period&quot;)[0].Value = false">The defined benefit scheme is now closed to new members so under the projected unit method the current service cost would be expected to increase over time as members of the scheme approach retirement.</inline>
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[0]|SchemeDetails|AgeProfileRising|Current Period&quot;)[0].Value = true&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[0]|SchemeDetails|SchemeClosed|Current Period&quot;)[0].Value = false">The age profile of active members is rising significantly so under the projected unit method the current service cost would be expected to increase over time as new members of the scheme approach retirement.</inline>
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[0]|SchemeDetails|SchemeClosed|Current Period&quot;)[0].Value = true and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[0]|SchemeDetails|AgeProfileRising|Current Period&quot;)[0].Value = true">The defined benefit scheme is now closed to new members and the age profile of active members is rising significantly so under the projected unit method the current service cost would be expected to increase over time as new members of the scheme approach retirement.</inline>
  </para>
</add-to-body></template>
							</report-template>
						</report-template>
						<report-template version="12" name="Scheme assets and liabilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRSSEPensionScheme1AssetsAndLiabilities" page-break-before="False" keep-with-next-strength="1" template-guid="f0cac806-f34a-4f6f-b262-47e0b1ed1cbd">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The amounts recognised in the balance sheet are as follows:</para>
</add-to-body></template>
							<report-template version="12" name="Scheme assets and liabilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Conditional" section-name="FRSSEPensionScheme1AssetsLiabilitiesValues" page-break-before="False" keep-with-next-strength="0" template-guid="67e4d5e4-4eea-42f2-aa08-e61b38d9ac80">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ActuariaFairlValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Fair value of scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionSchemesFRSSE|*:item[0]|AssetsAndLiabilities|Calculation|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:FairValueAssetsDefinedBenefitScheme')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ActuariaPresentlValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Present value of scheme liabilities&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionSchemesFRSSE|*:item[0]|AssetsAndLiabilities|Calculation|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:DefinedBenefitObligationPresentValue')" />
    <var name="section2subsection1XBRLReverseSignSet" pre="section2subsection1.SetReverseSign(true)" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('ActuarialValue', '&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section3item1" pre="section3.AddTotalItem(section1)" />
    <var name="section3item2" pre="section3.AddTotalItem(section2)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
    <var name="section3XBRLReverseSignSet" pre="section3.SetReverseSign(true)" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <var name="section4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ReconcilingItems', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section4subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Unrecognised past service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionSchemesFRSSE|*:item[0]|AssetsAndLiabilities|Reconciliation|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection1subsectionitem1add" pre="section4subsection1.AddItem(section4subsection1subsectionitem1)" />
    <var name="section4subsection1XBRLConceptNameSet" pre="section4subsection1.SetConceptName('uk-gaap:PastServiceCostNotRecognisedInBalanceSheet')" />
    <var name="section4subsection1add" pre="section4.AddItem(section4subsection1)" />
    <var name="section4subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amounts not recognised as an asset under FRS 17 paragraph 41&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionSchemesFRSSE|*:item[0]|AssetsAndLiabilities|Reconciliation|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection2subsectionitem1add" pre="section4subsection2.AddItem(section4subsection2subsectionitem1)" />
    <var name="section4subsection2XBRLConceptNameSet" pre="section4subsection2.SetConceptName('uk-gaap:AmountNotRecognisedAsAnAssetBecauseIAS58bLimit')" />
    <var name="section4subsection2XBRLReverseSignSet" pre="section4subsection2.SetReverseSign(true)" />
    <var name="section4subsection2add" pre="section4.AddItem(section4subsection2)" />
    <var name="section4subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other amounts recognised in the balance sheet&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionSchemesFRSSE|*:item[0]|AssetsAndLiabilities|Reconciliation|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection3subsectionitem1add" pre="section4subsection3.AddItem(section4subsection3subsectionitem1)" />
    <var name="section4subsection3XBRLConceptNameSet" pre="section4subsection3.SetConceptName('uk-gaap:OtherAssetsLiabilitiesRelatedToDefinedBenefitSchemeRecognisedInBalanceSheet')" />
    <var name="section4subsection3add" pre="section4.AddItem(section4subsection3)" />
    <var name="section4subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other amounts not recognised in the balance sheet&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionSchemesFRSSE|*:item[0]|AssetsAndLiabilities|Reconciliation|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem1add" pre="section4subsection4.AddItem(section4subsection4subsectionitem1)" />
    <var name="section4subsection4add" pre="section4.AddItem(section4subsection4)" />
    <var name="section4add" pre="smartTable.AddTableBlock(section4)" />
    <var name="section5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('SurplusDeficit', '&lt;para&gt;Defined benefit pension scheme &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;surplus/(deficit)&amp;quot;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section5item1" pre="section5.AddTotalItem(section3)" />
    <var name="section5item2" pre="section5.AddTotalItem(section4)" />
    <var name="section5XBRLConceptNameSet" pre="section5.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
    <var name="section5XBRLReverseSignSet" pre="section5.SetReverseSign(true)" />
    <var name="section5add" pre="smartTable.AddTableBlock(section5)" />
    <var name="section6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('RelatedDeferredTax', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Related deferred tax &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;asset/(liability)&amp;quot;)&lt;/data&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section6subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Deferred tax on pension &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;asset/(liability)&amp;quot;)&lt;/data&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section6subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('905.80', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem1add" pre="section6subsection1.AddItem(section6subsection1subsectionitem1)" />
    <var name="section6subsection1add" pre="section6.AddItem(section6subsection1)" />
    <var name="section6XBRLConceptNameSet" pre="section6.SetConceptName('uk-gaap:DeferredTaxLiabilityAssetRelatedToDefinedBenefitScheme')" />
    <var name="section6XBRLReverseSignSet" pre="section6.SetReverseSign(true)" />
    <var name="section6add" pre="smartTable.AddTableBlock(section6)" />
    <var name="section7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('NetAssetLiability', '&lt;para&gt;Net &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;asset/(liability)&amp;quot;)&lt;/data&gt;&lt;ws/&gt; in the balance sheet&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section7item1" pre="section7.AddTotalItem(section5)" />
    <var name="section7item2" pre="section7.AddTotalItem(section6)" />
    <var name="section7XBRLConceptNameSet" pre="section7.SetConceptName('uk-gaap:RetirementBenefitObligationsSurplus')" />
    <var name="section7XBRLReverseSignSet" pre="section7.SetReverseSign(true)" />
    <var name="section7add" pre="smartTable.AddTableBlock(section7)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
						</report-template>
						<report-template version="12" name="Surplus (deficit)" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRSSEPensionScheme1SurplusDeficit" page-break-before="False" keep-with-next-strength="1" template-guid="eb6e058d-5701-47ae-8a00-446c2566bc47">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Changes in the pension scheme surplus (deficit) are as follows:</para>
</add-to-body></template>
							<report-template version="12" name="Surplus (deficit)" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRSSEPensionScheme1SurplusDeficitValues" page-break-before="False" keep-with-next-strength="0" template-guid="914ee647-930f-494a-9243-a7643c492023">
								<template><add-to-body>
	<section width="100%">
		<!-- Setup the Computation and SmartTable -->
		<var name="currentPeriod" pre="reporting.CurrentPeriod" />
		<var name="newComputation" pre="reporting.NewComputation" />
		<var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
		<var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
		<var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
		<var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
		<var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
		<var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
		<var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
		<var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
		<var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
		<var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
		<var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
		<!-- Add the columns -->
		<var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
		<var name="column1add" pre="smartTable.AddColumn(column1)" />
		<var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
		<var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
		<var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
		<var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
		<var name="column2XBRLPeriodSet" pre="column2.SetPeriod('Current')" />
		<var name="column2add" pre="smartTable.AddColumn(column2)" />
		<var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
		<var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
		<var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
		<var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
		<var name="column3XBRLPeriodSet" pre="column3.SetPeriod('Prior')" />
		<var name="column3add" pre="smartTable.AddColumn(column3)" />
		<!-- Add the sections and rows -->
		<var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('SurplusDeficit', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Pension scheme &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;surplus (deficit)&amp;quot;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; at end of &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
		<var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Pension scheme &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;surplus (deficit)&amp;quot;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; at start of &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionSchemesFRSSE|*:item[0]|SurplusDeficit|Movement|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
		<var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
		<var name="section1subsection1XBRLDimensionsSet" pre="section1subsection1.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
		<var name="section1subsection1XBRLHypercubeNameSet" pre="section1subsection1.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
		<var name="section1subsection1XBRLPeriodSet" pre="section1subsection1.SetPeriod('Start')" />
		<var name="section1subsection1XBRLReverseSignSet" pre="section1subsection1.SetReverseSign(true)" />
		<var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
		<var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current service costs&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionSchemesFRSSE|*:item[0]|SurplusDeficit|Movement|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
		<var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:CurrentServiceCostDefinedBenefitScheme')" />
		<var name="section1subsection2XBRLPeriodSet" pre="section1subsection2.SetPeriod('Duration')" />
		<var name="section1subsection2XBRLReverseSignSet" pre="section1subsection2.SetReverseSign(true)" />
		<var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
		<var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Past service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionSchemesFRSSE|*:item[0]|SurplusDeficit|Movement|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
		<var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:PastServiceCostDefinedBenefitScheme')" />
		<var name="section1subsection3XBRLPeriodSet" pre="section1subsection3.SetPeriod('Duration')" />
		<var name="section1subsection3XBRLReverseSignSet" pre="section1subsection3.SetReverseSign(true)" />
		<var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
		<var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Actuarial gains and losses&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionSchemesFRSSE|*:item[0]|SurplusDeficit|Movement|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
		<var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:ActuarialGainLossOnLiabilitiesDefinedBenefitScheme')" />
		<var name="section1subsection4XBRLPeriodSet" pre="section1subsection4.SetPeriod('Duration')" />
		<var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
		<var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Foreign exchange differences&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionSchemesFRSSE|*:item[0]|SurplusDeficit|Movement|Rows|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
		<var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:IncreaseDecreaseInLiabilitiesDefinedBenefitSchemeFromForeignExchangeDifferences')" />
		<var name="section1subsection5XBRLPeriodSet" pre="section1subsection5.SetPeriod('Duration')" />
		<var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
		<var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Finance &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;income/(cost)&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionSchemesFRSSE|*:item[0]|SurplusDeficit|Movement|Rows|*:item[5]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
		<var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:ExpenseIncomeFromInterestCostDefinedBenefitScheme')" />
		<var name="section1subsection6XBRLPeriodSet" pre="section1subsection6.SetPeriod('Duration')" />
		<var name="section1subsection6XBRLReverseSignSet" pre="section1subsection6.SetReverseSign(true)" />
		<var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
		<var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cash contribution&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionSchemesFRSSE|*:item[0]|SurplusDeficit|Movement|Rows|*:item[6]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
		<var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:ContributionsToPensionScheme')" />
		<var name="section1subsection7XBRLPeriodSet" pre="section1subsection7.SetPeriod('Duration')" />
		<var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
		<var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;increase/(decrease)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; in assets from business combinations and disposals&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionSchemesFRSSE|*:item[0]|SurplusDeficit|Movement|Rows|*:item[7]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
		<var name="section1subsection8XBRLConceptNameSet" pre="section1subsection8.SetConceptName('uk-gaap:IncreaseDecreaseInAssetsDefinedBenefitSchemeFromBusinessCombinationsDisposals')" />
		<var name="section1subsection8XBRLPeriodSet" pre="section1subsection8.SetPeriod('Duration')" />
		<var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
		<var name="section1subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;(increase)/decrease&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; in liabilities from business combinations and disposals&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionSchemesFRSSE|*:item[0]|SurplusDeficit|Movement|Rows|*:item[8]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection9subsectionitem1add" pre="section1subsection9.AddItem(section1subsection9subsectionitem1)" />
		<var name="section1subsection9XBRLConceptNameSet" pre="section1subsection9.SetConceptName('uk-gaap:IncreaseDecreaseInLiabilitiesDefinedBenefitSchemeFromBusinessCombinationsDisposals')" />
		<var name="section1subsection9XBRLPeriodSet" pre="section1subsection9.SetPeriod('Duration')" />
		<var name="section1subsection9XBRLReverseSignSet" pre="section1subsection9.SetReverseSign(true)" />
		<var name="section1subsection9add" pre="section1.AddItem(section1subsection9)" />
		<var name="section1subsection10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Effects of curtailments and settlements&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection10subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionSchemesFRSSE|*:item[0]|SurplusDeficit|Movement|Rows|*:item[9]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection10subsectionitem1add" pre="section1subsection10.AddItem(section1subsection10subsectionitem1)" />
		<var name="section1subsection10XBRLConceptNameSet" pre="section1subsection10.SetConceptName('uk-gaap:GainLossFromSettlementsCurtailmentsIncludedInSeparateItemAfterOperatingProfit')" />
		<var name="section1subsection10XBRLPeriodSet" pre="section1subsection10.SetPeriod('Duration')" />
		<var name="section1subsection10add" pre="section1.AddItem(section1subsection10)" />
		<var name="section1subsection11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection11subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionSchemesFRSSE|*:item[0]|SurplusDeficit|Movement|Rows|*:item[10]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection11subsectionitem1add" pre="section1subsection11.AddItem(section1subsection11subsectionitem1)" />
		<var name="section1subsection11XBRLPeriodSet" pre="section1subsection11.SetPeriod('Duration')" />
		<var name="section1subsection11add" pre="section1.AddItem(section1subsection11)" />
		<var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
		<var name="section1XBRLPeriodSet" pre="section1.SetPeriod('End')" />
		<var name="section1XBRLReverseSignSet" pre="section1.SetReverseSign(true)" />
		<var name="section1add" pre="smartTable.AddTableBlock(section1)" />
		<!-- Print the table -->
		<var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
		<var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
		<table base-style="Table Text">
			<column-details column-number="1" char-align=")" align="bottom-right" />
			<column-details column-number="2" char-align=")" align="bottom-right" />
			<column-details column-number="3" char-align=")" align="bottom-right" />
			<table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
				<section runtime-smart-tag="section.SmartTag">
					<table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
						<table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
							<!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
							<table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
								<table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
									<para runtime-font-color="cell.Color">
										<data condition="cell.HasStringContent">cell.ContentString</data>
										<data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
										<data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
									</para>
								</table-cell>
							</table-row>
							<!-- Cell which has a fixed width and has padding cells either side of the main cell -->
							<table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
								<table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
								<table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
									<para runtime-font-color="cell.Color">
										<data condition="cell.HasStringContent">cell.ContentString</data>
										<data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
										<data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
									</para>
								</table-cell>
								<table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
							</table-row>
							<!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
							<table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
								<table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
									<para runtime-font-color="cell.Color">
										<data condition="cell.HasStringContent">cell.ContentString</data>
										<data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
										<data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
									</para>
								</table-cell>
							</table-row>
							<!-- Cell which uses available free-space and has padding cells either side of the main cell -->
							<table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
								<table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
								<table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
									<para runtime-font-color="cell.Color">
										<data condition="cell.HasStringContent">cell.ContentString</data>
										<data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
										<data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
									</para>
								</table-cell>
								<table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
							</table-row>
						</table-column-iterator>
					</table-row-iterator>
				</section>
			</table-row-iterator>
		</table>
	</section>
</add-to-body>
</template>
							</report-template>
						</report-template>
						<report-template version="12" name="Amounts charged (credited) to operating profit" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRSSEPensionScheme1OperatingProfit" page-break-before="False" keep-with-next-strength="1" template-guid="2efb600f-2094-444b-9782-e7e872975d26">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The amounts that have been charged/(credited) to <ws /><data>reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(1m,1m).ComparativesUnfiltered.AllCategoriesRoot,'OpProfit').Description.ToLower()</data><ws /> in the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> are:</para>
</add-to-body></template>
							<report-template version="12" name="Amounts charged (credited) to operating profit" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRSSEPensionScheme1OperatingProfitValues" page-break-before="False" keep-with-next-strength="0" template-guid="cc5fab88-0756-44f3-8f7a-fe65f993d6d6">
								<template><add-to-body>
	<section width="100%">
		<!-- Setup the Computation and SmartTable -->
		<var name="currentPeriod" pre="reporting.CurrentPeriod" />
		<var name="newComputation" pre="reporting.NewComputation" />
		<var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
		<var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
		<var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
		<var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
		<var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
		<var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
		<var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
		<var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
		<var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
		<var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
		<var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
		<!-- Add the columns -->
		<var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
		<var name="column1add" pre="smartTable.AddColumn(column1)" />
		<var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
		<var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
		<var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1')" />
		<var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
		<var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
		<var name="column2add" pre="smartTable.AddColumn(column2)" />
		<var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
		<var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
		<var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme1,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
		<var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
		<var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
		<var name="column3add" pre="smartTable.AddColumn(column3)" />
		<!-- Add the sections and rows -->
		<var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('RecognisedInProfitLoss', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;quot;charge/(credit)&amp;quot;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; to &lt;ws/&gt;&lt;data&gt;reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(1m,1m).ComparativesUnfiltered.AllCategoriesRoot,&amp;apos;OpProfit&amp;apos;).Description.ToLower()&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
		<var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionSchemesFRSSE|*:item[0]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
		<var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:CurrentServiceCostDefinedBenefitScheme')" />
		<var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
		<var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Past service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionSchemesFRSSE|*:item[0]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
		<var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:PastServiceCostDefinedBenefitScheme')" />
		<var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
		<var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Effect of FRS 17 paragraph 41&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionSchemesFRSSE|*:item[0]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
		<var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:IncomeExpenseFromAmountsNotRecognisedAsAnAssetBecauseIAS58bLimit')" />
		<var name="section1subsection3XBRLReverseSignSet" pre="section1subsection3.SetReverseSign(true)" />
		<var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
		<var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Effects of curtailments and settlements&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionSchemesFRSSE|*:item[0]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
		<var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:ExpenseIncomeFromDefinedBenefitSchemeSettlementsCurtailments')" />
		<var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
		<var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:ChargeCreditToOperatingProfitFromDefinedBenefitScheme')" />
		<var name="section1add" pre="smartTable.AddTableBlock(section1)" />
		<!-- Print the table -->
		<var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
		<var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
		<table base-style="Table Text">
			<column-details column-number="1" char-align=")" align="bottom-right" />
			<column-details column-number="2" char-align=")" align="bottom-right" />
			<column-details column-number="3" char-align=")" align="bottom-right" />
			<table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
				<section runtime-smart-tag="section.SmartTag">
					<table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
						<table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
							<!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
							<table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
								<table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
									<para runtime-font-color="cell.Color">
										<data condition="cell.HasStringContent">cell.ContentString</data>
										<data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
										<data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
									</para>
								</table-cell>
							</table-row>
							<!-- Cell which has a fixed width and has padding cells either side of the main cell -->
							<table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
								<table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
								<table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
									<para runtime-font-color="cell.Color">
										<data condition="cell.HasStringContent">cell.ContentString</data>
										<data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
										<data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
									</para>
								</table-cell>
								<table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
							</table-row>
							<!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
							<table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
								<table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
									<para runtime-font-color="cell.Color">
										<data condition="cell.HasStringContent">cell.ContentString</data>
										<data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
										<data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
									</para>
								</table-cell>
							</table-row>
							<!-- Cell which uses available free-space and has padding cells either side of the main cell -->
							<table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
								<table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
								<table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
									<para runtime-font-color="cell.Color">
										<data condition="cell.HasStringContent">cell.ContentString</data>
										<data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
										<data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
									</para>
								</table-cell>
								<table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
							</table-row>
						</table-column-iterator>
					</table-row-iterator>
				</section>
			</table-row-iterator>
		</table>
	</section>
</add-to-body>
</template>
							</report-template>
						</report-template>
					</report-template>
					<report-template version="12" name="Pension scheme 2" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('906').HasTransactions and FRSSE = false" enabled="Conditional" section-name="FRS17PensionScheme2" page-break-before="False" keep-with-next-strength="0" template-guid="09916177-95e6-4582-9230-8b5d8c13fab0">
						<template><add-to-body>
</add-to-body></template>
						<report-template version="12" name="Details of scheme" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme2Details" page-break-before="False" keep-with-next-strength="1" template-guid="f1d05049-2b1b-4317-90dd-782d4dcd0fa4">
							<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline font-style="+bold" xbrl-concept="uk-gaap:NameDefinedBenefitScheme" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2">
      <data base-style="Title">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|SchemeDetails|Name|Current Period")[0].Value</data>
    </inline>
  </para>
</add-to-body></template>
							<report-template version="12" name="Description of scheme" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme2Description" page-break-before="False" keep-with-next-strength="0" template-guid="1fa20bc6-f30c-41a9-8ad3-f9df63084369">
								<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:DescriptionDefinedBenefitScheme" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|SchemeDetails|Description|Current Period")[0].Value</data>
  </para>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Contributions" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Conditional" section-name="FRS17PensionScheme2Contributions" page-break-before="False" keep-with-next-strength="0" template-guid="1b703853-359b-43f6-b73b-396929159dc5">
								<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Contributions<inline condition="(reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|SchemeDetails|Contribution|Current Period&quot;)[0].Value &gt;=0 and&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|SchemeDetails|Contribution|Prior Period&quot;)[0].Value &gt;=0) )&#xD;&#xA;&#xD;&#xA;or&#xD;&#xA;&#xD;&#xA;(reportHelper.HasPriorPeriod=false and&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|SchemeDetails|Contribution|Current Period&quot;)[0].Value &gt;=0)"><ws /> payable</inline><inline condition="(reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|SchemeDetails|Contribution|Current Period&quot;)[0].Value &lt;0 and&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|SchemeDetails|Contribution|Prior Period&quot;)[0].Value &lt;0) )&#xD;&#xA;&#xD;&#xA;or&#xD;&#xA;(reportHelper.HasPriorPeriod=false and&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|SchemeDetails|Contribution|Current Period&quot;)[0].Value &lt;0)"><ws /> (prepaid)</inline><inline condition="reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|SchemeDetails|Contribution|Current Period&quot;)[0].Value &gt;=0 and&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|SchemeDetails|Contribution|Prior Period&quot;)[0].Value &lt;0)"><ws /> payable/(prepaid)</inline><inline condition="reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|SchemeDetails|Contribution|Current Period&quot;)[0].Value &lt;0 and&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|SchemeDetails|Contribution|Prior Period&quot;)[0].Value &gt;=0)"><ws /> (prepaid)/payable</inline><ws /> to the pension scheme at the end of the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> are <ws /><inline xbrl-concept="uk-gaap:OutstandingPre-paidContributionsToDefinedBenefitSchemeBalanceSheetDate" xbrl-period="EndCurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|SchemeDetails|Contribution|Current Period")[0].Value</data></inline><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.PriorPeriod.EndDate.Value.Year</data><ws /> - <ws /><inline xbrl-concept="uk-gaap:OutstandingPre-paidContributionsToDefinedBenefitSchemeBalanceSheetDate" xbrl-period="EndPriorPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|SchemeDetails|Contribution|Prior Period")[0].Value</data></inline>
)</inline>
.
<br /><br /><inline xbrl-concept="uk-gaap:StatementOnExpectedFutureContributionsToDefinedBenefitSchemeByEmployerDuringFollowingYear" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2">The total contributions in the next year are expected to be <ws /><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|SchemeDetails|DisclosedBy|Current Period&quot;)[0].Value = 'Amount'"><data>reporting.CurrentClient.CurrencySymbol</data></inline><data base-style="Number">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|SchemeDetails|FutureContribution|Current Period")[0].Value

</data><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|SchemeDetails|DisclosedBy|Current Period&quot;)[0].Value = '%'">% of pensionable earnings</inline>
.</inline></para>
</add-to-body></template>
							</report-template>
						</report-template>
						<report-template version="12" name="Scheme assets and liabilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme2AssetsAndLiabilities" page-break-before="False" keep-with-next-strength="0" template-guid="3de2cd23-4037-40b9-90b1-28823a7a9b1c">
							<template><add-to-body>
</add-to-body></template>
							<report-template version="12" name="Reconciliation of scheme assets and liabilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme2Reconciliation" page-break-before="False" keep-with-next-strength="1" template-guid="023a651f-dc9a-4599-9ac6-df83c687be30">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Reconciliation of scheme assets and liabilities to assets and liabilities recognised</inline>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
The amounts recognised in the balance sheet are as follows:</para>
</add-to-body></template>
								<report-template version="12" name="Reconciliation of scheme assets and liabilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme2ReconciliationValues" page-break-before="False" keep-with-next-strength="0" template-guid="d2f315a5-5d78-4bbc-8e8d-4c1294a58f67">
									<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ActuarialFairValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Fair value of scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|FairValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:FairValueAssetsDefinedBenefitScheme')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ActuarialPresentValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Present value of scheme liabilities&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Reconciliation|Calculation|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:DefinedBenefitObligationPresentValue')" />
    <var name="section2subsection1XBRLReverseSignSet" pre="section2subsection1.SetReverseSign(true)" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('ActuarialValue', '&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section3item1" pre="section3.AddTotalItem(section1)" />
    <var name="section3item2" pre="section3.AddTotalItem(section2)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
    <var name="section3XBRLReverseSignSet" pre="section3.SetReverseSign(true)" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <var name="section4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ReconcilingItems', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section4subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Unrecognised past service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Reconciliation|Reconciliation|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection1subsectionitem1add" pre="section4subsection1.AddItem(section4subsection1subsectionitem1)" />
    <var name="section4subsection1XBRLConceptNameSet" pre="section4subsection1.SetConceptName('uk-gaap:PastServiceCostNotRecognisedInBalanceSheet')" />
    <var name="section4subsection1add" pre="section4.AddItem(section4subsection1)" />
    <var name="section4subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amounts not recognised as an asset under FRS 17 paragraph 41&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Reconciliation|Reconciliation|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection2subsectionitem1add" pre="section4subsection2.AddItem(section4subsection2subsectionitem1)" />
    <var name="section4subsection2XBRLConceptNameSet" pre="section4subsection2.SetConceptName('uk-gaap:AmountNotRecognisedAsAnAssetBecauseIAS58bLimit')" />
    <var name="section4subsection2XBRLReverseSignSet" pre="section4subsection2.SetReverseSign(true)" />
    <var name="section4subsection2add" pre="section4.AddItem(section4subsection2)" />
    <var name="section4subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other amounts recognised in the balance sheet&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Reconciliation|Reconciliation|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection3subsectionitem1add" pre="section4subsection3.AddItem(section4subsection3subsectionitem1)" />
    <var name="section4subsection3XBRLConceptNameSet" pre="section4subsection3.SetConceptName('uk-gaap:OtherAssetsLiabilitiesRelatedToDefinedBenefitSchemeRecognisedInBalanceSheet')" />
    <var name="section4subsection3add" pre="section4.AddItem(section4subsection3)" />
    <var name="section4subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other amounts not recognised in the balance sheet&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Reconciliation|Reconciliation|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem1add" pre="section4subsection4.AddItem(section4subsection4subsectionitem1)" />
    <var name="section4subsection4add" pre="section4.AddItem(section4subsection4)" />
    <var name="section4add" pre="smartTable.AddTableBlock(section4)" />
    <var name="section5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('SurplusDeficit', '&lt;para&gt;Defined benefit pension scheme &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;surplus/(deficit)&amp;quot;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section5item1" pre="section5.AddTotalItem(section3)" />
    <var name="section5item2" pre="section5.AddTotalItem(section4)" />
    <var name="section5XBRLConceptNameSet" pre="section5.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
    <var name="section5XBRLReverseSignSet" pre="section5.SetReverseSign(true)" />
    <var name="section5add" pre="smartTable.AddTableBlock(section5)" />
    <var name="section6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('RelatedDeferredTax', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Related deferred tax &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;asset/(liability)&amp;quot;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section6subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Deferred tax on pension asset/liability&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section6subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('905.80', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem1add" pre="section6subsection1.AddItem(section6subsection1subsectionitem1)" />
    <var name="section6subsection1add" pre="section6.AddItem(section6subsection1)" />
    <var name="section6XBRLConceptNameSet" pre="section6.SetConceptName('uk-gaap:DeferredTaxLiabilityAssetRelatedToDefinedBenefitScheme')" />
    <var name="section6XBRLReverseSignSet" pre="section6.SetReverseSign(true)" />
    <var name="section6add" pre="smartTable.AddTableBlock(section6)" />
    <var name="section7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('NetAssetLiability', '&lt;para&gt;Net &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;asset/(liability)&amp;quot;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; in the balance sheet&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section7item1" pre="section7.AddTotalItem(section5)" />
    <var name="section7item2" pre="section7.AddTotalItem(section6)" />
    <var name="section7XBRLConceptNameSet" pre="section7.SetConceptName('uk-gaap:RetirementBenefitObligationsSurplus')" />
    <var name="section7XBRLReverseSignSet" pre="section7.SetReverseSign(true)" />
    <var name="section7add" pre="smartTable.AddTableBlock(section7)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
								</report-template>
							</report-template>
							<report-template version="12" name="Assets" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme2Assets" page-break-before="False" keep-with-next-strength="0" template-guid="0ab4f5d9-9627-4396-b626-90608b216252">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Scheme assets</inline>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Changes in the fair value of scheme assets are as follows:</para>
</add-to-body></template>
								<report-template version="12" name="Changes in fair value" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme2ChangesInFairValue" page-break-before="False" keep-with-next-strength="0" template-guid="4f4aac6c-866a-4628-b17a-3faf51022cc8">
									<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('Current')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('Prior')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('AssetMovement', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Fair value at end of &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Fair value at start of &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|Movement|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:FairValueAssetsDefinedBenefitScheme')" />
    <var name="section1subsection1XBRLPeriodSet" pre="section1subsection1.SetPeriod('Start')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expected return on assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|Movement|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:ExpenseIncomeFromExpectedReturnOnAssetsDefinedBenefitScheme')" />
    <var name="section1subsection2XBRLPeriodSet" pre="section1subsection2.SetPeriod('Duration')" />
    <var name="section1subsection2XBRLReverseSignSet" pre="section1subsection2.SetReverseSign(true)" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Actuarial gains and losses&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|Movement|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:ActuarialGainLossOnAssetsDefinedBenefitScheme')" />
    <var name="section1subsection3XBRLPeriodSet" pre="section1subsection3.SetPeriod('Duration')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Foreign exchange differences&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|Movement|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:IncreaseDecreaseInAssetsDefinedBenefitSchemeFromForeignExchangeDifferences')" />
    <var name="section1subsection4XBRLPeriodSet" pre="section1subsection4.SetPeriod('Duration')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Employer contributions&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|Movement|Rows|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:ContributionsToDefinedBenefitSchemeByEmployer')" />
    <var name="section1subsection5XBRLPeriodSet" pre="section1subsection5.SetPeriod('Duration')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Contributions by scheme participants&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|Movement|Rows|*:item[5]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:ContributionsByDefinedBenefitSchemeParticipants')" />
    <var name="section1subsection6XBRLPeriodSet" pre="section1subsection6.SetPeriod('Duration')" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Benefits paid&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|Movement|Rows|*:item[6]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:BenefitsPaidRelatedToDefinedBenefitScheme')" />
    <var name="section1subsection7XBRLPeriodSet" pre="section1subsection7.SetPeriod('Duration')" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Assets acquired in business combinations&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|Movement|Rows|*:item[7]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
    <var name="section1subsection8XBRLConceptNameSet" pre="section1subsection8.SetConceptName('uk-gaap:IncreaseDecreaseInAssetsDefinedBenefitSchemeFromBusinessCombinationsDisposals')" />
    <var name="section1subsection8XBRLPeriodSet" pre="section1subsection8.SetPeriod('Duration')" />
    <var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
    <var name="section1subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Assets distributed on settlements&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|Movement|Rows|*:item[8]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection9subsectionitem1add" pre="section1subsection9.AddItem(section1subsection9subsectionitem1)" />
    <var name="section1subsection9XBRLConceptNameSet" pre="section1subsection9.SetConceptName('uk-gaap:IncreaseDecreaseInAssetsDefinedBenefitSchemeFromSettlements')" />
    <var name="section1subsection9XBRLPeriodSet" pre="section1subsection9.SetPeriod('Duration')" />
    <var name="section1subsection9add" pre="section1.AddItem(section1subsection9)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:FairValueAssetsDefinedBenefitScheme')" />
    <var name="section1XBRLPeriodSet" pre="section1.SetPeriod('End')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
								</report-template>
								<report-template version="12" name="Asset categories" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme2AssetAnalysis" page-break-before="False" keep-with-next-strength="1" template-guid="15b34144-02f0-46b2-8663-3e1d7606b745">
									<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Analysis of assets</inline>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The major categories of scheme assets<inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|DisclosedBy|Current Period&quot;)[0].Value = '%'"><ws /> as a percentage of total scheme assets</inline><ws /> are as follows:</para>
</add-to-body></template>
									<report-template version="12" name="Asset categories expressed as an amount" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[0]|Assets|DisclosedBy|Current Period&quot;)[0].Value = 'Amount'" enabled="Conditional" section-name="FRS17PensionScheme2AssetCategories£" page-break-before="False" keep-with-next-strength="0" template-guid="8a4d15e5-12ee-4b90-ba86-a82652c8798f">
										<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('AssetFairValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Equity instruments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|Category|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:EquitiesHeldInPensionSchemeFairValue')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Debt instruments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|Category|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:DebtInstrumentsBondsHeldInPensionSchemeFairValue')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Property&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|Category|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:PropertyHeldInPensionSchemeFairValue')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cash&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|Category|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:CashHeldInPensionSchemeFairValue')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|Category|Rows|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:OtherAssetsHeldInPensionSchemeFairValue')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:FairValueAssetsDefinedBenefitScheme')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
									</report-template>
									<report-template version="12" name="Asset categories expressed as a %" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[0]|Assets|DisclosedBy|Current Period&quot;)[0].Value = '%'" enabled="Conditional" section-name="FRS17PensionScheme2AssetCategories%" page-break-before="False" keep-with-next-strength="0" template-guid="ca2e3621-e4c5-4920-aeb7-715a12c8a4c6">
										<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Table Text Percentage')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Table Text Percentage')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Table Text Percentage')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Table Text Percentage Final Value')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;%&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;%&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('AssetFairValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Equity instruments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|Category|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:EquitiesHeldInPensionSchemePercentage')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Debt instruments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|Category|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:DebtInstrumentsBondsHeldInPensionSchemePercentage')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Property&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|Category|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:PropertyHeldInPensionSchemePercentage')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cash&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|Category|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:CashHeldInPensionSchemePercentage')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|Category|Rows|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:OtherAssetsHeldInPensionSchemePercentage')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
									</report-template>
								</report-template>
								<report-template version="12" name="Actual return on scheme assets" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Conditional" section-name="FRS17PensionScheme2ActualReturnOnSchemeAssets" page-break-before="False" keep-with-next-strength="0" template-guid="1f1ff26f-2997-490e-93c0-94ff365d4a26">
									<template><add-to-body>
  <para base-style="Title" font-style="+italic" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          Actual return on scheme's assets
        </para>
</add-to-body></template>
									<report-template version="12" name="Actual return on scheme assets" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme2AssetActualReturn" page-break-before="False" keep-with-next-strength="1" template-guid="40068654-5507-4ab9-8112-e1b190c6a915">
										<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ActualReturn', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Actual return on scheme assets&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|ActualReturn', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:ActualReturnOnAssetsBenefitSchemeScheme')" />
    <var name="section1XBRLDimensionsSet" pre="section1.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="section1XBRLHypercubeNameSet" pre="section1.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
									</report-template>
								</report-template>
								<report-template version="12" name="No financial instruments or property occupied" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|OwnFinancialInstruments|Rows|*&quot;,null, true).Count = 0) and (reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|UsedByEntity|Rows|*&quot;,null, true).Count = 0)" enabled="Conditional" section-name="FRS17PensionScheme2NoFinancialInstrumentsOrPropertyOccupied" page-break-before="False" keep-with-next-strength="0" template-guid="dbc84370-3779-4c6a-9631-ee9a3d95c227">
									<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The pension scheme has not invested<inline condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|OwnFinancialInstruments|Rows|*&quot;,null, true).Count = 0)"><ws /> in any of the company's own financial instruments</inline><inline condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|OwnFinancialInstruments|Rows|*&quot;,null, true).Count = 0) and (reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|UsedByEntity|Rows|*&quot;,null, true).Count = 0)"><ws /> or</inline><inline condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|UsedByEntity|Rows|*&quot;,null, true).Count = 0)"><ws /> in properties or other assets used by the company</inline>
.</para>
</add-to-body></template>
								</report-template>
								<report-template version="12" name="Own financial instruments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|OwnFinancialInstruments|Rows|*&quot;,null, true).Count &gt; 0" enabled="Conditional" section-name="FRS17PensionScheme2AssetOwnFinancialInstruments" page-break-before="False" keep-with-next-strength="1" template-guid="42e92735-a2f6-4bc4-922a-7e82e8fc6c6a">
									<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The entity's own financial instruments included in the fair value of scheme assets are as follows:</para>
</add-to-body></template>
									<report-template version="12" name="Own financial instruments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme2AssetOwnFinancialInstrumentsValues" page-break-before="False" keep-with-next-strength="0" template-guid="7e824d3f-9302-4ef4-b065-7460a45735e9">
										<template><add-to-body>
  <table condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|OwnFinancialInstruments|Rows|*')[0].HasValue">
    <column-details column-number="1" free-space="100" align="bottom-left" />
    <column-details column-number="2" width="2mm" align="bottom-right" />
    <column-details column-number="3" width="22mm" align="bottom-right" />
    <column-details column-number="4" width="2mm" align="bottom-right" />
    <column-details column-number="5" width="2mm" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
    <column-details column-number="6" width="22mm" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
    <column-details column-number="7" width="2mm" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
    <table-row base-style="Table Column Heading">
      <table-cell>
      </table-cell>
      <table-cell>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data para-alignment="Centre">if reportHelper.IsAnnual then reportHelper.CurrentPeriod.EndDate.Value.ToString('yyyy')

else

reportHelper.CurrentPeriod.EndDate.Value.ToString('d MMMM yyyy')</data>
          <inline para-alignment="Centre">
          </inline>
          <br />
          <data para-alignment="Centre">
					reportHelper.StatutoryNoteScalingHeader
				</data>
          <inline para-alignment="Centre">
          </inline>
        </para>
      </table-cell>
      <table-cell>
      </table-cell>
      <table-cell>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data para-alignment="Centre">if reportHelper.IsAnnual then reportHelper.ComparativePeriod(1).EndDate.Value.ToString('yyyy')

else

reportHelper.ComparativePeriod(1).EndDate.Value.ToString('d MMMM yyyy')</data>
          <inline para-alignment="Centre">
          </inline>
          <br />
          <data para-alignment="Centre">
					reportHelper.StatutoryNoteScalingHeader
				</data>
          <inline para-alignment="Centre">
          </inline>
        </para>
      </table-cell>
    </table-row>
    <table-row-iterator iterate-over="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|OwnFinancialInstruments|Rows|*')" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
      <table-row xbrl-concept="uk-gaap:EntityFinancialInstrumentIncludedInPensionSchemeGrouping" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2">
        <table-cell>
          <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <inline xbrl-concept="uk-gaap:DescriptionEntityFinancialInstrumentIncludedInPensionScheme" xbrl-period="CurrentPeriod">
              <data>reporting.queries.client.lookupaccountingperioddata(item, '*|*|Current Period')[0].Value</data>
            </inline>
          </para>
        </table-cell>
        <table-cell />
        <table-cell>
          <para para-alignment="Left" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <inline xbrl-concept="uk-gaap:FairValueEntityFinancialInstrumentIncludedInPensionScheme" xbrl-period="CurrentPeriod">
              <data base-style="Table Text">reporting.queries.client.lookupaccountingperioddata(item, '*|*|Current Period')[1].Value / reportHelper.StatutoryNoteScaling</data>
            </inline>
          </para>
        </table-cell>
        <table-cell />
        <table-cell />
        <table-cell>
          <para para-alignment="Right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <data base-style="Table Text">reporting.queries.client.lookupaccountingperioddata(item, '*|*|Prior Period')[0].Value / reportHelper.StatutoryNoteScaling</data>
          </para>
        </table-cell>
        <table-cell />
      </table-row>
    </table-row-iterator>
    <table-row>
      <table-cell />
      <table-cell />
      <table-cell bottom-border-style="Doubleline" bottom-border-size="2pt">
      </table-cell>
      <table-cell />
      <table-cell />
      <table-cell bottom-border-style="Doubleline" bottom-border-size="2pt">
      </table-cell>
      <table-cell />
    </table-row>
  </table>
</add-to-body></template>
									</report-template>
								</report-template>
								<report-template version="12" name="Property occupied" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|UsedByEntity|Rows|*&quot;,null, true).Count &gt; 0" enabled="Conditional" section-name="FRS17PensionScheme2AssetPropertyOccupied" page-break-before="False" keep-with-next-strength="1" template-guid="92a02c77-f21b-4747-a96f-36414cb5fbf8">
									<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The property occupied by, or other asset used by, the entity included in the fair value of scheme assets are as follows:</para>
</add-to-body></template>
									<report-template version="12" name="Property occupied" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme2AssetPropertyOccupiedValues" page-break-before="False" keep-with-next-strength="0" template-guid="308b50e5-878e-404a-ac60-b875b5700d8d">
										<template><add-to-body>
  <table condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|UsedByEntity|Rows|*')[0].HasValue">
    <column-details column-number="1" free-space="100" align="bottom-left" />
    <column-details column-number="2" width="2mm" align="bottom-right" />
    <column-details column-number="3" width="22mm" align="bottom-right" />
    <column-details column-number="4" width="2mm" align="bottom-right" />
    <column-details column-number="5" width="2mm" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
    <column-details column-number="6" width="22mm" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
    <column-details column-number="7" width="2mm" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
    <table-row base-style="Table Column Heading">
      <table-cell>
      </table-cell>
      <table-cell>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data para-alignment="Centre">if reportHelper.IsAnnual then reportHelper.CurrentPeriod.EndDate.Value.ToString('yyyy')

else

reportHelper.CurrentPeriod.EndDate.Value.ToString('d MMMM yyyy')</data>
          <inline para-alignment="Centre">
          </inline>
          <br />
          <data para-alignment="Centre">
					reportHelper.StatutoryNoteScalingHeader
				</data>
          <inline para-alignment="Centre">
          </inline>
        </para>
      </table-cell>
      <table-cell>
      </table-cell>
      <table-cell>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data para-alignment="Centre">if reportHelper.IsAnnual then reportHelper.ComparativePeriod(1).EndDate.Value.ToString('yyyy')

else

reportHelper.ComparativePeriod(1).EndDate.Value.ToString('d MMMM yyyy')</data>
          <inline para-alignment="Centre">
          </inline>
          <br />
          <data para-alignment="Centre">
					reportHelper.StatutoryNoteScalingHeader
				</data>
          <inline para-alignment="Centre">
          </inline>
        </para>
      </table-cell>
    </table-row>
    <table-row-iterator iterate-over="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|UsedByEntity|Rows|*')" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
      <table-row xbrl-concept="uk-gaap:PropertyInPensionSchemeOccupiedByEntityOrOtherAssetsInSchemeUsedByEntityGrouping" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2">
        <table-cell>
          <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <inline xbrl-concept="uk-gaap:DescriptionPropertyOrOtherAssetIncludedInPensionSchemeWhichUsedByEntity" xbrl-period="CurrentPeriod">
              <data>reporting.queries.client.lookupaccountingperioddata(item, '*|*|Current Period')[0].Value</data>
            </inline>
          </para>
        </table-cell>
        <table-cell />
        <table-cell>
          <para para-alignment="Right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <inline para-alignment="Left" xbrl-concept="uk-gaap:FairValuePropertyOrOtherAssetIncludedInPensionSchemeUsedByEntity" xbrl-period="CurrentPeriod">
              <data base-style="Table Text">reporting.queries.client.lookupaccountingperioddata(item, '*|*|Current Period')[1].Value / reportHelper.StatutoryNoteScaling</data>
              <inline para-alignment="Left">
              </inline>
            </inline>
          </para>
        </table-cell>
        <table-cell />
        <table-cell />
        <table-cell>
          <para para-alignment="Right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <data base-style="Table Text">reporting.queries.client.lookupaccountingperioddata(item, '*|*|Prior Period')[0].Value / reportHelper.StatutoryNoteScaling</data>
          </para>
        </table-cell>
        <table-cell />
      </table-row>
    </table-row-iterator>
    <table-row>
      <table-cell />
      <table-cell />
      <table-cell bottom-border-style="Doubleline" bottom-border-size="2pt">
      </table-cell>
      <table-cell />
      <table-cell />
      <table-cell bottom-border-style="Doubleline" bottom-border-size="2pt">
      </table-cell>
      <table-cell />
    </table-row>
  </table>
</add-to-body></template>
									</report-template>
								</report-template>
								<report-template version="12" name="Basis" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme2AssetBasis" page-break-before="False" keep-with-next-strength="0" template-guid="7cf1f4b2-d1bd-4b43-8db8-09e4898cdf68">
									<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|Basis|Current Period")[0].Value</data>
  </para>
</add-to-body></template>
								</report-template>
							</report-template>
							<report-template version="12" name="Liabilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme2Liabilities" page-break-before="False" keep-with-next-strength="1" template-guid="bc4e3da4-da05-41de-811e-30c16c10c4f5">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Scheme liabilities</inline>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Changes in the present value of scheme liabilities are as follows:</para>
</add-to-body></template>
								<report-template version="12" name="Changes in present value" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme2ChangesInPresentValue" page-break-before="False" keep-with-next-strength="0" template-guid="fbca399c-dc99-4968-aa32-e26b98668286">
									<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('Current')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('Prior')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('LiabilityMovement', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Present value at end of &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Present value at start of &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Liabilities|Movement|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:DefinedBenefitObligationPresentValue')" />
    <var name="section1subsection1XBRLDimensionsSet" pre="section1subsection1.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="section1subsection1XBRLHypercubeNameSet" pre="section1subsection1.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection1XBRLPeriodSet" pre="section1subsection1.SetPeriod('Start')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Liabilities|Movement|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:CurrentServiceCostDefinedBenefitScheme')" />
    <var name="section1subsection2XBRLDimensionsSet" pre="section1subsection2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="section1subsection2XBRLHypercubeNameSet" pre="section1subsection2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection2XBRLPeriodSet" pre="section1subsection2.SetPeriod('Duration')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Past service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Liabilities|Movement|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:PastServiceCostDefinedBenefitScheme')" />
    <var name="section1subsection3XBRLDimensionsSet" pre="section1subsection3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="section1subsection3XBRLHypercubeNameSet" pre="section1subsection3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection3XBRLPeriodSet" pre="section1subsection3.SetPeriod('Duration')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Actuarial gains and losses&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Liabilities|Movement|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:ActuarialGainLossOnLiabilitiesDefinedBenefitScheme')" />
    <var name="section1subsection4XBRLPeriodSet" pre="section1subsection4.SetPeriod('Duration')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Foreign exchange differences&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Liabilities|Movement|Rows|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:IncreaseDecreaseInLiabilitiesDefinedBenefitSchemeFromForeignExchangeDifferences')" />
    <var name="section1subsection5XBRLDimensionsSet" pre="section1subsection5.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="section1subsection5XBRLHypercubeNameSet" pre="section1subsection5.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection5XBRLPeriodSet" pre="section1subsection5.SetPeriod('Duration')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Interest cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Liabilities|Movement|Rows|*:item[5]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:ExpenseIncomeFromInterestCostDefinedBenefitScheme')" />
    <var name="section1subsection6XBRLDimensionsSet" pre="section1subsection6.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="section1subsection6XBRLHypercubeNameSet" pre="section1subsection6.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection6XBRLPeriodSet" pre="section1subsection6.SetPeriod('Duration')" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Benefits paid&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Liabilities|Movement|Rows|*:item[6]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:BenefitsPaidRelatedToDefinedBenefitScheme')" />
    <var name="section1subsection7XBRLDimensionsSet" pre="section1subsection7.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="section1subsection7XBRLHypercubeNameSet" pre="section1subsection7.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection7XBRLPeriodSet" pre="section1subsection7.SetPeriod('Duration')" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Contributions by scheme participants&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Liabilities|Movement|Rows|*:item[7]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
    <var name="section1subsection8XBRLConceptNameSet" pre="section1subsection8.SetConceptName('uk-gaap:ContributionsByDefinedBenefitSchemeParticipants')" />
    <var name="section1subsection8XBRLDimensionsSet" pre="section1subsection8.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="section1subsection8XBRLHypercubeNameSet" pre="section1subsection8.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection8XBRLPeriodSet" pre="section1subsection8.SetPeriod('Duration')" />
    <var name="section1subsection8XBRLReverseSignSet" pre="section1subsection8.SetReverseSign(true)" />
    <var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
    <var name="section1subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Liabilities assumed in business combinations&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Liabilities|Movement|Rows|*:item[8]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection9subsectionitem1add" pre="section1subsection9.AddItem(section1subsection9subsectionitem1)" />
    <var name="section1subsection9XBRLConceptNameSet" pre="section1subsection9.SetConceptName('uk-gaap:IncreaseDecreaseInLiabilitiesDefinedBenefitSchemeFromBusinessCombinations')" />
    <var name="section1subsection9XBRLDimensionsSet" pre="section1subsection9.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="section1subsection9XBRLHypercubeNameSet" pre="section1subsection9.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection9XBRLPeriodSet" pre="section1subsection9.SetPeriod('Duration')" />
    <var name="section1subsection9add" pre="section1.AddItem(section1subsection9)" />
    <var name="section1subsection10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Liabilities extinguished on settlements&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection10subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Liabilities|Movement|Rows|*:item[9]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection10subsectionitem1add" pre="section1subsection10.AddItem(section1subsection10subsectionitem1)" />
    <var name="section1subsection10XBRLConceptNameSet" pre="section1subsection10.SetConceptName('uk-gaap:IncreaseDecreaseInLiabilitiesDefinedBenefitSchemeFromSettlements')" />
    <var name="section1subsection10XBRLDimensionsSet" pre="section1subsection10.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="section1subsection10XBRLHypercubeNameSet" pre="section1subsection10.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection10XBRLPeriodSet" pre="section1subsection10.SetPeriod('Duration')" />
    <var name="section1subsection10add" pre="section1.AddItem(section1subsection10)" />
    <var name="section1subsection11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Effect of curtailments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection11subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Liabilities|Movement|Rows|*:item[10]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection11subsectionitem1add" pre="section1subsection11.AddItem(section1subsection11subsectionitem1)" />
    <var name="section1subsection11XBRLConceptNameSet" pre="section1subsection11.SetConceptName('uk-gaap:IncreaseDecreaseInLiabilitiesDefinedBenefitSchemeFromCurtailments')" />
    <var name="section1subsection11XBRLDimensionsSet" pre="section1subsection11.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="section1subsection11XBRLHypercubeNameSet" pre="section1subsection11.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection11XBRLPeriodSet" pre="section1subsection11.SetPeriod('Duration')" />
    <var name="section1subsection11add" pre="section1.AddItem(section1subsection11)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:DefinedBenefitObligationPresentValue')" />
    <var name="section1XBRLDimensionsSet" pre="section1.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="section1XBRLHypercubeNameSet" pre="section1.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1XBRLPeriodSet" pre="section1.SetPeriod('End')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('UnfundedFundedLiabilities', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Analysed as:&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Present value arising from unfunded schemes&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Liabilities|UnfundedPresentValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:DefinedBenefitObligationFromSchemesThatAreWhollyUnfundedPresentValue')" />
    <var name="section2subsection1XBRLDimensionsSet" pre="section2subsection1.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="section2subsection1XBRLHypercubeNameSet" pre="section2subsection1.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section2subsection1XBRLPeriodSet" pre="section2subsection1.SetPeriod('End')" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Present value arising from wholly or partly funded schemes&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Liabilities|FundedPresentValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2XBRLConceptNameSet" pre="section2subsection2.SetConceptName('uk-gaap:DefinedBenefitObligationFromSchemesThatAreWhollyOrPartlyFundedPresentValue')" />
    <var name="section2subsection2XBRLDimensionsSet" pre="section2subsection2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="section2subsection2XBRLHypercubeNameSet" pre="section2subsection2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section2subsection2XBRLPeriodSet" pre="section2subsection2.SetPeriod('End')" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2XBRLConceptNameSet" pre="section2.SetConceptName('uk-gaap:DefinedBenefitObligationPresentValue')" />
    <var name="section2XBRLPeriodSet" pre="section2.SetPeriod('End')" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
								</report-template>
							</report-template>
						</report-template>
						<report-template version="12" name="Principal actuarial assumptions" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme2Assumptions" page-break-before="False" keep-with-next-strength="1" template-guid="63d04650-dc68-4f32-9e79-42de8dc8bd7a">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Principal actuarial assumpions</inline>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The principal actuarial assumpions at the balance sheet date are as follows:</para>
</add-to-body></template>
							<report-template version="12" name="Principal actuarial assumptions" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme2AssumptionsValues" page-break-before="False" keep-with-next-strength="0" template-guid="b48d3711-61a4-4ea3-be1f-552988311580">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Table Text Percentage')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Table Text Percentage')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Table Text Percentage')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Table Text Percentage Final Value')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;%&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;%&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ActuarialAssumptions', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Discount rate&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assumptions|ActuarialAssumptions|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:RateUsedToDiscountSchemeLiabilities')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Future salary increases&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assumptions|ActuarialAssumptions|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:AssumedRateIncreasePensionableSalaries')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Future pension increases&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[1]|Assumptions|ActuarialAssumptions|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:AssumedRateIncreasePensionsInPaymentDeferredPensions')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Inflation&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assumptions|ActuarialAssumptions|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:AssumedRateInflation')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Proportion of employees opting for early retirement&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assumptions|ActuarialAssumptions|Rows|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:AssumedProportionEmployeesOptingForEarlyRetirement')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expected return on scheme assets - equity&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assumptions|ActuarialAssumptions|Rows|*:item[5]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:EquitiesHeldInPensionSchemeExpectedRateReturn')" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expected return on scheme assets - cash&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assumptions|ActuarialAssumptions|Rows|*:item[6]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:CashHeldInPensionSchemeExpectedRateReturn')" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expected return on scheme assets - property&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assumptions|ActuarialAssumptions|Rows|*:item[7]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
    <var name="section1subsection8XBRLConceptNameSet" pre="section1subsection8.SetConceptName('uk-gaap:PropertyHeldInPensionSchemeExpectedRateReturn')" />
    <var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
    <var name="section1subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expected return on scheme assets - other&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assumptions|ActuarialAssumptions|Rows|*:item[8]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection9subsectionitem1add" pre="section1subsection9.AddItem(section1subsection9subsectionitem1)" />
    <var name="section1subsection9XBRLConceptNameSet" pre="section1subsection9.SetConceptName('uk-gaap:ExpectedRateReturnOnTypeOtherAssetHeldInPensionScheme')" />
    <var name="section1subsection9add" pre="section1.AddItem(section1subsection9)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Mortality" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme2Mortality" page-break-before="False" keep-with-next-strength="0" template-guid="f6f66538-cf28-433c-b30a-cbfb356d37e7">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Post retirement mortality assumptions</inline>
  </para>
</add-to-body></template>
								<report-template version="12" name="Mortality" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme2MortalityValues" page-break-before="False" keep-with-next-strength="0" template-guid="2ec1e9a1-6b3d-436f-a568-7a3ba3d36850">
									<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'MyFirstTable', 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Table Text Percentage')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Table Text Percentage')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Table Text Percentage')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Table Text Percentage Final Value')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;Years&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;Years&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Mortality', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current pensioners at retirement age - male&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assumptions|MortalityRates|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:LongevityInYearsRetirementForCurrentUKPensionersMen')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current pensioners at retirement age - female&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assumptions|MortalityRates|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:LongevityInYearsRetirementForCurrentUKPensionersWomen')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Future pensioners at retirement age - male&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assumptions|MortalityRates|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:LongevityInYearsRetirementForFutureUKPensionersMen')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Future pensioners at retirement age - female&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assumptions|MortalityRates|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:LongevityInYearsRetirementForFutureUKPensionersWomen')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
								</report-template>
							</report-template>
						</report-template>
						<report-template version="12" name="Amounts recognised in profit and loss" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme2ProfitAndLoss" page-break-before="False" keep-with-next-strength="1" template-guid="8d5b1629-605d-488a-991a-372abbb837a2">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Amounts recognised in the profit and loss account</inline>
  </para>
</add-to-body></template>
							<report-template version="12" name="Amounts recognised in operating profit" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme2OperatingProfitValues" page-break-before="False" keep-with-next-strength="0" template-guid="978e4c56-591e-4a91-9d0b-c5cb004e7f5f">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('RecognisedInOperatingProfitLoss', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Amounts recognised in &lt;ws/&gt;&lt;data&gt;reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(1m,1m).ComparativesUnfiltered.AllCategoriesRoot,&amp;apos;OpProfit&amp;apos;).Description.ToLower()&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Recognised in arriving at operating &lt;ws/&gt;&lt;data&gt;reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(1m,1m).ComparativesUnfiltered.AllCategoriesRoot,&amp;apos;OpProfit&amp;apos;).Description.ToLower()&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:CurrentServiceCostDefinedBenefitScheme')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Past service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:PastServiceCostDefinedBenefitScheme')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Effect of FRS 17 paragraph 41&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:IncomeExpenseFromAmountsNotRecognisedAsAnAssetBecauseIAS58bLimit')" />
    <var name="section1subsection3XBRLDimensionsSet" pre="section1subsection3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="section1subsection3XBRLHypercubeNameSet" pre="section1subsection3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection3XBRLReverseSignSet" pre="section1subsection3.SetReverseSign(true)" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Losses (gains) on curtailments and settlements&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:ExpenseIncomeFromDefinedBenefitSchemeSettlementsCurtailments')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:ChargeCreditToOperatingProfitFromDefinedBenefitScheme')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('RecognisedInFinance', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Amounts recognised in other finance &lt;ws/&gt;&lt;inline condition=&quot;(reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[0].Value &amp;lt; 0&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[1].Value &amp;lt; 0)&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;(reportHelper.HasPriorPeriod=false and&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[0].Value &amp;lt; 0)&#xD;&#xA;&quot;&gt;income&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;(reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[0].Value &amp;gt;= 0&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[1].Value &amp;gt;= 0)&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;(reportHelper.HasPriorPeriod=false and&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[0].Value &amp;gt;= 0)&#xD;&#xA;&quot;&gt;&lt;ws/&gt; cost&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[0].Value &amp;lt; 0&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[1].Value &amp;gt;= 0&#xD;&#xA;&quot;&gt;&lt;ws/&gt; (income)/cost&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[0].Value &amp;gt;= 0&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[1].Value &amp;lt; 0&#xD;&#xA;&quot;&gt;&lt;ws/&gt; cost/(income)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Recognised in other finance cost&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Interest&lt;inline condition=&quot;(reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Current Period&amp;quot;)[0].Value &amp;lt;0 and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Prior Period&amp;quot;)[0].Value &amp;lt;0)&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;(reportHelper.HasPriorPeriod=false and&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Current Period&amp;quot;)[0].Value &amp;lt; 0)&#xD;&#xA;&#xD;&#xA;&quot;&gt;&lt;ws/&gt; income&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;(reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Current Period&amp;quot;)[0].Value &amp;gt;=0 and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Prior Period&amp;quot;)[0].Value &amp;gt;=0)&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;(reportHelper.HasPriorPeriod=false and&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Current Period&amp;quot;)[0].Value &amp;gt;= 0)&#xD;&#xA;&#xD;&#xA;&quot;&gt;&lt;ws/&gt; cost&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Current Period&amp;quot;)[0].Value &amp;lt;0 and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Prior Period&amp;quot;)[0].Value &amp;gt;=0&#xD;&#xA;&#xD;&#xA;&quot;&gt;&lt;ws/&gt; (income)/cost&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Current Period&amp;quot;)[0].Value &amp;gt;=0 and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Prior Period&amp;quot;)[0].Value &amp;lt;0&#xD;&#xA;&quot;&gt;&lt;ws/&gt; cost/(income)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:ExpenseIncomeFromInterestCostDefinedBenefitScheme')" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expected return on scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2XBRLConceptNameSet" pre="section2subsection2.SetConceptName('uk-gaap:ExpenseIncomeFromExpectedReturnOnAssetsDefinedBenefitScheme')" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2XBRLConceptNameSet" pre="section2.SetConceptName('uk-gaap:ChargeCreditToFinanceChargesFromDefinedBenefitScheme')" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('RecognisedInProfitAndLoss', '&lt;para&gt;Total recognised in the profit and loss account&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.Always, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section3item1" pre="section3.AddTotalItem(section1)" />
    <var name="section3item2" pre="section3.AddTotalItem(section2)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:PensionCostsDefinedBenefitScheme')" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
						</report-template>
						<report-template version="12" name="Amounts recognised in the STRGL" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme2STRGL" page-break-before="False" keep-with-next-strength="1" template-guid="6a839df7-d941-4ba1-bb2a-b97fd26a3e44">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Amounts recognised in the statement of total recognised gains and losses</inline>
  </para>
</add-to-body></template>
							<report-template version="12" name="Amounts recognised in the STRGL" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme2STRGLValues" page-break-before="False" keep-with-next-strength="0" template-guid="85c53003-1000-4100-9b2f-53d062748816">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Section1', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Actuarial gains and losses recognised in the Statement of Total Recognised Gains and Losses&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Actual return less expected return on scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|STRGL|STRGLAmounts|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:ExperienceGainLossArisingOnAssetsDefinedBenefitScheme')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Effect of FRS 17 paragraph 41&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|STRGL|STRGLAmounts|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:GainLossFromImpactFRS17.41LimitRecognisedInStatementTotalRecognisedGainsLosses')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Changes in assumptions&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|STRGL|STRGLAmounts|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:GainLossFromChangesInAssumptionsUnderlyingPresentValueDefinedBenefitSchemeLiabilities')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other actuarial gains (losses)&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|STRGL|STRGLAmounts|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:ActuarialGainLossOnDefinedBenefitSchemeRecognisedInStatementTotalRecognisedGainsLosses')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Cumulative amount of actuarial gains and losses" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme2STRGLSumulativeAmount" page-break-before="False" keep-with-next-strength="0" template-guid="1867feed-f08d-4b0d-888f-a6efab8eb51f">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The cumulative amount of actuarial gains and losses recognised in the statement of total recognised gains and (losses) since 1 January 2002 is <ws /><inline xbrl-concept="uk-gaap:CumulativeActuarialGainLossOnDefinedBenefitSchemeRecognisedInStatementTotalRecognisedGainsLosses" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|STRGL|STRGL|Current Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|STRGL|STRGLAmounts|Columns|Amount|*:item[0]|Current Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|STRGL|STRGLAmounts|Columns|Amount|*:item[1]|Current Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|STRGL|STRGLAmounts|Columns|Amount|*:item[2]|Current Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|STRGL|STRGLAmounts|Columns|Amount|*:item[3]|Current Period")[0].Value+

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|STRGL|STRGLAmounts|Columns|Amount|*:item[0]|Prior Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|STRGL|STRGLAmounts|Columns|Amount|*:item[1]|Prior Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|STRGL|STRGLAmounts|Columns|Amount|*:item[2]|Prior Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|STRGL|STRGLAmounts|Columns|Amount|*:item[3]|Prior Period")[0].Value</data></inline><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.PriorPeriod.EndDate.Value.Year</data><ws /> - <ws /><inline xbrl-concept="uk-gaap:CumulativeActuarialGainLossOnDefinedBenefitSchemeRecognisedInStatementTotalRecognisedGainsLosses" xbrl-period="PriorPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|STRGL|STRGL|Current Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|STRGL|STRGLAmounts|Columns|Amount|*:item[0]|Prior Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|STRGL|STRGLAmounts|Columns|Amount|*:item[1]|Prior Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|STRGL|STRGLAmounts|Columns|Amount|*:item[2]|Prior Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|STRGL|STRGLAmounts|Columns|Amount|*:item[3]|Prior Period")[0].Value</data></inline>
)</inline>
.</para>
</add-to-body></template>
							</report-template>
						</report-template>
						<report-template version="12" name="History of experience adjustments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme2History" page-break-before="False" keep-with-next-strength="1" template-guid="fff72531-5e96-4d18-b561-6a61c8c24d4b">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">History of experience adjustments on scheme assets and liabilities</inline>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Amounts for the current<inline condition="((reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|FairValue|Columns|Amount|*:item[0]|*:filter[&gt;0]&quot; ,null, true).Count)-1)&lt;1"><ws /> period</inline><inline condition="((reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|FairValue|Columns|Amount|*:item[0]|*:filter[&gt;0]&quot; ,null, true).Count)-1)=1"><ws /> and previous period</inline><inline condition="((reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|FairValue|Columns|Amount|*:item[0]|*:filter[&gt;0]&quot; ,null, true).Count)-1)&gt;1"><ws /> and previous <ws /><data>(reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|FairValue|Columns|Amount|*:item[0]|*:filter[&gt;0]" ,null, true).Count)-1</data><ws /> periods</inline><ws /> are as follows:</para>
</add-to-body></template>
							<report-template version="12" name="History of experience adjustments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme2HistoryValues" page-break-before="False" keep-with-next-strength="0" template-guid="f9ace98d-ad8c-44af-8299-4cd810396120">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4filter1" pre="newComputation.GetDateFilter(-2, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod2', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column4filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <var name="column5filter1" pre="newComputation.GetDateFilter(-3, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod3', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column5filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column5add" pre="smartTable.AddColumn(column5)" />
    <var name="column6filter1" pre="newComputation.GetDateFilter(-4, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod4', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column6filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column6add" pre="smartTable.AddColumn(column6)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('HistoryOfExperience', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;quot;surplus/(deficit)&amp;quot;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; in scheme&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Fair value of scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|FairValue|Rows|*', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:FairValueAssetsDefinedBenefitScheme')" />
    <var name="section1subsection1XBRLDimensionsSet" pre="section1subsection1.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="section1subsection1XBRLHypercubeNameSet" pre="section1subsection1.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Present value of scheme liabilities&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Liabilities|PresentValue|Rows|*', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:DefinedBenefitObligationPresentValue')" />
    <var name="section1subsection2XBRLDimensionsSet" pre="section1subsection2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="section1subsection2XBRLHypercubeNameSet" pre="section1subsection2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection2XBRLReverseSignSet" pre="section1subsection2.SetReverseSign(true)" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
    <var name="section1XBRLReverseSignSet" pre="section1.SetReverseSign(true)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Experience values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme2ExperienceValues" page-break-before="False" keep-with-next-strength="0" template-guid="df697144-447b-441a-bf55-51657e1dcd89">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Experience adjustments:</para>
</add-to-body></template>
								<report-template version="12" name="Experience expressed as an amount" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|ExperienceAdjustments|DisclosedBy|Current Period&quot;)[0].Value = 'Amount'" enabled="Conditional" section-name="FRS17PensionScheme2Experience£" page-break-before="False" keep-with-next-strength="0" template-guid="9fdd7651-3f69-49f5-a4b8-5e6c65b889e2">
									<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Grand Total')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Grand Total')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Grand Total')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Grand Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Grand Total')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Grand Total')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Grand Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Grand Total')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Grand Total')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4filter1" pre="newComputation.GetDateFilter(-2, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod2', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column4filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <var name="column5filter1" pre="newComputation.GetDateFilter(-3, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod3', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column5filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column5add" pre="smartTable.AddColumn(column5)" />
    <var name="column6filter1" pre="newComputation.GetDateFilter(-4, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod4', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column6filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column6add" pre="smartTable.AddColumn(column6)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ExperienceAmount', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Experience adjustments arising on scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|ExperienceAdjustments|ExperienceAdjustments|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:ExperienceGainLossArisingOnAssetsDefinedBenefitScheme')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Experience adjustments arising on scheme liabilities&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|ExperienceAdjustments|ExperienceAdjustments|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:ExperienceGainLossArisingOnLiabilitiesDefinedBenefitScheme')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
								</report-template>
								<report-template version="12" name="Experience expressed as a percentage" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|ExperienceAdjustments|DisclosedBy|Current Period&quot;)[0].Value = '%'" enabled="Conditional" section-name="FRS17PensionScheme2Experience%" page-break-before="False" keep-with-next-strength="0" template-guid="d8c96f8b-5805-4099-bf83-c5530efe5df7">
									<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'MyFirstTable', 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Grand Total')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Grand Total')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Grand Total')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Grand Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Grand Total')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Grand Total')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Grand Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Grand Total')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Grand Total')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;%&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;%&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4filter1" pre="newComputation.GetDateFilter(-2, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod2', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column4filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;%&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column4XBRLDimensionsSet" pre="column4.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column4XBRLHypercubeNameSet" pre="column4.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <var name="column5filter1" pre="newComputation.GetDateFilter(-3, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod3', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column5filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;%&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column5add" pre="smartTable.AddColumn(column5)" />
    <var name="column6filter1" pre="newComputation.GetDateFilter(-4, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod4', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column6filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;%&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column6XBRLDimensionsSet" pre="column6.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column6XBRLHypercubeNameSet" pre="column6.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column6add" pre="smartTable.AddColumn(column6)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ExperiencePercent', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Experience adjustments arising on scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|ExperienceAdjustments|ExperienceAdjustments|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:ExperienceGainLossArisingOnAssetsDefinedBenefitSchemeAsPercentageSchemeAssets')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Experience adjustments arising on scheme liabilities&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|ExperienceAdjustments|ExperienceAdjustments|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:ExperienceGainLossArisingOnLiabilitiesDefinedBenefitSchemeAsPercentageSchemeLiabilities')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
								</report-template>
							</report-template>
						</report-template>
						<report-template version="12" name="Restatement of comparatives" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|ExperienceAdjustments|ComparativesRestated|Current Period&quot;)[0].Value =true" enabled="Conditional" section-name="FRS17PensionScheme2RestatedComparatives" page-break-before="False" keep-with-next-strength="0" template-guid="81a61093-d9f1-4dce-982d-7a1d94af2e95">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:StatementThatEntityHasChosenNotToRestateValuesForPastYearsInAccordanceWithFRS17.95C" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2" xbrl-invert-sign="True">Comparative figures have not been restated as permitted by FRS 17.</para>
</add-to-body></template>
						</report-template>
					</report-template>
					<report-template version="12" name="FRSSE Pension scheme 2" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('906').HasTransactions and FRSSE = true" enabled="Conditional" section-name="FRSSEPensionScheme2" page-break-before="False" keep-with-next-strength="0" template-guid="18546d09-469d-4051-82a1-0b4f23151e98">
						<template><add-to-body>
</add-to-body></template>
						<report-template version="12" name="Details of scheme" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRSSEPensionScheme2Details" page-break-before="False" keep-with-next-strength="1" template-guid="9cdb1d0e-1d7c-45db-965c-ae4d006d0b66">
							<template><add-to-body>
  <para para-alignment="Full" base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:NameDefinedBenefitScheme" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SchemeDetails|Name|Current Period")[0].Value</data>
  </para>
</add-to-body></template>
							<report-template version="12" name="Description and valuation" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRSSEPensionScheme2DescriptionAnd Valuation" page-break-before="False" keep-with-next-strength="0" template-guid="67a0aa7a-e10d-43ce-a2e6-c11f5304fab8">
								<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:DescriptionDefinedBenefitScheme" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SchemeDetails|Description|Current Period")[0].Value</data>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The most recent valuation was at <ws /><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SchemeDetails|Date|Current Period")[0].Value</data><ws /> which has been updated to reflect conditions at the balance sheet date. <ws /><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SchemeDetails|Details|Current Period")[0].Value</data><ws /><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SchemeDetails|ActuaryEmployee|Current Period&quot;)[0].Value =true or &#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SchemeDetails|ActuaryOfficer|Current Period&quot;)[0].Value =true">The actuary is an <ws /><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SchemeDetails|ActuaryEmployee|Current Period&quot;)[0].Value =true">employee <ws /></inline><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SchemeDetails|ActuaryEmployee|Current Period&quot;)[0].Value =true and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SchemeDetails|ActuaryOfficer|Current Period&quot;)[0].Value =true"><ws /> and <ws /></inline><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SchemeDetails|ActuaryOfficer|Current Period&quot;)[0].Value =true">officer <ws /></inline>
of the company.</inline><ws /></para>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Contributions expressed as an amount" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SchemeDetails|DisclosedBy|Current Period&quot;)[0].Value = 'Amount'" enabled="Conditional" section-name="FRSSEPensionScheme2Contributions£" page-break-before="False" keep-with-next-strength="0" template-guid="d2888963-d0b6-45c7-ba97-204178b4da45">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
                      The contributions of the company were <ws /><inline xbrl-concept="uk-gaap:ContributionsToDefinedBenefitSchemeByEmployer" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2" xbrl-scaling="0"><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SchemeDetails|ContributionRates|Rows|*:item[0]|Current|Current Period")[0].Value</data></inline>
                      . <ws /><inline xbrl-concept="uk-gaap:StatementOnExpectedFutureContributionsToDefinedBenefitSchemeByEmployerDuringFollowingYear" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2">
                        Future contributions in the next year are expected to be <ws /><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SchemeDetails|ContributionRates|Rows|*:item[0]|Future|Current Period")[0].Value</data>
                        .
                      </inline></para>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Contributions expressed as a percentage" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SchemeDetails|DisclosedBy|Current Period&quot;)[0].Value = '%'" enabled="Conditional" section-name="FRSSEPensionScheme2Contributions%" page-break-before="False" keep-with-next-strength="0" template-guid="28e8f4f3-4b34-4301-a031-55ca89c24015">
								<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
                      The contributions of the company were <ws /><inline xbrl-concept="uk-gaap:NetContributionRateForLatestPeriodAsPercentagePensionableEarnings" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2"><data base-style="Percentage">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SchemeDetails|ContributionRates|Rows|*:item[0]|Current|Current Period")[0].Value</data></inline><ws /> of pensionable earnings. <ws /><inline xbrl-concept="uk-gaap:StatementOnExpectedFutureContributionsToDefinedBenefitSchemeByEmployerDuringFollowingYear" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2">
                        Future contributions in the next year are expected to be <ws /><data base-style="Percentage">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SchemeDetails|ContributionRates|Rows|*:item[0]|Future|Current Period")[0].Value</data><inline base-style="Percentage"><ws /> of pensionable earnings
                        </inline></inline>
                      .
                    </para>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Service costs expected to increase" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Conditional" section-name="FRSSEPensionScheme2CostIncrease" page-break-before="False" keep-with-next-strength="0" template-guid="fded5a1a-70e3-4000-86f1-68df7817f50a">
								<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SchemeDetails|SchemeClosed|Current Period&quot;)[0].Value = true&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SchemeDetails|AgeProfileRising|Current Period&quot;)[0].Value = false">The defined benefit scheme is now closed to new members so under the projected unit method the current service cost would be expected to increase over time as members of the scheme approach retirement.</inline>
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SchemeDetails|AgeProfileRising|Current Period&quot;)[0].Value = true&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SchemeDetails|SchemeClosed|Current Period&quot;)[0].Value = false">The age profile of active members is rising significantly so under the projected unit method the current service cost would be expected to increase over time as new members of the scheme approach retirement.</inline>
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SchemeDetails|SchemeClosed|Current Period&quot;)[0].Value = true and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SchemeDetails|AgeProfileRising|Current Period&quot;)[0].Value = true">The defined benefit scheme is now closed to new members and the age profile of active members is rising significantly so under the projected unit method the current service cost would be expected to increase over time as new members of the scheme approach retirement.</inline>
  </para>
</add-to-body></template>
							</report-template>
						</report-template>
						<report-template version="12" name="Scheme assets and liabilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRSSEPensionScheme2AssetsAndLiabilities" page-break-before="False" keep-with-next-strength="1" template-guid="35b9e5fc-e12f-4e06-ac9d-be6dd61a1200">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The amounts recognised in the balance sheet are as follows:</para>
</add-to-body></template>
							<report-template version="12" name="Scheme assets and liabilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Conditional" section-name="FRSSEPensionScheme2AssetsLiabilitiesValues" page-break-before="False" keep-with-next-strength="0" template-guid="35aac3c6-9767-4f0e-b030-b9cb61d82140">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ActuariaFairlValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Fair value of scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|AssetsAndLiabilities|Calculation|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:FairValueAssetsDefinedBenefitScheme')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ActuariaPresentlValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Present value of scheme liabilities&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|AssetsAndLiabilities|Calculation|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:DefinedBenefitObligationPresentValue')" />
    <var name="section2subsection1XBRLReverseSignSet" pre="section2subsection1.SetReverseSign(true)" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('ActuarialValue', '&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section3item1" pre="section3.AddTotalItem(section1)" />
    <var name="section3item2" pre="section3.AddTotalItem(section2)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
    <var name="section3XBRLReverseSignSet" pre="section3.SetReverseSign(true)" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <var name="section4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ReconcilingItems', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section4subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Unrecognised past service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|AssetsAndLiabilities|Reconciliation|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection1subsectionitem1add" pre="section4subsection1.AddItem(section4subsection1subsectionitem1)" />
    <var name="section4subsection1XBRLConceptNameSet" pre="section4subsection1.SetConceptName('uk-gaap:PastServiceCostNotRecognisedInBalanceSheet')" />
    <var name="section4subsection1add" pre="section4.AddItem(section4subsection1)" />
    <var name="section4subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amounts not recognised as an asset under FRS 17 paragraph 41&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|AssetsAndLiabilities|Reconciliation|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection2subsectionitem1add" pre="section4subsection2.AddItem(section4subsection2subsectionitem1)" />
    <var name="section4subsection2XBRLConceptNameSet" pre="section4subsection2.SetConceptName('uk-gaap:AmountNotRecognisedAsAnAssetBecauseIAS58bLimit')" />
    <var name="section4subsection2XBRLReverseSignSet" pre="section4subsection2.SetReverseSign(true)" />
    <var name="section4subsection2add" pre="section4.AddItem(section4subsection2)" />
    <var name="section4subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other amounts recognised in the balance sheet&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|AssetsAndLiabilities|Reconciliation|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection3subsectionitem1add" pre="section4subsection3.AddItem(section4subsection3subsectionitem1)" />
    <var name="section4subsection3XBRLConceptNameSet" pre="section4subsection3.SetConceptName('uk-gaap:OtherAssetsLiabilitiesRelatedToDefinedBenefitSchemeRecognisedInBalanceSheet')" />
    <var name="section4subsection3add" pre="section4.AddItem(section4subsection3)" />
    <var name="section4subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other amounts not recognised in the balance sheet&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|AssetsAndLiabilities|Reconciliation|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem1add" pre="section4subsection4.AddItem(section4subsection4subsectionitem1)" />
    <var name="section4subsection4add" pre="section4.AddItem(section4subsection4)" />
    <var name="section4add" pre="smartTable.AddTableBlock(section4)" />
    <var name="section5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('SurplusDeficit', '&lt;para&gt;Defined benefit pension scheme &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;surplus/(deficit)&amp;quot;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section5item1" pre="section5.AddTotalItem(section3)" />
    <var name="section5item2" pre="section5.AddTotalItem(section4)" />
    <var name="section5XBRLConceptNameSet" pre="section5.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
    <var name="section5XBRLReverseSignSet" pre="section5.SetReverseSign(true)" />
    <var name="section5add" pre="smartTable.AddTableBlock(section5)" />
    <var name="section6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('RelatedDeferredTax', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Related deferred tax &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;asset/(liability)&amp;quot;)&lt;/data&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section6subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Deferred tax on pension &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;asset/(liability)&amp;quot;)&lt;/data&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section6subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('905.80', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem1add" pre="section6subsection1.AddItem(section6subsection1subsectionitem1)" />
    <var name="section6subsection1add" pre="section6.AddItem(section6subsection1)" />
    <var name="section6XBRLConceptNameSet" pre="section6.SetConceptName('uk-gaap:DeferredTaxLiabilityAssetRelatedToDefinedBenefitScheme')" />
    <var name="section6XBRLReverseSignSet" pre="section6.SetReverseSign(true)" />
    <var name="section6add" pre="smartTable.AddTableBlock(section6)" />
    <var name="section7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('NetAssetLiability', '&lt;para&gt;Net &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;asset/(liability)&amp;quot;)&lt;/data&gt;&lt;ws/&gt; in the balance sheet&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section7item1" pre="section7.AddTotalItem(section5)" />
    <var name="section7item2" pre="section7.AddTotalItem(section6)" />
    <var name="section7XBRLConceptNameSet" pre="section7.SetConceptName('uk-gaap:RetirementBenefitObligationsSurplus')" />
    <var name="section7XBRLReverseSignSet" pre="section7.SetReverseSign(true)" />
    <var name="section7add" pre="smartTable.AddTableBlock(section7)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
						</report-template>
						<report-template version="12" name="Surplus (deficit)" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRSSEPensionScheme2SurplusDeficit" page-break-before="False" keep-with-next-strength="1" template-guid="1a71ad2d-37e5-4823-815f-1943e8ca6ed1">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Changes in the pension scheme surplus (deficit) are as follows:</para>
</add-to-body></template>
							<report-template version="12" name="Surplus (deficit)" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRSSEPensionScheme2SurplusDeficitValues" page-break-before="False" keep-with-next-strength="0" template-guid="30ef470a-8462-40ae-8df9-08b666a781e8">
								<template><add-to-body>
	<section width="100%">
		<!-- Setup the Computation and SmartTable -->
		<var name="currentPeriod" pre="reporting.CurrentPeriod" />
		<var name="newComputation" pre="reporting.NewComputation" />
		<var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
		<var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
		<var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
		<var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
		<var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
		<var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
		<var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
		<var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
		<var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
		<var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
		<var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
		<!-- Add the columns -->
		<var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
		<var name="column1add" pre="smartTable.AddColumn(column1)" />
		<var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
		<var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
		<var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
		<var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
		<var name="column2XBRLPeriodSet" pre="column2.SetPeriod('Current')" />
		<var name="column2add" pre="smartTable.AddColumn(column2)" />
		<var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
		<var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
		<var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
		<var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
		<var name="column3XBRLPeriodSet" pre="column3.SetPeriod('Prior')" />
		<var name="column3add" pre="smartTable.AddColumn(column3)" />
		<!-- Add the sections and rows -->
		<var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('SurplusDeficit', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Pension scheme &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;surplus (deficit)&amp;quot;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; at end of &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
		<var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Pension scheme &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;surplus (deficit)&amp;quot;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; at start of &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SurplusDeficit|Movement|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
		<var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
		<var name="section1subsection1XBRLDimensionsSet" pre="section1subsection1.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
		<var name="section1subsection1XBRLHypercubeNameSet" pre="section1subsection1.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
		<var name="section1subsection1XBRLPeriodSet" pre="section1subsection1.SetPeriod('Start')" />
		<var name="section1subsection1XBRLReverseSignSet" pre="section1subsection1.SetReverseSign(true)" />
		<var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
		<var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current service costs&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SurplusDeficit|Movement|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
		<var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:CurrentServiceCostDefinedBenefitScheme')" />
		<var name="section1subsection2XBRLPeriodSet" pre="section1subsection2.SetPeriod('Duration')" />
		<var name="section1subsection2XBRLReverseSignSet" pre="section1subsection2.SetReverseSign(true)" />
		<var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
		<var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Past service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SurplusDeficit|Movement|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
		<var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:PastServiceCostDefinedBenefitScheme')" />
		<var name="section1subsection3XBRLPeriodSet" pre="section1subsection3.SetPeriod('Duration')" />
		<var name="section1subsection3XBRLReverseSignSet" pre="section1subsection3.SetReverseSign(true)" />
		<var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
		<var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Actuarial gains and losses&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SurplusDeficit|Movement|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
		<var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:ActuarialGainLossOnLiabilitiesDefinedBenefitScheme')" />
		<var name="section1subsection4XBRLPeriodSet" pre="section1subsection4.SetPeriod('Duration')" />
		<var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
		<var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Foreign exchange differences&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SurplusDeficit|Movement|Rows|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
		<var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:IncreaseDecreaseInLiabilitiesDefinedBenefitSchemeFromForeignExchangeDifferences')" />
		<var name="section1subsection5XBRLPeriodSet" pre="section1subsection5.SetPeriod('Duration')" />
		<var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
		<var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Finance &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;income/(cost)&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SurplusDeficit|Movement|Rows|*:item[5]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
		<var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:ExpenseIncomeFromInterestCostDefinedBenefitScheme')" />
		<var name="section1subsection6XBRLPeriodSet" pre="section1subsection6.SetPeriod('Duration')" />
		<var name="section1subsection6XBRLReverseSignSet" pre="section1subsection6.SetReverseSign(true)" />
		<var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
		<var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cash contribution&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SurplusDeficit|Movement|Rows|*:item[6]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
		<var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:ContributionsToPensionScheme')" />
		<var name="section1subsection7XBRLPeriodSet" pre="section1subsection7.SetPeriod('Duration')" />
		<var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
		<var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;increase/(decrease)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; in assets from business combinations and disposals&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SurplusDeficit|Movement|Rows|*:item[7]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
		<var name="section1subsection8XBRLConceptNameSet" pre="section1subsection8.SetConceptName('uk-gaap:IncreaseDecreaseInAssetsDefinedBenefitSchemeFromBusinessCombinationsDisposals')" />
		<var name="section1subsection8XBRLPeriodSet" pre="section1subsection8.SetPeriod('Duration')" />
		<var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
		<var name="section1subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;(increase)/decrease&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; in liabilities from business combinations and disposals&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SurplusDeficit|Movement|Rows|*:item[8]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection9subsectionitem1add" pre="section1subsection9.AddItem(section1subsection9subsectionitem1)" />
		<var name="section1subsection9XBRLConceptNameSet" pre="section1subsection9.SetConceptName('uk-gaap:IncreaseDecreaseInLiabilitiesDefinedBenefitSchemeFromBusinessCombinationsDisposals')" />
		<var name="section1subsection9XBRLPeriodSet" pre="section1subsection9.SetPeriod('Duration')" />
		<var name="section1subsection9XBRLReverseSignSet" pre="section1subsection9.SetReverseSign(true)" />
		<var name="section1subsection9add" pre="section1.AddItem(section1subsection9)" />
		<var name="section1subsection10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Effects of curtailments and settlements&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection10subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SurplusDeficit|Movement|Rows|*:item[9]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection10subsectionitem1add" pre="section1subsection10.AddItem(section1subsection10subsectionitem1)" />
		<var name="section1subsection10XBRLConceptNameSet" pre="section1subsection10.SetConceptName('uk-gaap:GainLossFromSettlementsCurtailmentsIncludedInSeparateItemAfterOperatingProfit')" />
		<var name="section1subsection10XBRLPeriodSet" pre="section1subsection10.SetPeriod('Duration')" />
		<var name="section1subsection10add" pre="section1.AddItem(section1subsection10)" />
		<var name="section1subsection11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection11subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|SurplusDeficit|Movement|Rows|*:item[10]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection11subsectionitem1add" pre="section1subsection11.AddItem(section1subsection11subsectionitem1)" />
		<var name="section1subsection11XBRLPeriodSet" pre="section1subsection11.SetPeriod('Duration')" />
		<var name="section1subsection11add" pre="section1.AddItem(section1subsection11)" />
		<var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
		<var name="section1XBRLPeriodSet" pre="section1.SetPeriod('End')" />
		<var name="section1XBRLReverseSignSet" pre="section1.SetReverseSign(true)" />
		<var name="section1add" pre="smartTable.AddTableBlock(section1)" />
		<!-- Print the table -->
		<var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
		<var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
		<table base-style="Table Text">
			<column-details column-number="1" char-align=")" align="bottom-right" />
			<column-details column-number="2" char-align=")" align="bottom-right" />
			<column-details column-number="3" char-align=")" align="bottom-right" />
			<table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
				<section runtime-smart-tag="section.SmartTag">
					<table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
						<table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
							<!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
							<table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
								<table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
									<para runtime-font-color="cell.Color">
										<data condition="cell.HasStringContent">cell.ContentString</data>
										<data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
										<data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
									</para>
								</table-cell>
							</table-row>
							<!-- Cell which has a fixed width and has padding cells either side of the main cell -->
							<table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
								<table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
								<table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
									<para runtime-font-color="cell.Color">
										<data condition="cell.HasStringContent">cell.ContentString</data>
										<data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
										<data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
									</para>
								</table-cell>
								<table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
							</table-row>
							<!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
							<table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
								<table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
									<para runtime-font-color="cell.Color">
										<data condition="cell.HasStringContent">cell.ContentString</data>
										<data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
										<data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
									</para>
								</table-cell>
							</table-row>
							<!-- Cell which uses available free-space and has padding cells either side of the main cell -->
							<table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
								<table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
								<table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
									<para runtime-font-color="cell.Color">
										<data condition="cell.HasStringContent">cell.ContentString</data>
										<data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
										<data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
									</para>
								</table-cell>
								<table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
							</table-row>
						</table-column-iterator>
					</table-row-iterator>
				</section>
			</table-row-iterator>
		</table>
	</section>
</add-to-body>
</template>
							</report-template>
						</report-template>
						<report-template version="12" name="Amounts charged (credited) to operating profit" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRSSEPensionScheme2OperatingProfit" page-break-before="False" keep-with-next-strength="1" template-guid="e31814b3-2017-4efc-af12-1de26845eb5e">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
                    The amounts that have been charged/(credited) to <ws /><data>reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(1m,1m).ComparativesUnfiltered.AllCategoriesRoot,'OpProfit').Description.ToLower()</data><ws /> in the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> are:
                  </para>
</add-to-body></template>
							<report-template version="12" name="Amounts charged (credited) to operating profit" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRSSEPensionScheme2OperatingProfitValues" page-break-before="False" keep-with-next-strength="0" template-guid="75132d67-294a-4838-8447-6e47dc89fd8c">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme2,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('RecognisedInProfitLoss', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;quot;charge/(credit)&amp;quot;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; to &lt;ws/&gt;&lt;data&gt;reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(1m,1m).ComparativesUnfiltered.AllCategoriesRoot,&amp;apos;OpProfit&amp;apos;).Description.ToLower()&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:CurrentServiceCostDefinedBenefitScheme')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Past service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:PastServiceCostDefinedBenefitScheme')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Effect of FRS 17 paragraph 41&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:IncomeExpenseFromAmountsNotRecognisedAsAnAssetBecauseIAS58bLimit')" />
    <var name="section1subsection3XBRLReverseSignSet" pre="section1subsection3.SetReverseSign(true)" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Effects of curtailments and settlements&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[1]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:ExpenseIncomeFromDefinedBenefitSchemeSettlementsCurtailments')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:ChargeCreditToOperatingProfitFromDefinedBenefitScheme')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
						</report-template>
					</report-template>
					<report-template version="12" name="Pension scheme 3" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('907').HasTransactions and FRSSE = false" enabled="Conditional" section-name="FRS17PensionScheme3" page-break-before="False" keep-with-next-strength="0" template-guid="dce4225a-2767-4468-ab2c-5278826ab2e5">
						<template><add-to-body>
</add-to-body></template>
						<report-template version="12" name="Details of scheme" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme3Details" page-break-before="False" keep-with-next-strength="1" template-guid="14eb4a1f-2506-4fdd-aa45-11a9266f6ed2">
							<template><add-to-body>
  <para para-alignment="Full" font-style="+bold" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline xbrl-concept="uk-gaap:NameDefinedBenefitScheme" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3">
      <data base-style="Title">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|SchemeDetails|Name|Current Period")[0].Value</data>
    </inline>
  </para>
</add-to-body></template>
							<report-template version="12" name="Description of scheme" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme3Description" page-break-before="False" keep-with-next-strength="0" template-guid="b572cf1d-656c-4c29-9e53-5fabf4f0d11c">
								<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:DescriptionDefinedBenefitScheme" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|SchemeDetails|Description|Current Period")[0].Value</data>
  </para>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Contributions" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Conditional" section-name="FRS17PensionScheme3Contributions" page-break-before="False" keep-with-next-strength="0" template-guid="48a7383f-1c37-4f0e-8d3e-9f5ada3a4e5f">
								<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Contributions<inline condition="(reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|SchemeDetails|Contribution|Current Period&quot;)[0].Value &gt;=0 and&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|SchemeDetails|Contribution|Prior Period&quot;)[0].Value &gt;=0) )&#xD;&#xA;&#xD;&#xA;or&#xD;&#xA;&#xD;&#xA;(reportHelper.HasPriorPeriod=false and&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|SchemeDetails|Contribution|Current Period&quot;)[0].Value &gt;=0)"><ws /> payable</inline><inline condition="(reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|SchemeDetails|Contribution|Current Period&quot;)[0].Value &lt;0 and&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|SchemeDetails|Contribution|Prior Period&quot;)[0].Value &lt;0) )&#xD;&#xA;&#xD;&#xA;or&#xD;&#xA;(reportHelper.HasPriorPeriod=false and&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|SchemeDetails|Contribution|Current Period&quot;)[0].Value &lt;0)"><ws /> (prepaid)</inline><inline condition="reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|SchemeDetails|Contribution|Current Period&quot;)[0].Value &gt;=0 and&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|SchemeDetails|Contribution|Prior Period&quot;)[0].Value &lt;0)"><ws /> payable/(prepaid)</inline><inline condition="reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|SchemeDetails|Contribution|Current Period&quot;)[0].Value &lt;0 and&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|SchemeDetails|Contribution|Prior Period&quot;)[0].Value &gt;=0)"><ws /> (prepaid)/payable</inline><ws /> to the pension scheme at the end of the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> are <ws /><inline xbrl-concept="uk-gaap:OutstandingPre-paidContributionsToDefinedBenefitSchemeBalanceSheetDate" xbrl-period="EndCurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|SchemeDetails|Contribution|Current Period")[0].Value</data></inline><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.PriorPeriod.EndDate.Value.Year</data><ws /> - <ws /><inline xbrl-concept="uk-gaap:OutstandingPre-paidContributionsToDefinedBenefitSchemeBalanceSheetDate" xbrl-period="EndPriorPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|SchemeDetails|Contribution|Prior Period")[0].Value</data></inline>
)</inline>
.
<br /><br /><inline xbrl-concept="uk-gaap:StatementOnExpectedFutureContributionsToDefinedBenefitSchemeByEmployerDuringFollowingYear" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3">The total contributions in the next year are expected to be <ws /><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|SchemeDetails|DisclosedBy|Current Period&quot;)[0].Value = 'Amount'"><data>reporting.CurrentClient.CurrencySymbol</data></inline><data base-style="Number">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|SchemeDetails|FutureContribution|Current Period")[0].Value

</data><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|SchemeDetails|DisclosedBy|Current Period&quot;)[0].Value = '%'">% of pensionable earnings</inline>
.</inline></para>
</add-to-body></template>
							</report-template>
						</report-template>
						<report-template version="12" name="Scheme assets and liabilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme3AssetsAndLiabilities" page-break-before="False" keep-with-next-strength="0" template-guid="0d847afc-b761-4aa6-a5ef-2d44bda21471">
							<template><add-to-body>
</add-to-body></template>
							<report-template version="12" name="Reconciliation of scheme assets and liabilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme3Reconciliation" page-break-before="False" keep-with-next-strength="1" template-guid="b95b49d6-b5db-4be4-8d9f-52c309840e22">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Reconciliation of scheme assets and liabilities to assets and liabilities recognised</inline>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
The amounts recognised in the balance sheet are as follows:</para>
</add-to-body></template>
								<report-template version="12" name="Reconciliation of scheme assets and liabilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme3ReconciliationValues" page-break-before="False" keep-with-next-strength="0" template-guid="c30c2b5a-07f4-4346-91ed-a970d2bca05c">
									<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ActuarialFairValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Fair value of scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|FairValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:FairValueAssetsDefinedBenefitScheme')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ActuarialPresentValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Present value of scheme liabilities&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Reconciliation|Calculation|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:DefinedBenefitObligationPresentValue')" />
    <var name="section2subsection1XBRLReverseSignSet" pre="section2subsection1.SetReverseSign(true)" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('ActuarialValue', '&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section3item1" pre="section3.AddTotalItem(section1)" />
    <var name="section3item2" pre="section3.AddTotalItem(section2)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
    <var name="section3XBRLReverseSignSet" pre="section3.SetReverseSign(true)" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <var name="section4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ReconcilingItems', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section4subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Unrecognised past service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Reconciliation|Reconciliation|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection1subsectionitem1add" pre="section4subsection1.AddItem(section4subsection1subsectionitem1)" />
    <var name="section4subsection1XBRLConceptNameSet" pre="section4subsection1.SetConceptName('uk-gaap:PastServiceCostNotRecognisedInBalanceSheet')" />
    <var name="section4subsection1add" pre="section4.AddItem(section4subsection1)" />
    <var name="section4subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amounts not recognised as an asset under FRS 17 paragraph 41&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Reconciliation|Reconciliation|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection2subsectionitem1add" pre="section4subsection2.AddItem(section4subsection2subsectionitem1)" />
    <var name="section4subsection2XBRLConceptNameSet" pre="section4subsection2.SetConceptName('uk-gaap:AmountNotRecognisedAsAnAssetBecauseIAS58bLimit')" />
    <var name="section4subsection2XBRLReverseSignSet" pre="section4subsection2.SetReverseSign(true)" />
    <var name="section4subsection2add" pre="section4.AddItem(section4subsection2)" />
    <var name="section4subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other amounts recognised in the balance sheet&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Reconciliation|Reconciliation|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection3subsectionitem1add" pre="section4subsection3.AddItem(section4subsection3subsectionitem1)" />
    <var name="section4subsection3XBRLConceptNameSet" pre="section4subsection3.SetConceptName('uk-gaap:OtherAssetsLiabilitiesRelatedToDefinedBenefitSchemeRecognisedInBalanceSheet')" />
    <var name="section4subsection3add" pre="section4.AddItem(section4subsection3)" />
    <var name="section4subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other amounts not recognised in the balance sheet&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Reconciliation|Reconciliation|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem1add" pre="section4subsection4.AddItem(section4subsection4subsectionitem1)" />
    <var name="section4subsection4add" pre="section4.AddItem(section4subsection4)" />
    <var name="section4add" pre="smartTable.AddTableBlock(section4)" />
    <var name="section5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('SurplusDeficit', '&lt;para&gt;Defined benefit pension scheme &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;surplus/(deficit)&amp;quot;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section5item1" pre="section5.AddTotalItem(section3)" />
    <var name="section5item2" pre="section5.AddTotalItem(section4)" />
    <var name="section5XBRLConceptNameSet" pre="section5.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
    <var name="section5XBRLReverseSignSet" pre="section5.SetReverseSign(true)" />
    <var name="section5add" pre="smartTable.AddTableBlock(section5)" />
    <var name="section6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('RelatedDeferredTax', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Related deferred tax &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;asset/(liability)&amp;quot;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section6subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Deferred tax on pension asset/liability&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section6subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('905.80', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem1add" pre="section6subsection1.AddItem(section6subsection1subsectionitem1)" />
    <var name="section6subsection1add" pre="section6.AddItem(section6subsection1)" />
    <var name="section6XBRLConceptNameSet" pre="section6.SetConceptName('uk-gaap:DeferredTaxLiabilityAssetRelatedToDefinedBenefitScheme')" />
    <var name="section6XBRLReverseSignSet" pre="section6.SetReverseSign(true)" />
    <var name="section6add" pre="smartTable.AddTableBlock(section6)" />
    <var name="section7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('NetAssetLiability', '&lt;para&gt;Net &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;asset/(liability)&amp;quot;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; in the balance sheet&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section7item1" pre="section7.AddTotalItem(section5)" />
    <var name="section7item2" pre="section7.AddTotalItem(section6)" />
    <var name="section7XBRLConceptNameSet" pre="section7.SetConceptName('uk-gaap:RetirementBenefitObligationsSurplus')" />
    <var name="section7XBRLReverseSignSet" pre="section7.SetReverseSign(true)" />
    <var name="section7add" pre="smartTable.AddTableBlock(section7)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
								</report-template>
							</report-template>
							<report-template version="12" name="Assets" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme3Assets" page-break-before="False" keep-with-next-strength="0" template-guid="58c70426-d9ef-4355-8c2a-564b3d61a862">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Scheme assets</inline>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Changes in the fair value of scheme assets are as follows:</para>
</add-to-body></template>
								<report-template version="12" name="Changes in fair value" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme3ChangesInFairValue" page-break-before="False" keep-with-next-strength="0" template-guid="bace512b-27b8-4745-9aed-994df5170b6a">
									<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('Current')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('Prior')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('AssetMovement', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Fair value at end of &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Fair value at start of &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|Movement|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:FairValueAssetsDefinedBenefitScheme')" />
    <var name="section1subsection1XBRLPeriodSet" pre="section1subsection1.SetPeriod('Start')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expected return on assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|Movement|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:ExpenseIncomeFromExpectedReturnOnAssetsDefinedBenefitScheme')" />
    <var name="section1subsection2XBRLPeriodSet" pre="section1subsection2.SetPeriod('Duration')" />
    <var name="section1subsection2XBRLReverseSignSet" pre="section1subsection2.SetReverseSign(true)" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Actuarial gains and losses&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|Movement|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:ActuarialGainLossOnAssetsDefinedBenefitScheme')" />
    <var name="section1subsection3XBRLPeriodSet" pre="section1subsection3.SetPeriod('Duration')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Foreign exchange differences&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|Movement|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:IncreaseDecreaseInAssetsDefinedBenefitSchemeFromForeignExchangeDifferences')" />
    <var name="section1subsection4XBRLPeriodSet" pre="section1subsection4.SetPeriod('Duration')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Employer contributions&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|Movement|Rows|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:ContributionsToDefinedBenefitSchemeByEmployer')" />
    <var name="section1subsection5XBRLPeriodSet" pre="section1subsection5.SetPeriod('Duration')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Contributions by scheme participants&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|Movement|Rows|*:item[5]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:ContributionsByDefinedBenefitSchemeParticipants')" />
    <var name="section1subsection6XBRLPeriodSet" pre="section1subsection6.SetPeriod('Duration')" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Benefits paid&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|Movement|Rows|*:item[6]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:BenefitsPaidRelatedToDefinedBenefitScheme')" />
    <var name="section1subsection7XBRLPeriodSet" pre="section1subsection7.SetPeriod('Duration')" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Assets acquired in business combinations&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|Movement|Rows|*:item[7]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
    <var name="section1subsection8XBRLConceptNameSet" pre="section1subsection8.SetConceptName('uk-gaap:IncreaseDecreaseInAssetsDefinedBenefitSchemeFromBusinessCombinationsDisposals')" />
    <var name="section1subsection8XBRLPeriodSet" pre="section1subsection8.SetPeriod('Duration')" />
    <var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
    <var name="section1subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Assets distributed on settlements&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|Movement|Rows|*:item[8]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection9subsectionitem1add" pre="section1subsection9.AddItem(section1subsection9subsectionitem1)" />
    <var name="section1subsection9XBRLConceptNameSet" pre="section1subsection9.SetConceptName('uk-gaap:IncreaseDecreaseInAssetsDefinedBenefitSchemeFromSettlements')" />
    <var name="section1subsection9XBRLPeriodSet" pre="section1subsection9.SetPeriod('Duration')" />
    <var name="section1subsection9add" pre="section1.AddItem(section1subsection9)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:FairValueAssetsDefinedBenefitScheme')" />
    <var name="section1XBRLPeriodSet" pre="section1.SetPeriod('End')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
								</report-template>
								<report-template version="12" name="Asset categories" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme3AssetAnalysis" page-break-before="False" keep-with-next-strength="1" template-guid="1aceae48-a3d7-4183-8c9f-a81c97399290">
									<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Analysis of assets</inline>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The major categories of scheme assets<inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|DisclosedBy|Current Period&quot;)[0].Value = '%'"><ws /> as a percentage of total scheme assets</inline><ws /> are as follows:</para>
</add-to-body></template>
									<report-template version="12" name="Asset categories expressed as an amount" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[0]|Assets|DisclosedBy|Current Period&quot;)[0].Value = 'Amount'" enabled="Conditional" section-name="FRS17PensionScheme3AssetCategories£" page-break-before="False" keep-with-next-strength="0" template-guid="93c62f8f-8235-42ca-81b8-2b6ac10fdf73">
										<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('AssetFairValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Equity instruments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|Category|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:EquitiesHeldInPensionSchemeFairValue')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Debt instruments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|Category|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:DebtInstrumentsBondsHeldInPensionSchemeFairValue')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Property&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|Category|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:PropertyHeldInPensionSchemeFairValue')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cash&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|Category|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:CashHeldInPensionSchemeFairValue')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|Category|Rows|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:OtherAssetsHeldInPensionSchemeFairValue')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:FairValueAssetsDefinedBenefitScheme')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
									</report-template>
									<report-template version="12" name="Asset categories expressed as a %" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[0]|Assets|DisclosedBy|Current Period&quot;)[0].Value = '%'" enabled="Conditional" section-name="FRS17PensionScheme3AssetCategories%" page-break-before="False" keep-with-next-strength="0" template-guid="27367b1d-c048-4128-b7e3-b7f6439c7627">
										<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Table Text Percentage')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Table Text Percentage')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Table Text Percentage')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Table Text Percentage Final Value')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;%&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;%&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('AssetFairValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Equity instruments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|Category|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:EquitiesHeldInPensionSchemePercentage')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Debt instruments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|Category|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:DebtInstrumentsBondsHeldInPensionSchemePercentage')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Property&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|Category|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:PropertyHeldInPensionSchemePercentage')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cash&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|Category|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:CashHeldInPensionSchemePercentage')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|Category|Rows|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:OtherAssetsHeldInPensionSchemePercentage')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
									</report-template>
								</report-template>
								<report-template version="12" name="Actual return on scheme assets" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Conditional" section-name="FRS17PensionScheme3ActualReturnOnSchemeAssets" page-break-before="False" keep-with-next-strength="0" template-guid="e5031035-884d-4eb2-bf23-2edfb9a85c51">
									<template><add-to-body>
  <para base-style="Title" font-style="+italic" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          Actual return on scheme's assets
        </para>
</add-to-body></template>
									<report-template version="12" name="Actual return on scheme assets" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme3AssetActualReturn" page-break-before="False" keep-with-next-strength="1" template-guid="ec97e0ea-960c-4bdd-aead-85929760c205">
										<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ActualReturn', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Actual return on scheme assets&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|ActualReturn', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:ActualReturnOnAssetsBenefitSchemeScheme')" />
    <var name="section1XBRLDimensionsSet" pre="section1.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="section1XBRLHypercubeNameSet" pre="section1.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
									</report-template>
								</report-template>
								<report-template version="12" name="No financial instruments or property occupied" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|OwnFinancialInstruments|Rows|*&quot;,null, true).Count = 0) and (reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|UsedByEntity|Rows|*&quot;,null, true).Count = 0)" enabled="Conditional" section-name="FRS17PensionScheme3NoFinancialInstrumentsOrPropertyOccupied" page-break-before="False" keep-with-next-strength="0" template-guid="fe07083c-c34c-490f-97d6-1268fb7ecbd2">
									<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The pension scheme has not invested<inline condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|OwnFinancialInstruments|Rows|*&quot;,null, true).Count = 0)"><ws /> in any of the company's own financial instruments</inline><inline condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|OwnFinancialInstruments|Rows|*&quot;,null, true).Count = 0) and (reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|UsedByEntity|Rows|*&quot;,null, true).Count = 0)"><ws /> or</inline><inline condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|UsedByEntity|Rows|*&quot;,null, true).Count = 0)"><ws /> in properties or other assets used by the company</inline>
.</para>
</add-to-body></template>
								</report-template>
								<report-template version="12" name="Own financial instruments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|OwnFinancialInstruments|Rows|*&quot;,null, true).Count &gt; 0" enabled="Conditional" section-name="FRS17PensionScheme3AssetOwnFinancialInstruments" page-break-before="False" keep-with-next-strength="1" template-guid="b4b2c14c-a468-480c-83da-990412588d19">
									<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The entity's own financial instruments included in the fair value of scheme assets are as follows:</para>
</add-to-body></template>
									<report-template version="12" name="Own financial instruments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme3AssetOwnFinancialInstrumentsValues" page-break-before="False" keep-with-next-strength="0" template-guid="6e997a21-8d04-4f48-94a3-541d87776f90">
										<template><add-to-body>
  <table condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|OwnFinancialInstruments|Rows|*')[0].HasValue">
    <column-details column-number="1" free-space="100" align="bottom-left" />
    <column-details column-number="2" width="2mm" align="bottom-right" />
    <column-details column-number="3" width="22mm" align="bottom-right" />
    <column-details column-number="4" width="2mm" align="bottom-right" />
    <column-details column-number="5" width="2mm" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
    <column-details column-number="6" width="22mm" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
    <column-details column-number="7" width="2mm" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
    <table-row base-style="Table Column Heading">
      <table-cell>
      </table-cell>
      <table-cell>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data para-alignment="Centre">if reportHelper.IsAnnual then reportHelper.CurrentPeriod.EndDate.Value.ToString('yyyy')

else

reportHelper.CurrentPeriod.EndDate.Value.ToString('d MMMM yyyy')</data>
          <inline para-alignment="Centre">
          </inline>
          <br />
          <data para-alignment="Centre">
					reportHelper.StatutoryNoteScalingHeader
				</data>
          <inline para-alignment="Centre">
          </inline>
        </para>
      </table-cell>
      <table-cell>
      </table-cell>
      <table-cell>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data para-alignment="Centre">if reportHelper.IsAnnual then reportHelper.ComparativePeriod(1).EndDate.Value.ToString('yyyy')

else

reportHelper.ComparativePeriod(1).EndDate.Value.ToString('d MMMM yyyy')</data>
          <inline para-alignment="Centre">
          </inline>
          <br />
          <data para-alignment="Centre">
					reportHelper.StatutoryNoteScalingHeader
				</data>
          <inline para-alignment="Centre">
          </inline>
        </para>
      </table-cell>
    </table-row>
    <table-row-iterator iterate-over="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|OwnFinancialInstruments|Rows|*')" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
      <table-row xbrl-concept="uk-gaap:EntityFinancialInstrumentIncludedInPensionSchemeGrouping" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3">
        <table-cell>
          <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <inline xbrl-concept="uk-gaap:DescriptionEntityFinancialInstrumentIncludedInPensionScheme" xbrl-period="CurrentPeriod">
              <data>reporting.queries.client.lookupaccountingperioddata(item, '*|*|Current Period')[0].Value</data>
            </inline>
          </para>
        </table-cell>
        <table-cell />
        <table-cell>
          <para para-alignment="Left" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <inline xbrl-concept="uk-gaap:FairValueEntityFinancialInstrumentIncludedInPensionScheme" xbrl-period="CurrentPeriod">
              <data base-style="Table Text">reporting.queries.client.lookupaccountingperioddata(item, '*|*|Current Period')[1].Value / reportHelper.StatutoryNoteScaling</data>
            </inline>
          </para>
        </table-cell>
        <table-cell />
        <table-cell />
        <table-cell>
          <para para-alignment="Right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <data base-style="Table Text">reporting.queries.client.lookupaccountingperioddata(item, '*|*|Prior Period')[0].Value / reportHelper.StatutoryNoteScaling</data>
          </para>
        </table-cell>
        <table-cell />
      </table-row>
    </table-row-iterator>
    <table-row>
      <table-cell />
      <table-cell />
      <table-cell bottom-border-style="Doubleline" bottom-border-size="2pt">
      </table-cell>
      <table-cell />
      <table-cell />
      <table-cell bottom-border-style="Doubleline" bottom-border-size="2pt">
      </table-cell>
      <table-cell />
    </table-row>
  </table>
</add-to-body></template>
									</report-template>
								</report-template>
								<report-template version="12" name="Property occupied" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|UsedByEntity|Rows|*&quot;,null, true).Count &gt; 0" enabled="Conditional" section-name="FRS17PensionScheme3AssetPropertyOccupied" page-break-before="False" keep-with-next-strength="1" template-guid="f87087aa-98db-4876-9798-6b61bcb549b0">
									<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The property occupied by, or other asset used by, the entity included in the fair value of scheme assets are as follows:</para>
</add-to-body></template>
									<report-template version="12" name="Property occupied" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme3AssetPropertyOccupiedValues" page-break-before="False" keep-with-next-strength="0" template-guid="161077d7-b20f-4c93-9b0c-1b3379099706">
										<template><add-to-body>
  <table condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|UsedByEntity|Rows|*')[0].HasValue">
    <column-details column-number="1" free-space="100" align="bottom-left" />
    <column-details column-number="2" width="2mm" align="bottom-right" />
    <column-details column-number="3" width="22mm" align="bottom-right" />
    <column-details column-number="4" width="2mm" align="bottom-right" />
    <column-details column-number="5" width="2mm" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
    <column-details column-number="6" width="22mm" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
    <column-details column-number="7" width="2mm" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
    <table-row base-style="Table Column Heading">
      <table-cell>
      </table-cell>
      <table-cell>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data para-alignment="Centre">if reportHelper.IsAnnual then reportHelper.CurrentPeriod.EndDate.Value.ToString('yyyy')

else

reportHelper.CurrentPeriod.EndDate.Value.ToString('d MMMM yyyy')</data>
          <inline para-alignment="Centre">
          </inline>
          <br />
          <data para-alignment="Centre">
					reportHelper.StatutoryNoteScalingHeader
				</data>
          <inline para-alignment="Centre">
          </inline>
        </para>
      </table-cell>
      <table-cell>
      </table-cell>
      <table-cell>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data para-alignment="Centre">if reportHelper.IsAnnual then reportHelper.ComparativePeriod(1).EndDate.Value.ToString('yyyy')

else

reportHelper.ComparativePeriod(1).EndDate.Value.ToString('d MMMM yyyy')</data>
          <inline para-alignment="Centre">
          </inline>
          <br />
          <data para-alignment="Centre">
					reportHelper.StatutoryNoteScalingHeader
				</data>
          <inline para-alignment="Centre">
          </inline>
        </para>
      </table-cell>
    </table-row>
    <table-row-iterator iterate-over="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|UsedByEntity|Rows|*')" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
      <table-row xbrl-concept="uk-gaap:PropertyInPensionSchemeOccupiedByEntityOrOtherAssetsInSchemeUsedByEntityGrouping" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3">
        <table-cell>
          <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <inline xbrl-concept="uk-gaap:DescriptionPropertyOrOtherAssetIncludedInPensionSchemeWhichUsedByEntity" xbrl-period="CurrentPeriod">
              <data>reporting.queries.client.lookupaccountingperioddata(item, '*|*|Current Period')[0].Value</data>
            </inline>
          </para>
        </table-cell>
        <table-cell />
        <table-cell>
          <para para-alignment="Right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <inline para-alignment="Left" xbrl-concept="uk-gaap:FairValuePropertyOrOtherAssetIncludedInPensionSchemeUsedByEntity" xbrl-period="CurrentPeriod">
              <data base-style="Table Text">reporting.queries.client.lookupaccountingperioddata(item, '*|*|Current Period')[1].Value / reportHelper.StatutoryNoteScaling</data>
              <inline para-alignment="Left">
              </inline>
            </inline>
          </para>
        </table-cell>
        <table-cell />
        <table-cell />
        <table-cell>
          <para para-alignment="Right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <data base-style="Table Text">reporting.queries.client.lookupaccountingperioddata(item, '*|*|Prior Period')[0].Value / reportHelper.StatutoryNoteScaling</data>
          </para>
        </table-cell>
        <table-cell />
      </table-row>
    </table-row-iterator>
    <table-row>
      <table-cell />
      <table-cell />
      <table-cell bottom-border-style="Doubleline" bottom-border-size="2pt">
      </table-cell>
      <table-cell />
      <table-cell />
      <table-cell bottom-border-style="Doubleline" bottom-border-size="2pt">
      </table-cell>
      <table-cell />
    </table-row>
  </table>
</add-to-body></template>
									</report-template>
								</report-template>
								<report-template version="12" name="Basis" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme3AssetBasis" page-break-before="False" keep-with-next-strength="0" template-guid="d0b62852-1ea4-41b4-83d0-5af3464969c3">
									<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|Basis|Current Period")[0].Value</data>
  </para>
</add-to-body></template>
								</report-template>
							</report-template>
							<report-template version="12" name="Liabilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme3Liabilities" page-break-before="False" keep-with-next-strength="1" template-guid="90c494ba-13a6-4fc0-bd96-878f15b5b7f8">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Scheme liabilities</inline>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Changes in the present value of scheme liabilities are as follows:</para>
</add-to-body></template>
								<report-template version="12" name="Changes in present value" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme3ChangesInPresentValue" page-break-before="False" keep-with-next-strength="0" template-guid="1c1426c0-d668-4f9e-a812-99afc9a3101b">
									<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('Current')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('Prior')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('LiabilityMovement', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Present value at end of &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Present value at start of &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Liabilities|Movement|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:DefinedBenefitObligationPresentValue')" />
    <var name="section1subsection1XBRLDimensionsSet" pre="section1subsection1.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="section1subsection1XBRLHypercubeNameSet" pre="section1subsection1.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection1XBRLPeriodSet" pre="section1subsection1.SetPeriod('Start')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Liabilities|Movement|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:CurrentServiceCostDefinedBenefitScheme')" />
    <var name="section1subsection2XBRLDimensionsSet" pre="section1subsection2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="section1subsection2XBRLHypercubeNameSet" pre="section1subsection2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection2XBRLPeriodSet" pre="section1subsection2.SetPeriod('Duration')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Past service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Liabilities|Movement|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:PastServiceCostDefinedBenefitScheme')" />
    <var name="section1subsection3XBRLDimensionsSet" pre="section1subsection3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="section1subsection3XBRLHypercubeNameSet" pre="section1subsection3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection3XBRLPeriodSet" pre="section1subsection3.SetPeriod('Duration')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Actuarial gains and losses&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Liabilities|Movement|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:ActuarialGainLossOnLiabilitiesDefinedBenefitScheme')" />
    <var name="section1subsection4XBRLPeriodSet" pre="section1subsection4.SetPeriod('Duration')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Foreign exchange differences&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Liabilities|Movement|Rows|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:IncreaseDecreaseInLiabilitiesDefinedBenefitSchemeFromForeignExchangeDifferences')" />
    <var name="section1subsection5XBRLDimensionsSet" pre="section1subsection5.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="section1subsection5XBRLHypercubeNameSet" pre="section1subsection5.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection5XBRLPeriodSet" pre="section1subsection5.SetPeriod('Duration')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Interest cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Liabilities|Movement|Rows|*:item[5]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:ExpenseIncomeFromInterestCostDefinedBenefitScheme')" />
    <var name="section1subsection6XBRLDimensionsSet" pre="section1subsection6.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="section1subsection6XBRLHypercubeNameSet" pre="section1subsection6.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection6XBRLPeriodSet" pre="section1subsection6.SetPeriod('Duration')" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Benefits paid&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Liabilities|Movement|Rows|*:item[6]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:BenefitsPaidRelatedToDefinedBenefitScheme')" />
    <var name="section1subsection7XBRLDimensionsSet" pre="section1subsection7.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="section1subsection7XBRLHypercubeNameSet" pre="section1subsection7.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection7XBRLPeriodSet" pre="section1subsection7.SetPeriod('Duration')" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Contributions by scheme participants&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Liabilities|Movement|Rows|*:item[7]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
    <var name="section1subsection8XBRLConceptNameSet" pre="section1subsection8.SetConceptName('uk-gaap:ContributionsByDefinedBenefitSchemeParticipants')" />
    <var name="section1subsection8XBRLDimensionsSet" pre="section1subsection8.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="section1subsection8XBRLHypercubeNameSet" pre="section1subsection8.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection8XBRLPeriodSet" pre="section1subsection8.SetPeriod('Duration')" />
    <var name="section1subsection8XBRLReverseSignSet" pre="section1subsection8.SetReverseSign(true)" />
    <var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
    <var name="section1subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Liabilities assumed in business combinations&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Liabilities|Movement|Rows|*:item[8]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection9subsectionitem1add" pre="section1subsection9.AddItem(section1subsection9subsectionitem1)" />
    <var name="section1subsection9XBRLConceptNameSet" pre="section1subsection9.SetConceptName('uk-gaap:IncreaseDecreaseInLiabilitiesDefinedBenefitSchemeFromBusinessCombinations')" />
    <var name="section1subsection9XBRLDimensionsSet" pre="section1subsection9.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="section1subsection9XBRLHypercubeNameSet" pre="section1subsection9.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection9XBRLPeriodSet" pre="section1subsection9.SetPeriod('Duration')" />
    <var name="section1subsection9add" pre="section1.AddItem(section1subsection9)" />
    <var name="section1subsection10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Liabilities extinguished on settlements&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection10subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Liabilities|Movement|Rows|*:item[9]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection10subsectionitem1add" pre="section1subsection10.AddItem(section1subsection10subsectionitem1)" />
    <var name="section1subsection10XBRLConceptNameSet" pre="section1subsection10.SetConceptName('uk-gaap:IncreaseDecreaseInLiabilitiesDefinedBenefitSchemeFromSettlements')" />
    <var name="section1subsection10XBRLDimensionsSet" pre="section1subsection10.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="section1subsection10XBRLHypercubeNameSet" pre="section1subsection10.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection10XBRLPeriodSet" pre="section1subsection10.SetPeriod('Duration')" />
    <var name="section1subsection10add" pre="section1.AddItem(section1subsection10)" />
    <var name="section1subsection11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Effect of curtailments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection11subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Liabilities|Movement|Rows|*:item[10]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection11subsectionitem1add" pre="section1subsection11.AddItem(section1subsection11subsectionitem1)" />
    <var name="section1subsection11XBRLConceptNameSet" pre="section1subsection11.SetConceptName('uk-gaap:IncreaseDecreaseInLiabilitiesDefinedBenefitSchemeFromCurtailments')" />
    <var name="section1subsection11XBRLDimensionsSet" pre="section1subsection11.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="section1subsection11XBRLHypercubeNameSet" pre="section1subsection11.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection11XBRLPeriodSet" pre="section1subsection11.SetPeriod('Duration')" />
    <var name="section1subsection11add" pre="section1.AddItem(section1subsection11)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:DefinedBenefitObligationPresentValue')" />
    <var name="section1XBRLDimensionsSet" pre="section1.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="section1XBRLHypercubeNameSet" pre="section1.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1XBRLPeriodSet" pre="section1.SetPeriod('End')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('UnfundedFundedLiabilities', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Analysed as:&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Present value arising from unfunded schemes&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Liabilities|UnfundedPresentValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:DefinedBenefitObligationFromSchemesThatAreWhollyUnfundedPresentValue')" />
    <var name="section2subsection1XBRLDimensionsSet" pre="section2subsection1.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="section2subsection1XBRLHypercubeNameSet" pre="section2subsection1.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section2subsection1XBRLPeriodSet" pre="section2subsection1.SetPeriod('End')" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Present value arising from wholly or partly funded schemes&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Liabilities|FundedPresentValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2XBRLConceptNameSet" pre="section2subsection2.SetConceptName('uk-gaap:DefinedBenefitObligationFromSchemesThatAreWhollyOrPartlyFundedPresentValue')" />
    <var name="section2subsection2XBRLDimensionsSet" pre="section2subsection2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="section2subsection2XBRLHypercubeNameSet" pre="section2subsection2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section2subsection2XBRLPeriodSet" pre="section2subsection2.SetPeriod('End')" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2XBRLConceptNameSet" pre="section2.SetConceptName('uk-gaap:DefinedBenefitObligationPresentValue')" />
    <var name="section2XBRLPeriodSet" pre="section2.SetPeriod('End')" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
								</report-template>
							</report-template>
						</report-template>
						<report-template version="12" name="Principal actuarial assumptions" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme3Assumptions" page-break-before="False" keep-with-next-strength="1" template-guid="57ee40f8-85c8-483c-a132-a48615601c5a">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Principal actuarial assumpions</inline>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The principal actuarial assumpions at the balance sheet date are as follows:</para>
</add-to-body></template>
							<report-template version="12" name="Principal actuarial assumptions" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme3AssumptionsValues" page-break-before="False" keep-with-next-strength="0" template-guid="d3094d76-de29-4dad-ac36-43b7f08d8fe8">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Table Text Percentage')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Table Text Percentage')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Table Text Percentage')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Table Text Percentage Final Value')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;%&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;%&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ActuarialAssumptions', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Discount rate&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assumptions|ActuarialAssumptions|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:RateUsedToDiscountSchemeLiabilities')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Future salary increases&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assumptions|ActuarialAssumptions|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:AssumedRateIncreasePensionableSalaries')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Future pension increases&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[2]|Assumptions|ActuarialAssumptions|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:AssumedRateIncreasePensionsInPaymentDeferredPensions')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Inflation&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assumptions|ActuarialAssumptions|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:AssumedRateInflation')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Proportion of employees opting for early retirement&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assumptions|ActuarialAssumptions|Rows|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:AssumedProportionEmployeesOptingForEarlyRetirement')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expected return on scheme assets - equity&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assumptions|ActuarialAssumptions|Rows|*:item[5]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:EquitiesHeldInPensionSchemeExpectedRateReturn')" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expected return on scheme assets - cash&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assumptions|ActuarialAssumptions|Rows|*:item[6]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:CashHeldInPensionSchemeExpectedRateReturn')" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expected return on scheme assets - property&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assumptions|ActuarialAssumptions|Rows|*:item[7]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
    <var name="section1subsection8XBRLConceptNameSet" pre="section1subsection8.SetConceptName('uk-gaap:PropertyHeldInPensionSchemeExpectedRateReturn')" />
    <var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
    <var name="section1subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expected return on scheme assets - other&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assumptions|ActuarialAssumptions|Rows|*:item[8]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection9subsectionitem1add" pre="section1subsection9.AddItem(section1subsection9subsectionitem1)" />
    <var name="section1subsection9XBRLConceptNameSet" pre="section1subsection9.SetConceptName('uk-gaap:ExpectedRateReturnOnTypeOtherAssetHeldInPensionScheme')" />
    <var name="section1subsection9add" pre="section1.AddItem(section1subsection9)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Mortality" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme3Mortality" page-break-before="False" keep-with-next-strength="0" template-guid="f734fb94-c86e-4d2c-a43c-5518c91cb3ce">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Post retirement mortality assumptions</inline>
  </para>
</add-to-body></template>
								<report-template version="12" name="Mortality" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme3MortalityValues" page-break-before="False" keep-with-next-strength="0" template-guid="f7aa6b80-02bd-4ee0-8796-fba954c6b85b">
									<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'MyFirstTable', 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Table Text Percentage')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Table Text Percentage')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Table Text Percentage')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Table Text Percentage Final Value')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;Years&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;Years&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Mortality', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current pensioners at retirement age - male&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assumptions|MortalityRates|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:LongevityInYearsRetirementForCurrentUKPensionersMen')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current pensioners at retirement age - female&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assumptions|MortalityRates|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:LongevityInYearsRetirementForCurrentUKPensionersWomen')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Future pensioners at retirement age - male&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assumptions|MortalityRates|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:LongevityInYearsRetirementForFutureUKPensionersMen')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Future pensioners at retirement age - female&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assumptions|MortalityRates|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:LongevityInYearsRetirementForFutureUKPensionersWomen')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
								</report-template>
							</report-template>
						</report-template>
						<report-template version="12" name="Amounts recognised in profit and loss" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme3ProfitAndLoss" page-break-before="False" keep-with-next-strength="1" template-guid="ad8cbb21-2efa-4d6b-94b1-48fc9da94724">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Amounts recognised in the profit and loss account</inline>
  </para>
</add-to-body></template>
							<report-template version="12" name="Amounts recognised in operating profit" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme3OperatingProfitValues" page-break-before="False" keep-with-next-strength="0" template-guid="c66b3727-76b8-4460-bb11-ae911494d2e5">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('RecognisedInOperatingProfitLoss', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Amounts recognised in &lt;ws/&gt;&lt;data&gt;reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(1m,1m).ComparativesUnfiltered.AllCategoriesRoot,&amp;apos;OpProfit&amp;apos;).Description.ToLower()&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Recognised in arriving at operating &lt;ws/&gt;&lt;data&gt;reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(1m,1m).ComparativesUnfiltered.AllCategoriesRoot,&amp;apos;OpProfit&amp;apos;).Description.ToLower()&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:CurrentServiceCostDefinedBenefitScheme')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Past service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:PastServiceCostDefinedBenefitScheme')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Effect of FRS 17 paragraph 41&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:IncomeExpenseFromAmountsNotRecognisedAsAnAssetBecauseIAS58bLimit')" />
    <var name="section1subsection3XBRLDimensionsSet" pre="section1subsection3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="section1subsection3XBRLHypercubeNameSet" pre="section1subsection3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection3XBRLReverseSignSet" pre="section1subsection3.SetReverseSign(true)" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Losses (gains) on curtailments and settlements&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:ExpenseIncomeFromDefinedBenefitSchemeSettlementsCurtailments')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:ChargeCreditToOperatingProfitFromDefinedBenefitScheme')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('RecognisedInFinance', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Amounts recognised in other finance &lt;ws/&gt;&lt;inline condition=&quot;(reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[0].Value &amp;lt; 0&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[1].Value &amp;lt; 0)&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;(reportHelper.HasPriorPeriod=false and&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[0].Value &amp;lt; 0)&#xD;&#xA;&quot;&gt;income&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;(reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[0].Value &amp;gt;= 0&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[1].Value &amp;gt;= 0)&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;(reportHelper.HasPriorPeriod=false and&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[0].Value &amp;gt;= 0)&#xD;&#xA;&quot;&gt;&lt;ws/&gt; cost&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[0].Value &amp;lt; 0&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[1].Value &amp;gt;= 0&#xD;&#xA;&quot;&gt;&lt;ws/&gt; (income)/cost&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[0].Value &amp;gt;= 0&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[1].Value &amp;lt; 0&#xD;&#xA;&quot;&gt;&lt;ws/&gt; cost/(income)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Recognised in other finance cost&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Interest&lt;inline condition=&quot;(reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Current Period&amp;quot;)[0].Value &amp;lt;0 and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Prior Period&amp;quot;)[0].Value &amp;lt;0)&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;(reportHelper.HasPriorPeriod=false and&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Current Period&amp;quot;)[0].Value &amp;lt; 0)&#xD;&#xA;&#xD;&#xA;&quot;&gt;&lt;ws/&gt; income&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;(reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Current Period&amp;quot;)[0].Value &amp;gt;=0 and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Prior Period&amp;quot;)[0].Value &amp;gt;=0)&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;(reportHelper.HasPriorPeriod=false and&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Current Period&amp;quot;)[0].Value &amp;gt;= 0)&#xD;&#xA;&#xD;&#xA;&quot;&gt;&lt;ws/&gt; cost&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Current Period&amp;quot;)[0].Value &amp;lt;0 and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Prior Period&amp;quot;)[0].Value &amp;gt;=0&#xD;&#xA;&#xD;&#xA;&quot;&gt;&lt;ws/&gt; (income)/cost&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Current Period&amp;quot;)[0].Value &amp;gt;=0 and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Prior Period&amp;quot;)[0].Value &amp;lt;0&#xD;&#xA;&quot;&gt;&lt;ws/&gt; cost/(income)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:ExpenseIncomeFromInterestCostDefinedBenefitScheme')" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expected return on scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2XBRLConceptNameSet" pre="section2subsection2.SetConceptName('uk-gaap:ExpenseIncomeFromExpectedReturnOnAssetsDefinedBenefitScheme')" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2XBRLConceptNameSet" pre="section2.SetConceptName('uk-gaap:ChargeCreditToFinanceChargesFromDefinedBenefitScheme')" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('RecognisedInProfitAndLoss', '&lt;para&gt;Total recognised in the profit and loss account&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.Always, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section3item1" pre="section3.AddTotalItem(section1)" />
    <var name="section3item2" pre="section3.AddTotalItem(section2)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:PensionCostsDefinedBenefitScheme')" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
						</report-template>
						<report-template version="12" name="Amounts recognised in the STRGL" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme3STRGL" page-break-before="False" keep-with-next-strength="1" template-guid="b468bc1d-ceca-4130-a506-b1c37b220657">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Amounts recognised in the statement of total recognised gains and losses</inline>
  </para>
</add-to-body></template>
							<report-template version="12" name="Amounts recognised in the STRGL" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme3STRGLValues" page-break-before="False" keep-with-next-strength="0" template-guid="47c68cd6-a2cd-4b6a-95d1-751140088fa9">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Section1', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Actuarial gains and losses recognised in the Statement of Total Recognised Gains and Losses&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Actual return less expected return on scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|STRGL|STRGLAmounts|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:ExperienceGainLossArisingOnAssetsDefinedBenefitScheme')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Effect of FRS 17 paragraph 41&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|STRGL|STRGLAmounts|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:GainLossFromImpactFRS17.41LimitRecognisedInStatementTotalRecognisedGainsLosses')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Changes in assumptions&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|STRGL|STRGLAmounts|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:GainLossFromChangesInAssumptionsUnderlyingPresentValueDefinedBenefitSchemeLiabilities')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other actuarial gains (losses)&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|STRGL|STRGLAmounts|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:ActuarialGainLossOnDefinedBenefitSchemeRecognisedInStatementTotalRecognisedGainsLosses')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Cumulative amount of actuarial gains and losses" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme3STRGLSumulativeAmount" page-break-before="False" keep-with-next-strength="0" template-guid="4bc6a72c-447a-478b-8c9b-e2517f112313">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The cumulative amount of actuarial gains and losses recognised in the statement of total recognised gains and (losses) since 1 January 2002 is <ws /><inline xbrl-concept="uk-gaap:CumulativeActuarialGainLossOnDefinedBenefitSchemeRecognisedInStatementTotalRecognisedGainsLosses" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|STRGL|STRGL|Current Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|STRGL|STRGLAmounts|Columns|Amount|*:item[0]|Current Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|STRGL|STRGLAmounts|Columns|Amount|*:item[1]|Current Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|STRGL|STRGLAmounts|Columns|Amount|*:item[2]|Current Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|STRGL|STRGLAmounts|Columns|Amount|*:item[3]|Current Period")[0].Value+

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|STRGL|STRGLAmounts|Columns|Amount|*:item[0]|Prior Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|STRGL|STRGLAmounts|Columns|Amount|*:item[1]|Prior Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|STRGL|STRGLAmounts|Columns|Amount|*:item[2]|Prior Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|STRGL|STRGLAmounts|Columns|Amount|*:item[3]|Prior Period")[0].Value</data></inline><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.PriorPeriod.EndDate.Value.Year</data><ws /> - <ws /><inline xbrl-concept="uk-gaap:CumulativeActuarialGainLossOnDefinedBenefitSchemeRecognisedInStatementTotalRecognisedGainsLosses" xbrl-period="PriorPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|STRGL|STRGL|Current Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|STRGL|STRGLAmounts|Columns|Amount|*:item[0]|Prior Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|STRGL|STRGLAmounts|Columns|Amount|*:item[1]|Prior Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|STRGL|STRGLAmounts|Columns|Amount|*:item[2]|Prior Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|STRGL|STRGLAmounts|Columns|Amount|*:item[3]|Prior Period")[0].Value</data></inline>
)</inline>
.</para>
</add-to-body></template>
							</report-template>
						</report-template>
						<report-template version="12" name="History of experience adjustments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme3History" page-break-before="False" keep-with-next-strength="1" template-guid="137e5523-c150-4b47-a7b8-8196d9c370be">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">History of experience adjustments on scheme assets and liabilities</inline>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Amounts for the current<inline condition="((reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|FairValue|Columns|Amount|*:item[0]|*:filter[&gt;0]&quot; ,null, true).Count)-1)&lt;1"><ws /> period</inline><inline condition="((reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|FairValue|Columns|Amount|*:item[0]|*:filter[&gt;0]&quot; ,null, true).Count)-1)=1"><ws /> and previous period</inline><inline condition="((reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|FairValue|Columns|Amount|*:item[0]|*:filter[&gt;0]&quot; ,null, true).Count)-1)&gt;1"><ws /> and previous <ws /><data>(reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|FairValue|Columns|Amount|*:item[0]|*:filter[&gt;0]" ,null, true).Count)-1</data><ws /> periods</inline><ws /> are as follows:</para>
</add-to-body></template>
							<report-template version="12" name="History of experience adjustments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme3HistoryValues" page-break-before="False" keep-with-next-strength="0" template-guid="1ea8f78a-a057-4725-bbc8-aedd0bb23ed8">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4filter1" pre="newComputation.GetDateFilter(-2, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod2', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column4filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <var name="column5filter1" pre="newComputation.GetDateFilter(-3, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod3', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column5filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column5add" pre="smartTable.AddColumn(column5)" />
    <var name="column6filter1" pre="newComputation.GetDateFilter(-4, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod4', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column6filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column6add" pre="smartTable.AddColumn(column6)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('HistoryOfExperience', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;quot;surplus/(deficit)&amp;quot;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; in scheme&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Fair value of scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Assets|FairValue|Rows|*', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:FairValueAssetsDefinedBenefitScheme')" />
    <var name="section1subsection1XBRLDimensionsSet" pre="section1subsection1.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="section1subsection1XBRLHypercubeNameSet" pre="section1subsection1.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Present value of scheme liabilities&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|Liabilities|PresentValue|Rows|*', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:DefinedBenefitObligationPresentValue')" />
    <var name="section1subsection2XBRLDimensionsSet" pre="section1subsection2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="section1subsection2XBRLHypercubeNameSet" pre="section1subsection2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection2XBRLReverseSignSet" pre="section1subsection2.SetReverseSign(true)" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
    <var name="section1XBRLReverseSignSet" pre="section1.SetReverseSign(true)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Experience values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme3ExperienceValues" page-break-before="False" keep-with-next-strength="0" template-guid="0d6db86d-e26e-481a-a842-1d0e99d0e512">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Experience adjustments:</para>
</add-to-body></template>
								<report-template version="12" name="Experience expressed as an amount" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|ExperienceAdjustments|DisclosedBy|Current Period&quot;)[0].Value = 'Amount'" enabled="Conditional" section-name="FRS17PensionScheme3Experience£" page-break-before="False" keep-with-next-strength="0" template-guid="a5041256-df92-4e5f-991d-5dcba50a119c">
									<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Grand Total')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Grand Total')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Grand Total')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Grand Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Grand Total')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Grand Total')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Grand Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Grand Total')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Grand Total')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4filter1" pre="newComputation.GetDateFilter(-2, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod2', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column4filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <var name="column5filter1" pre="newComputation.GetDateFilter(-3, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod3', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column5filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column5add" pre="smartTable.AddColumn(column5)" />
    <var name="column6filter1" pre="newComputation.GetDateFilter(-4, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod4', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column6filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column6add" pre="smartTable.AddColumn(column6)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ExperienceAmount', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Experience adjustments arising on scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|ExperienceAdjustments|ExperienceAdjustments|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:ExperienceGainLossArisingOnAssetsDefinedBenefitScheme')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Experience adjustments arising on scheme liabilities&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|ExperienceAdjustments|ExperienceAdjustments|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:ExperienceGainLossArisingOnLiabilitiesDefinedBenefitScheme')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
								</report-template>
								<report-template version="12" name="Experience expressed as a percentage" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|ExperienceAdjustments|DisclosedBy|Current Period&quot;)[0].Value = '%'" enabled="Conditional" section-name="FRS17PensionScheme3Experience%" page-break-before="False" keep-with-next-strength="0" template-guid="548d918d-aa29-4f13-8697-78272ddbfef8">
									<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'MyFirstTable', 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Grand Total')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Grand Total')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Grand Total')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Grand Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Grand Total')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Grand Total')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Grand Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Grand Total')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Grand Total')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;%&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;%&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4filter1" pre="newComputation.GetDateFilter(-2, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod2', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column4filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;%&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column4XBRLDimensionsSet" pre="column4.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column4XBRLHypercubeNameSet" pre="column4.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <var name="column5filter1" pre="newComputation.GetDateFilter(-3, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod3', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column5filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;%&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column5add" pre="smartTable.AddColumn(column5)" />
    <var name="column6filter1" pre="newComputation.GetDateFilter(-4, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod4', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column6filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;%&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column6XBRLDimensionsSet" pre="column6.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column6XBRLHypercubeNameSet" pre="column6.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column6add" pre="smartTable.AddColumn(column6)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ExperiencePercent', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Experience adjustments arising on scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|ExperienceAdjustments|ExperienceAdjustments|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:ExperienceGainLossArisingOnAssetsDefinedBenefitSchemeAsPercentageSchemeAssets')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Experience adjustments arising on scheme liabilities&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|ExperienceAdjustments|ExperienceAdjustments|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:ExperienceGainLossArisingOnLiabilitiesDefinedBenefitSchemeAsPercentageSchemeLiabilities')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
								</report-template>
							</report-template>
						</report-template>
						<report-template version="12" name="Restatement of comparatives" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[2]|ExperienceAdjustments|ComparativesRestated|Current Period&quot;)[0].Value =true" enabled="Conditional" section-name="FRS17PensionScheme3RestatedComparatives" page-break-before="False" keep-with-next-strength="0" template-guid="35d1bfb4-764f-4c41-9b36-b9c0ca9d24af">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:StatementThatEntityHasChosenNotToRestateValuesForPastYearsInAccordanceWithFRS17.95C" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3" xbrl-invert-sign="True">Comparative figures have not been restated as permitted by FRS 17.</para>
</add-to-body></template>
						</report-template>
					</report-template>
					<report-template version="12" name="FRSSE Pension scheme 3" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('907').HasTransactions and FRSSE = true" enabled="Conditional" section-name="FRSSEPensionScheme3" page-break-before="False" keep-with-next-strength="0" template-guid="23eea494-5920-4a64-a603-3f9ac4895730">
						<template><add-to-body>
</add-to-body></template>
						<report-template version="12" name="Details of scheme" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRSSEPensionScheme3Details" page-break-before="False" keep-with-next-strength="1" template-guid="1f7099d0-ef3f-4140-b151-21d9d3d86fbb">
							<template><add-to-body>
  <para para-alignment="Full" base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:NameDefinedBenefitScheme" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SchemeDetails|Name|Current Period")[0].Value</data>
  </para>
</add-to-body></template>
							<report-template version="12" name="Description and valuation" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRSSEPensionScheme3DescriptionAnd Valuation" page-break-before="False" keep-with-next-strength="0" template-guid="3c50fd09-1779-4064-90b5-ef6330c095af">
								<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:DescriptionDefinedBenefitScheme" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SchemeDetails|Description|Current Period")[0].Value</data>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The most recent valuation was at <ws /><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SchemeDetails|Date|Current Period")[0].Value</data><ws /> which has been updated to reflect conditions at the balance sheet date. <ws /><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SchemeDetails|Details|Current Period")[0].Value</data><ws /><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SchemeDetails|ActuaryEmployee|Current Period&quot;)[0].Value =true or &#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SchemeDetails|ActuaryOfficer|Current Period&quot;)[0].Value =true">The actuary is an <ws /><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SchemeDetails|ActuaryEmployee|Current Period&quot;)[0].Value =true">employee <ws /></inline><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SchemeDetails|ActuaryEmployee|Current Period&quot;)[0].Value =true and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SchemeDetails|ActuaryOfficer|Current Period&quot;)[0].Value =true"><ws /> and <ws /></inline><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SchemeDetails|ActuaryOfficer|Current Period&quot;)[0].Value =true">officer <ws /></inline>
of the company.</inline><ws /></para>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Contributions expressed as an amount" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SchemeDetails|DisclosedBy|Current Period&quot;)[0].Value = 'Amount'" enabled="Conditional" section-name="FRSSEPensionScheme3Contributions£" page-break-before="False" keep-with-next-strength="0" template-guid="c4fbb83f-8645-41d8-a8f4-274666f82a47">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
                      The contributions of the company were <ws /><inline xbrl-concept="uk-gaap:ContributionsToDefinedBenefitSchemeByEmployer" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3" xbrl-scaling="0"><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SchemeDetails|ContributionRates|Rows|*:item[0]|Current|Current Period")[0].Value</data></inline>
                      . <ws /><inline xbrl-concept="uk-gaap:StatementOnExpectedFutureContributionsToDefinedBenefitSchemeByEmployerDuringFollowingYear" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3">
                        Future contributions in the next year are expected to be <ws /><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SchemeDetails|ContributionRates|Rows|*:item[0]|Future|Current Period")[0].Value</data>
                        .
                      </inline></para>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Contributions expressed as a percentage" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SchemeDetails|DisclosedBy|Current Period&quot;)[0].Value = '%'" enabled="Conditional" section-name="FRSSEPensionScheme3Contributions%" page-break-before="False" keep-with-next-strength="0" template-guid="bb35ab74-b3f1-49e6-9821-b4cba9fad66c">
								<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
                      The contributions of the company were <ws /><inline xbrl-concept="uk-gaap:NetContributionRateForLatestPeriodAsPercentagePensionableEarnings" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3"><data base-style="Percentage">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SchemeDetails|ContributionRates|Rows|*:item[0]|Current|Current Period")[0].Value</data></inline><ws /> of pensionable earnings. <ws /><inline xbrl-concept="uk-gaap:StatementOnExpectedFutureContributionsToDefinedBenefitSchemeByEmployerDuringFollowingYear" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3">
                        Future contributions in the next year are expected to be <ws /><data base-style="Percentage">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SchemeDetails|ContributionRates|Rows|*:item[0]|Future|Current Period")[0].Value</data><inline base-style="Percentage"><ws /> of pensionable earnings
                        </inline></inline>
                      .
                    </para>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Service costs expected to increase" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Conditional" section-name="FRSSEPensionScheme3CostIncrease" page-break-before="False" keep-with-next-strength="0" template-guid="7e3ad16f-a0e9-4e15-82c0-b20ca7249bcb">
								<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SchemeDetails|SchemeClosed|Current Period&quot;)[0].Value = true&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SchemeDetails|AgeProfileRising|Current Period&quot;)[0].Value = false">The defined benefit scheme is now closed to new members so under the projected unit method the current service cost would be expected to increase over time as members of the scheme approach retirement.</inline>
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SchemeDetails|AgeProfileRising|Current Period&quot;)[0].Value = true&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SchemeDetails|SchemeClosed|Current Period&quot;)[0].Value = false">The age profile of active members is rising significantly so under the projected unit method the current service cost would be expected to increase over time as new members of the scheme approach retirement.</inline>
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SchemeDetails|SchemeClosed|Current Period&quot;)[0].Value = true and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SchemeDetails|AgeProfileRising|Current Period&quot;)[0].Value = true">The defined benefit scheme is now closed to new members and the age profile of active members is rising significantly so under the projected unit method the current service cost would be expected to increase over time as new members of the scheme approach retirement.</inline>
  </para>
</add-to-body></template>
							</report-template>
						</report-template>
						<report-template version="12" name="Scheme assets and liabilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRSSEPensionScheme3AssetsAndLiabilities" page-break-before="False" keep-with-next-strength="1" template-guid="c6971a90-dea1-47a9-b232-b93646c11751">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The amounts recognised in the balance sheet are as follows:</para>
</add-to-body></template>
							<report-template version="12" name="Scheme assets and liabilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Conditional" section-name="FRSSEPensionScheme3AssetsLiabilitiesValues" page-break-before="False" keep-with-next-strength="0" template-guid="e0a80b4f-8b62-4f1c-b8e4-b29d920ab056">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ActuariaFairlValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Fair value of scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|AssetsAndLiabilities|Calculation|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:FairValueAssetsDefinedBenefitScheme')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ActuariaPresentlValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Present value of scheme liabilities&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|AssetsAndLiabilities|Calculation|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:DefinedBenefitObligationPresentValue')" />
    <var name="section2subsection1XBRLReverseSignSet" pre="section2subsection1.SetReverseSign(true)" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('ActuarialValue', '&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section3item1" pre="section3.AddTotalItem(section1)" />
    <var name="section3item2" pre="section3.AddTotalItem(section2)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
    <var name="section3XBRLReverseSignSet" pre="section3.SetReverseSign(true)" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <var name="section4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ReconcilingItems', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section4subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Unrecognised past service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|AssetsAndLiabilities|Reconciliation|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection1subsectionitem1add" pre="section4subsection1.AddItem(section4subsection1subsectionitem1)" />
    <var name="section4subsection1XBRLConceptNameSet" pre="section4subsection1.SetConceptName('uk-gaap:PastServiceCostNotRecognisedInBalanceSheet')" />
    <var name="section4subsection1add" pre="section4.AddItem(section4subsection1)" />
    <var name="section4subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amounts not recognised as an asset under FRS 17 paragraph 41&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|AssetsAndLiabilities|Reconciliation|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection2subsectionitem1add" pre="section4subsection2.AddItem(section4subsection2subsectionitem1)" />
    <var name="section4subsection2XBRLConceptNameSet" pre="section4subsection2.SetConceptName('uk-gaap:AmountNotRecognisedAsAnAssetBecauseIAS58bLimit')" />
    <var name="section4subsection2XBRLReverseSignSet" pre="section4subsection2.SetReverseSign(true)" />
    <var name="section4subsection2add" pre="section4.AddItem(section4subsection2)" />
    <var name="section4subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other amounts recognised in the balance sheet&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|AssetsAndLiabilities|Reconciliation|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection3subsectionitem1add" pre="section4subsection3.AddItem(section4subsection3subsectionitem1)" />
    <var name="section4subsection3XBRLConceptNameSet" pre="section4subsection3.SetConceptName('uk-gaap:OtherAssetsLiabilitiesRelatedToDefinedBenefitSchemeRecognisedInBalanceSheet')" />
    <var name="section4subsection3add" pre="section4.AddItem(section4subsection3)" />
    <var name="section4subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other amounts not recognised in the balance sheet&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|AssetsAndLiabilities|Reconciliation|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem1add" pre="section4subsection4.AddItem(section4subsection4subsectionitem1)" />
    <var name="section4subsection4add" pre="section4.AddItem(section4subsection4)" />
    <var name="section4add" pre="smartTable.AddTableBlock(section4)" />
    <var name="section5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('SurplusDeficit', '&lt;para&gt;Defined benefit pension scheme &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;surplus/(deficit)&amp;quot;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section5item1" pre="section5.AddTotalItem(section3)" />
    <var name="section5item2" pre="section5.AddTotalItem(section4)" />
    <var name="section5XBRLConceptNameSet" pre="section5.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
    <var name="section5XBRLReverseSignSet" pre="section5.SetReverseSign(true)" />
    <var name="section5add" pre="smartTable.AddTableBlock(section5)" />
    <var name="section6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('RelatedDeferredTax', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Related deferred tax &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;asset/(liability)&amp;quot;)&lt;/data&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section6subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Deferred tax on pension &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;asset/(liability)&amp;quot;)&lt;/data&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section6subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('905.80', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem1add" pre="section6subsection1.AddItem(section6subsection1subsectionitem1)" />
    <var name="section6subsection1add" pre="section6.AddItem(section6subsection1)" />
    <var name="section6XBRLConceptNameSet" pre="section6.SetConceptName('uk-gaap:DeferredTaxLiabilityAssetRelatedToDefinedBenefitScheme')" />
    <var name="section6XBRLReverseSignSet" pre="section6.SetReverseSign(true)" />
    <var name="section6add" pre="smartTable.AddTableBlock(section6)" />
    <var name="section7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('NetAssetLiability', '&lt;para&gt;Net &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;asset/(liability)&amp;quot;)&lt;/data&gt;&lt;ws/&gt; in the balance sheet&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section7item1" pre="section7.AddTotalItem(section5)" />
    <var name="section7item2" pre="section7.AddTotalItem(section6)" />
    <var name="section7XBRLConceptNameSet" pre="section7.SetConceptName('uk-gaap:RetirementBenefitObligationsSurplus')" />
    <var name="section7XBRLReverseSignSet" pre="section7.SetReverseSign(true)" />
    <var name="section7add" pre="smartTable.AddTableBlock(section7)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
						</report-template>
						<report-template version="12" name="Surplus (deficit)" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRSSEPensionScheme3SurplusDeficit" page-break-before="False" keep-with-next-strength="1" template-guid="dbf2f362-84ed-4038-b5a8-a964a8c6b3c1">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Changes in the pension scheme surplus (deficit) are as follows:</para>
</add-to-body></template>
							<report-template version="12" name="Surplus (deficit)" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRSSEPensionScheme3SurplusDeficitValues" page-break-before="False" keep-with-next-strength="0" template-guid="3967abf1-12f3-4477-a7df-ffcda64f55de">
								<template><add-to-body>
	<section width="100%">
		<!-- Setup the Computation and SmartTable -->
		<var name="currentPeriod" pre="reporting.CurrentPeriod" />
		<var name="newComputation" pre="reporting.NewComputation" />
		<var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
		<var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
		<var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
		<var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
		<var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
		<var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
		<var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
		<var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
		<var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
		<var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
		<var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
		<!-- Add the columns -->
		<var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
		<var name="column1add" pre="smartTable.AddColumn(column1)" />
		<var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
		<var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
		<var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
		<var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
		<var name="column2XBRLPeriodSet" pre="column2.SetPeriod('Current')" />
		<var name="column2add" pre="smartTable.AddColumn(column2)" />
		<var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
		<var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
		<var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
		<var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
		<var name="column3XBRLPeriodSet" pre="column3.SetPeriod('Prior')" />
		<var name="column3add" pre="smartTable.AddColumn(column3)" />
		<!-- Add the sections and rows -->
		<var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('SurplusDeficit', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Pension scheme &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;surplus (deficit)&amp;quot;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; at end of &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
		<var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Pension scheme &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;surplus (deficit)&amp;quot;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; at start of &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SurplusDeficit|Movement|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
		<var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
		<var name="section1subsection1XBRLPeriodSet" pre="section1subsection1.SetPeriod('Start')" />
		<var name="section1subsection1XBRLReverseSignSet" pre="section1subsection1.SetReverseSign(true)" />
		<var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
		<var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current service costs&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SurplusDeficit|Movement|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
		<var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:CurrentServiceCostDefinedBenefitScheme')" />
		<var name="section1subsection2XBRLPeriodSet" pre="section1subsection2.SetPeriod('Duration')" />
		<var name="section1subsection2XBRLReverseSignSet" pre="section1subsection2.SetReverseSign(true)" />
		<var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
		<var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Past service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SurplusDeficit|Movement|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
		<var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:PastServiceCostDefinedBenefitScheme')" />
		<var name="section1subsection3XBRLPeriodSet" pre="section1subsection3.SetPeriod('Duration')" />
		<var name="section1subsection3XBRLReverseSignSet" pre="section1subsection3.SetReverseSign(true)" />
		<var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
		<var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Actuarial gains and losses&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SurplusDeficit|Movement|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
		<var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:ActuarialGainLossOnLiabilitiesDefinedBenefitScheme')" />
		<var name="section1subsection4XBRLPeriodSet" pre="section1subsection4.SetPeriod('Duration')" />
		<var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
		<var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Foreign exchange differences&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SurplusDeficit|Movement|Rows|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
		<var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:IncreaseDecreaseInLiabilitiesDefinedBenefitSchemeFromForeignExchangeDifferences')" />
		<var name="section1subsection5XBRLPeriodSet" pre="section1subsection5.SetPeriod('Duration')" />
		<var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
		<var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Finance &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;income/(cost)&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SurplusDeficit|Movement|Rows|*:item[5]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
		<var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:ExpenseIncomeFromInterestCostDefinedBenefitScheme')" />
		<var name="section1subsection6XBRLPeriodSet" pre="section1subsection6.SetPeriod('Duration')" />
		<var name="section1subsection6XBRLReverseSignSet" pre="section1subsection6.SetReverseSign(true)" />
		<var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
		<var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cash contribution&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SurplusDeficit|Movement|Rows|*:item[6]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
		<var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:ContributionsToPensionScheme')" />
		<var name="section1subsection7XBRLPeriodSet" pre="section1subsection7.SetPeriod('Duration')" />
		<var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
		<var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;increase/(decrease)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; in assets from business combinations and disposals&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SurplusDeficit|Movement|Rows|*:item[7]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
		<var name="section1subsection8XBRLConceptNameSet" pre="section1subsection8.SetConceptName('uk-gaap:IncreaseDecreaseInAssetsDefinedBenefitSchemeFromBusinessCombinationsDisposals')" />
		<var name="section1subsection8XBRLPeriodSet" pre="section1subsection8.SetPeriod('Duration')" />
		<var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
		<var name="section1subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;(increase)/decrease&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; in liabilities from business combinations and disposals&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SurplusDeficit|Movement|Rows|*:item[8]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection9subsectionitem1add" pre="section1subsection9.AddItem(section1subsection9subsectionitem1)" />
		<var name="section1subsection9XBRLConceptNameSet" pre="section1subsection9.SetConceptName('uk-gaap:IncreaseDecreaseInLiabilitiesDefinedBenefitSchemeFromBusinessCombinationsDisposals')" />
		<var name="section1subsection9XBRLPeriodSet" pre="section1subsection9.SetPeriod('Duration')" />
		<var name="section1subsection9XBRLReverseSignSet" pre="section1subsection9.SetReverseSign(true)" />
		<var name="section1subsection9add" pre="section1.AddItem(section1subsection9)" />
		<var name="section1subsection10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Effects of curtailments and settlements&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection10subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SurplusDeficit|Movement|Rows|*:item[9]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection10subsectionitem1add" pre="section1subsection10.AddItem(section1subsection10subsectionitem1)" />
		<var name="section1subsection10XBRLConceptNameSet" pre="section1subsection10.SetConceptName('uk-gaap:GainLossFromSettlementsCurtailmentsIncludedInSeparateItemAfterOperatingProfit')" />
		<var name="section1subsection10XBRLPeriodSet" pre="section1subsection10.SetPeriod('Duration')" />
		<var name="section1subsection10add" pre="section1.AddItem(section1subsection10)" />
		<var name="section1subsection11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection11subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|SurplusDeficit|Movement|Rows|*:item[10]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection11subsectionitem1add" pre="section1subsection11.AddItem(section1subsection11subsectionitem1)" />
		<var name="section1subsection11XBRLPeriodSet" pre="section1subsection11.SetPeriod('Duration')" />
		<var name="section1subsection11add" pre="section1.AddItem(section1subsection11)" />
		<var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
		<var name="section1XBRLPeriodSet" pre="section1.SetPeriod('End')" />
		<var name="section1XBRLReverseSignSet" pre="section1.SetReverseSign(true)" />
		<var name="section1add" pre="smartTable.AddTableBlock(section1)" />
		<!-- Print the table -->
		<var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
		<var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
		<table base-style="Table Text">
			<column-details column-number="1" char-align=")" align="bottom-right" />
			<column-details column-number="2" char-align=")" align="bottom-right" />
			<column-details column-number="3" char-align=")" align="bottom-right" />
			<table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
				<section runtime-smart-tag="section.SmartTag">
					<table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
						<table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
							<!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
							<table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
								<table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
									<para runtime-font-color="cell.Color">
										<data condition="cell.HasStringContent">cell.ContentString</data>
										<data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
										<data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
									</para>
								</table-cell>
							</table-row>
							<!-- Cell which has a fixed width and has padding cells either side of the main cell -->
							<table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
								<table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
								<table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
									<para runtime-font-color="cell.Color">
										<data condition="cell.HasStringContent">cell.ContentString</data>
										<data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
										<data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
									</para>
								</table-cell>
								<table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
							</table-row>
							<!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
							<table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
								<table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
									<para runtime-font-color="cell.Color">
										<data condition="cell.HasStringContent">cell.ContentString</data>
										<data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
										<data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
									</para>
								</table-cell>
							</table-row>
							<!-- Cell which uses available free-space and has padding cells either side of the main cell -->
							<table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
								<table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
								<table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
									<para runtime-font-color="cell.Color">
										<data condition="cell.HasStringContent">cell.ContentString</data>
										<data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
										<data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
									</para>
								</table-cell>
								<table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
							</table-row>
						</table-column-iterator>
					</table-row-iterator>
				</section>
			</table-row-iterator>
		</table>
	</section>
</add-to-body>
</template>
							</report-template>
						</report-template>
						<report-template version="12" name="Amounts charged (credited) to operating profit" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRSSEPensionScheme3OperatingProfit" page-break-before="False" keep-with-next-strength="1" template-guid="90346585-cf51-4217-8e7d-f4d7f666702a">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
                    The amounts that have been charged/(credited) to <ws /><data>reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(1m,1m).ComparativesUnfiltered.AllCategoriesRoot,'OpProfit').Description.ToLower()</data><ws /> in the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> are:
                  </para>
</add-to-body></template>
							<report-template version="12" name="Amounts charged (credited) to operating profit" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRSSEPensionScheme3OperatingProfitValues" page-break-before="False" keep-with-next-strength="0" template-guid="af8ade31-f2e4-4078-a8d1-0c7929aecefc">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme3,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('RecognisedInProfitLoss', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;quot;charge/(credit)&amp;quot;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; to &lt;ws/&gt;&lt;data&gt;reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(1m,1m).ComparativesUnfiltered.AllCategoriesRoot,&amp;apos;OpProfit&amp;apos;).Description.ToLower()&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:CurrentServiceCostDefinedBenefitScheme')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Past service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:PastServiceCostDefinedBenefitScheme')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Effect of FRS 17 paragraph 41&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:IncomeExpenseFromAmountsNotRecognisedAsAnAssetBecauseIAS58bLimit')" />
    <var name="section1subsection3XBRLReverseSignSet" pre="section1subsection3.SetReverseSign(true)" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Effects of curtailments and settlements&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[2]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:ExpenseIncomeFromDefinedBenefitSchemeSettlementsCurtailments')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:ChargeCreditToOperatingProfitFromDefinedBenefitScheme')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
						</report-template>
					</report-template>
					<report-template version="12" name="Pension scheme 4" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('908').HasTransactions and FRSSE = false" enabled="Conditional" section-name="FRS17PensionScheme4" page-break-before="False" keep-with-next-strength="0" template-guid="1bf79053-cb88-4c2c-8dda-e06c2bde7150">
						<template><add-to-body>
</add-to-body></template>
						<report-template version="12" name="Details of scheme" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme4Details" page-break-before="False" keep-with-next-strength="1" template-guid="3d8af10b-12b3-4c91-a43c-c82222b5868d">
							<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline font-style="+bold" xbrl-concept="uk-gaap:NameDefinedBenefitScheme" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4">
      <data base-style="Title">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|SchemeDetails|Name|Current Period")[0].Value</data>
    </inline>
  </para>
</add-to-body></template>
							<report-template version="12" name="Description of scheme" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme4Description" page-break-before="False" keep-with-next-strength="0" template-guid="a3321575-8c62-461f-b261-d52fc800b53b">
								<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:DescriptionDefinedBenefitScheme" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|SchemeDetails|Description|Current Period")[0].Value</data>
  </para>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Contributions" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Conditional" section-name="FRS17PensionScheme4Contributions" page-break-before="False" keep-with-next-strength="0" template-guid="de56a343-50af-401c-a9a1-ca9d00184f42">
								<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Contributions<inline condition="(reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|SchemeDetails|Contribution|Current Period&quot;)[0].Value &gt;=0 and&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|SchemeDetails|Contribution|Prior Period&quot;)[0].Value &gt;=0) )&#xD;&#xA;&#xD;&#xA;or&#xD;&#xA;&#xD;&#xA;(reportHelper.HasPriorPeriod=false and&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|SchemeDetails|Contribution|Current Period&quot;)[0].Value &gt;=0)"><ws /> payable</inline><inline condition="(reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|SchemeDetails|Contribution|Current Period&quot;)[0].Value &lt;0 and&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|SchemeDetails|Contribution|Prior Period&quot;)[0].Value &lt;0) )&#xD;&#xA;&#xD;&#xA;or&#xD;&#xA;(reportHelper.HasPriorPeriod=false and&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|SchemeDetails|Contribution|Current Period&quot;)[0].Value &lt;0)"><ws /> (prepaid)</inline><inline condition="reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|SchemeDetails|Contribution|Current Period&quot;)[0].Value &gt;=0 and&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|SchemeDetails|Contribution|Prior Period&quot;)[0].Value &lt;0)"><ws /> payable/(prepaid)</inline><inline condition="reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[0]|SchemeDetails|Contribution|Current Period&quot;)[0].Value &lt;0 and&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|SchemeDetails|Contribution|Prior Period&quot;)[0].Value &gt;=0)"><ws /> (prepaid)/payable</inline><ws /> to the pension scheme at the end of the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> are <ws /><inline xbrl-concept="uk-gaap:OutstandingPre-paidContributionsToDefinedBenefitSchemeBalanceSheetDate" xbrl-period="EndCurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|SchemeDetails|Contribution|Current Period")[0].Value</data></inline><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.PriorPeriod.EndDate.Value.Year</data><ws /> - <ws /><inline xbrl-concept="uk-gaap:OutstandingPre-paidContributionsToDefinedBenefitSchemeBalanceSheetDate" xbrl-period="EndPriorPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|SchemeDetails|Contribution|Prior Period")[0].Value</data></inline>
)</inline>
.
<br /><br /><inline xbrl-concept="uk-gaap:StatementOnExpectedFutureContributionsToDefinedBenefitSchemeByEmployerDuringFollowingYear" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4">The total contributions in the next year are expected to be <ws /><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|SchemeDetails|DisclosedBy|Current Period&quot;)[0].Value = 'Amount'"><data>reporting.CurrentClient.CurrencySymbol</data></inline><data base-style="Number">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|SchemeDetails|FutureContribution|Current Period")[0].Value

</data><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|SchemeDetails|DisclosedBy|Current Period&quot;)[0].Value = '%'">% of pensionable earnings</inline>
.</inline></para>
</add-to-body></template>
							</report-template>
						</report-template>
						<report-template version="12" name="Scheme assets and liabilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme4AssetsAndLiabilities" page-break-before="False" keep-with-next-strength="0" template-guid="a5c94750-d53c-45ac-a34e-5ddb6a669c11">
							<template><add-to-body>
</add-to-body></template>
							<report-template version="12" name="Reconciliation of scheme assets and liabilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme4Reconciliation" page-break-before="False" keep-with-next-strength="1" template-guid="6c8f5509-d6a8-4407-9d26-a6caade00ebb">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Reconciliation of scheme assets and liabilities to assets and liabilities recognised</inline>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
The amounts recognised in the balance sheet are as follows:</para>
</add-to-body></template>
								<report-template version="12" name="Reconciliation of scheme assets and liabilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme4ReconciliationValues" page-break-before="False" keep-with-next-strength="0" template-guid="83407c7b-83b0-4f35-8f12-db0a03df8ce9">
									<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ActuarialFairValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Fair value of scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|FairValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:FairValueAssetsDefinedBenefitScheme')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ActuarialPresentValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Present value of scheme liabilities&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.Rows, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Reconciliation|Calculation|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:DefinedBenefitObligationPresentValue')" />
    <var name="section2subsection1XBRLReverseSignSet" pre="section2subsection1.SetReverseSign(true)" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('ActuarialValue', '&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section3item1" pre="section3.AddTotalItem(section1)" />
    <var name="section3item2" pre="section3.AddTotalItem(section2)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
    <var name="section3XBRLReverseSignSet" pre="section3.SetReverseSign(true)" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <var name="section4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ReconcilingItems', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section4subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Unrecognised past service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Reconciliation|Reconciliation|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection1subsectionitem1add" pre="section4subsection1.AddItem(section4subsection1subsectionitem1)" />
    <var name="section4subsection1XBRLConceptNameSet" pre="section4subsection1.SetConceptName('uk-gaap:PastServiceCostNotRecognisedInBalanceSheet')" />
    <var name="section4subsection1add" pre="section4.AddItem(section4subsection1)" />
    <var name="section4subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amounts not recognised as an asset under FRS 17 paragraph 41&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Reconciliation|Reconciliation|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection2subsectionitem1add" pre="section4subsection2.AddItem(section4subsection2subsectionitem1)" />
    <var name="section4subsection2XBRLConceptNameSet" pre="section4subsection2.SetConceptName('uk-gaap:AmountNotRecognisedAsAnAssetBecauseIAS58bLimit')" />
    <var name="section4subsection2XBRLReverseSignSet" pre="section4subsection2.SetReverseSign(true)" />
    <var name="section4subsection2add" pre="section4.AddItem(section4subsection2)" />
    <var name="section4subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other amounts recognised in the balance sheet&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Reconciliation|Reconciliation|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection3subsectionitem1add" pre="section4subsection3.AddItem(section4subsection3subsectionitem1)" />
    <var name="section4subsection3XBRLConceptNameSet" pre="section4subsection3.SetConceptName('uk-gaap:OtherAssetsLiabilitiesRelatedToDefinedBenefitSchemeRecognisedInBalanceSheet')" />
    <var name="section4subsection3add" pre="section4.AddItem(section4subsection3)" />
    <var name="section4subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other amounts not recognised in the balance sheet&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Reconciliation|Reconciliation|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem1add" pre="section4subsection4.AddItem(section4subsection4subsectionitem1)" />
    <var name="section4subsection4add" pre="section4.AddItem(section4subsection4)" />
    <var name="section4add" pre="smartTable.AddTableBlock(section4)" />
    <var name="section5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('SurplusDeficit', '&lt;para&gt;Defined benefit pension scheme &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;surplus/(deficit)&amp;quot;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section5item1" pre="section5.AddTotalItem(section3)" />
    <var name="section5item2" pre="section5.AddTotalItem(section4)" />
    <var name="section5XBRLConceptNameSet" pre="section5.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
    <var name="section5XBRLReverseSignSet" pre="section5.SetReverseSign(true)" />
    <var name="section5add" pre="smartTable.AddTableBlock(section5)" />
    <var name="section6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('RelatedDeferredTax', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Heading&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Related deferred tax &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;asset/(liability)&amp;quot;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section6subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Deferred tax on pension asset/liability&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section6subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('905.80', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem1add" pre="section6subsection1.AddItem(section6subsection1subsectionitem1)" />
    <var name="section6subsection1add" pre="section6.AddItem(section6subsection1)" />
    <var name="section6XBRLConceptNameSet" pre="section6.SetConceptName('uk-gaap:DeferredTaxLiabilityAssetRelatedToDefinedBenefitScheme')" />
    <var name="section6XBRLReverseSignSet" pre="section6.SetReverseSign(true)" />
    <var name="section6add" pre="smartTable.AddTableBlock(section6)" />
    <var name="section7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('NetAssetLiability', '&lt;para&gt;Net &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;asset/(liability)&amp;quot;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; in the balance sheet&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section7item1" pre="section7.AddTotalItem(section5)" />
    <var name="section7item2" pre="section7.AddTotalItem(section6)" />
    <var name="section7XBRLConceptNameSet" pre="section7.SetConceptName('uk-gaap:RetirementBenefitObligationsSurplus')" />
    <var name="section7XBRLReverseSignSet" pre="section7.SetReverseSign(true)" />
    <var name="section7add" pre="smartTable.AddTableBlock(section7)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
								</report-template>
							</report-template>
							<report-template version="12" name="Assets" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme4Assets" page-break-before="False" keep-with-next-strength="0" template-guid="aee9ca26-4d09-4d74-ac18-44557570c0be">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Scheme assets</inline>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Changes in the fair value of scheme assets are as follows:</para>
</add-to-body></template>
								<report-template version="12" name="Changes in fair value" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme4ChangesInFairValue" page-break-before="False" keep-with-next-strength="0" template-guid="934cce1b-d4b3-48da-a581-6615dac14ae6">
									<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('Current')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('Prior')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('AssetMovement', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Fair value at end of &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Fair value at start of &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|Movement|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:FairValueAssetsDefinedBenefitScheme')" />
    <var name="section1subsection1XBRLPeriodSet" pre="section1subsection1.SetPeriod('Start')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expected return on assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|Movement|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:ExpenseIncomeFromExpectedReturnOnAssetsDefinedBenefitScheme')" />
    <var name="section1subsection2XBRLPeriodSet" pre="section1subsection2.SetPeriod('Duration')" />
    <var name="section1subsection2XBRLReverseSignSet" pre="section1subsection2.SetReverseSign(true)" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Actuarial gains and losses&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|Movement|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:ActuarialGainLossOnAssetsDefinedBenefitScheme')" />
    <var name="section1subsection3XBRLPeriodSet" pre="section1subsection3.SetPeriod('Duration')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Foreign exchange differences&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|Movement|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:IncreaseDecreaseInAssetsDefinedBenefitSchemeFromForeignExchangeDifferences')" />
    <var name="section1subsection4XBRLPeriodSet" pre="section1subsection4.SetPeriod('Duration')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Employer contributions&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|Movement|Rows|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:ContributionsToDefinedBenefitSchemeByEmployer')" />
    <var name="section1subsection5XBRLPeriodSet" pre="section1subsection5.SetPeriod('Duration')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Contributions by scheme participants&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|Movement|Rows|*:item[5]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:ContributionsByDefinedBenefitSchemeParticipants')" />
    <var name="section1subsection6XBRLPeriodSet" pre="section1subsection6.SetPeriod('Duration')" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Benefits paid&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|Movement|Rows|*:item[6]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:BenefitsPaidRelatedToDefinedBenefitScheme')" />
    <var name="section1subsection7XBRLPeriodSet" pre="section1subsection7.SetPeriod('Duration')" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Assets acquired in business combinations&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|Movement|Rows|*:item[7]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
    <var name="section1subsection8XBRLConceptNameSet" pre="section1subsection8.SetConceptName('uk-gaap:IncreaseDecreaseInAssetsDefinedBenefitSchemeFromBusinessCombinationsDisposals')" />
    <var name="section1subsection8XBRLPeriodSet" pre="section1subsection8.SetPeriod('Duration')" />
    <var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
    <var name="section1subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Assets distributed on settlements&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|Movement|Rows|*:item[8]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection9subsectionitem1add" pre="section1subsection9.AddItem(section1subsection9subsectionitem1)" />
    <var name="section1subsection9XBRLConceptNameSet" pre="section1subsection9.SetConceptName('uk-gaap:IncreaseDecreaseInAssetsDefinedBenefitSchemeFromSettlements')" />
    <var name="section1subsection9XBRLPeriodSet" pre="section1subsection9.SetPeriod('Duration')" />
    <var name="section1subsection9add" pre="section1.AddItem(section1subsection9)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:FairValueAssetsDefinedBenefitScheme')" />
    <var name="section1XBRLPeriodSet" pre="section1.SetPeriod('End')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
								</report-template>
								<report-template version="12" name="Asset categories" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme4AssetAnalysis" page-break-before="False" keep-with-next-strength="1" template-guid="b38ebbb8-6cf0-42eb-b7e9-8d3f9b730f81">
									<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Analysis of assets</inline>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The major categories of scheme assets<inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|DisclosedBy|Current Period&quot;)[0].Value = '%'"><ws /> as a percentage of total scheme assets</inline><ws /> are as follows:</para>
</add-to-body></template>
									<report-template version="12" name="Asset categories expressed as an amount" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[0]|Assets|DisclosedBy|Current Period&quot;)[0].Value = 'Amount'" enabled="Conditional" section-name="FRS17PensionScheme4AssetCategories£" page-break-before="False" keep-with-next-strength="0" template-guid="747a6151-a5f4-4c70-bb30-1143fce898ce">
										<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('AssetFairValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Equity instruments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|Category|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:EquitiesHeldInPensionSchemeFairValue')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Debt instruments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|Category|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:DebtInstrumentsBondsHeldInPensionSchemeFairValue')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Property&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|Category|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:PropertyHeldInPensionSchemeFairValue')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cash&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|Category|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:CashHeldInPensionSchemeFairValue')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|Category|Rows|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:OtherAssetsHeldInPensionSchemeFairValue')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:FairValueAssetsDefinedBenefitScheme')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
									</report-template>
									<report-template version="12" name="Asset categories expressed as a %" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[0]|Assets|DisclosedBy|Current Period&quot;)[0].Value = '%'" enabled="Conditional" section-name="FRS17PensionScheme4AssetCategories%" page-break-before="False" keep-with-next-strength="0" template-guid="b0f6d745-b850-4971-888d-e4042f155bfa">
										<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Table Text Percentage')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Table Text Percentage')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Table Text Percentage')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Table Text Percentage Final Value')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;%&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;%&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('AssetFairValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Equity instruments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|Category|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:EquitiesHeldInPensionSchemePercentage')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Debt instruments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|Category|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:DebtInstrumentsBondsHeldInPensionSchemePercentage')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Property&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|Category|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:PropertyHeldInPensionSchemePercentage')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cash&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|Category|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:CashHeldInPensionSchemePercentage')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|Category|Rows|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:OtherAssetsHeldInPensionSchemePercentage')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
									</report-template>
								</report-template>
								<report-template version="12" name="Actual return on scheme assets" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Conditional" section-name="FRS17PensionScheme4ActualReturnOnSchemeAssets" page-break-before="False" keep-with-next-strength="0" template-guid="b2bf3d1c-5e7f-4528-81ba-6c3ece081f64">
									<template><add-to-body>
  <para base-style="Title" font-style="+italic" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          Actual return on scheme's assets
        </para>
</add-to-body></template>
									<report-template version="12" name="Actual return on scheme assets" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme4AssetActualReturn" page-break-before="False" keep-with-next-strength="1" template-guid="f46575b8-3740-45c2-a10c-5f6f10a70f4f">
										<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ActualReturn', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Actual return on scheme assets&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|ActualReturn', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:ActualReturnOnAssetsBenefitSchemeScheme')" />
    <var name="section1XBRLDimensionsSet" pre="section1.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="section1XBRLHypercubeNameSet" pre="section1.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
									</report-template>
								</report-template>
								<report-template version="12" name="No financial instruments or property occupied" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|OwnFinancialInstruments|Rows|*&quot;,null, true).Count = 0) and (reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|UsedByEntity|Rows|*&quot;,null, true).Count = 0)" enabled="Conditional" section-name="FRS17PensionScheme4NoFinancialInstrumentsOrPropertyOccupied" page-break-before="False" keep-with-next-strength="0" template-guid="207ba390-feaf-4642-b09e-5a9a77ff47ef">
									<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The pension scheme has not invested<inline condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|OwnFinancialInstruments|Rows|*&quot;,null, true).Count = 0)"><ws /> in any of the company's own financial instruments</inline><inline condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|OwnFinancialInstruments|Rows|*&quot;,null, true).Count = 0) and (reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|UsedByEntity|Rows|*&quot;,null, true).Count = 0)"><ws /> or</inline><inline condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|UsedByEntity|Rows|*&quot;,null, true).Count = 0)"><ws /> in properties or other assets used by the company</inline>
.</para>
</add-to-body></template>
								</report-template>
								<report-template version="12" name="Own financial instruments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|OwnFinancialInstruments|Rows|*&quot;,null, true).Count &gt; 0" enabled="Conditional" section-name="FRS17PensionScheme4AssetOwnFinancialInstruments" page-break-before="False" keep-with-next-strength="1" template-guid="f61ca7cc-7e81-4cad-b49b-a3521bf44397">
									<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The entity's own financial instruments included in the fair value of scheme assets are as follows:</para>
</add-to-body></template>
									<report-template version="12" name="Own financial instruments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme4AssetOwnFinancialInstrumentsValues" page-break-before="False" keep-with-next-strength="0" template-guid="cdf80d1c-a129-4efa-9e94-0a2325fda06f">
										<template><add-to-body>
  <table condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|OwnFinancialInstruments|Rows|*')[0].HasValue">
    <column-details column-number="1" free-space="100" align="bottom-left" />
    <column-details column-number="2" width="2mm" align="bottom-right" />
    <column-details column-number="3" width="22mm" align="bottom-right" />
    <column-details column-number="4" width="2mm" align="bottom-right" />
    <column-details column-number="5" width="2mm" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
    <column-details column-number="6" width="22mm" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
    <column-details column-number="7" width="2mm" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
    <table-row base-style="Table Column Heading">
      <table-cell>
      </table-cell>
      <table-cell>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data para-alignment="Centre">if reportHelper.IsAnnual then reportHelper.CurrentPeriod.EndDate.Value.ToString('yyyy')

else

reportHelper.CurrentPeriod.EndDate.Value.ToString('d MMMM yyyy')</data>
          <inline para-alignment="Centre">
          </inline>
          <br />
          <data para-alignment="Centre">
					reportHelper.StatutoryNoteScalingHeader
				</data>
          <inline para-alignment="Centre">
          </inline>
        </para>
      </table-cell>
      <table-cell>
      </table-cell>
      <table-cell>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data para-alignment="Centre">if reportHelper.IsAnnual then reportHelper.ComparativePeriod(1).EndDate.Value.ToString('yyyy')

else

reportHelper.ComparativePeriod(1).EndDate.Value.ToString('d MMMM yyyy')</data>
          <inline para-alignment="Centre">
          </inline>
          <br />
          <data para-alignment="Centre">
					reportHelper.StatutoryNoteScalingHeader
				</data>
          <inline para-alignment="Centre">
          </inline>
        </para>
      </table-cell>
    </table-row>
    <table-row-iterator iterate-over="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|OwnFinancialInstruments|Rows|*')" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
      <table-row xbrl-concept="uk-gaap:EntityFinancialInstrumentIncludedInPensionSchemeGrouping" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4">
        <table-cell>
          <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <inline xbrl-concept="uk-gaap:DescriptionEntityFinancialInstrumentIncludedInPensionScheme" xbrl-period="CurrentPeriod">
              <data>reporting.queries.client.lookupaccountingperioddata(item, '*|*|Current Period')[0].Value</data>
            </inline>
          </para>
        </table-cell>
        <table-cell />
        <table-cell>
          <para para-alignment="Left" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <inline xbrl-concept="uk-gaap:FairValueEntityFinancialInstrumentIncludedInPensionScheme" xbrl-period="CurrentPeriod">
              <data base-style="Table Text">reporting.queries.client.lookupaccountingperioddata(item, '*|*|Current Period')[1].Value / reportHelper.StatutoryNoteScaling</data>
            </inline>
          </para>
        </table-cell>
        <table-cell />
        <table-cell />
        <table-cell>
          <para para-alignment="Right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <data base-style="Table Text">reporting.queries.client.lookupaccountingperioddata(item, '*|*|Prior Period')[0].Value / reportHelper.StatutoryNoteScaling</data>
          </para>
        </table-cell>
        <table-cell />
      </table-row>
    </table-row-iterator>
    <table-row>
      <table-cell />
      <table-cell />
      <table-cell bottom-border-style="Doubleline" bottom-border-size="2pt">
      </table-cell>
      <table-cell />
      <table-cell />
      <table-cell bottom-border-style="Doubleline" bottom-border-size="2pt">
      </table-cell>
      <table-cell />
    </table-row>
  </table>
</add-to-body></template>
									</report-template>
								</report-template>
								<report-template version="12" name="Property occupied" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|UsedByEntity|Rows|*&quot;,null, true).Count &gt; 0" enabled="Conditional" section-name="FRS17PensionScheme4AssetPropertyOccupied" page-break-before="False" keep-with-next-strength="1" template-guid="3b0d6356-890f-4e43-9736-f7d899fb981c">
									<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The property occupied by, or other asset used by, the entity included in the fair value of scheme assets are as follows:</para>
</add-to-body></template>
									<report-template version="12" name="Property occupied" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme4AssetPropertyOccupiedValues" page-break-before="False" keep-with-next-strength="0" template-guid="bec6970b-49cb-4ba4-8c91-07ed30fb2ec1">
										<template><add-to-body>
  <table condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[1]|Assets|UsedByEntity|Rows|*')[0].HasValue">
    <column-details column-number="1" free-space="100" align="bottom-left" />
    <column-details column-number="2" width="2mm" align="bottom-right" />
    <column-details column-number="3" width="22mm" align="bottom-right" />
    <column-details column-number="4" width="2mm" align="bottom-right" />
    <column-details column-number="5" width="2mm" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
    <column-details column-number="6" width="22mm" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
    <column-details column-number="7" width="2mm" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
    <table-row base-style="Table Column Heading">
      <table-cell>
      </table-cell>
      <table-cell>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data para-alignment="Centre">if reportHelper.IsAnnual then reportHelper.CurrentPeriod.EndDate.Value.ToString('yyyy')

else

reportHelper.CurrentPeriod.EndDate.Value.ToString('d MMMM yyyy')</data>
          <inline para-alignment="Centre">
          </inline>
          <br />
          <data para-alignment="Centre">
					reportHelper.StatutoryNoteScalingHeader
				</data>
          <inline para-alignment="Centre">
          </inline>
        </para>
      </table-cell>
      <table-cell>
      </table-cell>
      <table-cell>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data para-alignment="Centre">if reportHelper.IsAnnual then reportHelper.ComparativePeriod(1).EndDate.Value.ToString('yyyy')

else

reportHelper.ComparativePeriod(1).EndDate.Value.ToString('d MMMM yyyy')</data>
          <inline para-alignment="Centre">
          </inline>
          <br />
          <data para-alignment="Centre">
					reportHelper.StatutoryNoteScalingHeader
				</data>
          <inline para-alignment="Centre">
          </inline>
        </para>
      </table-cell>
    </table-row>
    <table-row-iterator iterate-over="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|UsedByEntity|Rows|*')" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
      <table-row xbrl-concept="uk-gaap:PropertyInPensionSchemeOccupiedByEntityOrOtherAssetsInSchemeUsedByEntityGrouping" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4">
        <table-cell>
          <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <inline xbrl-concept="uk-gaap:DescriptionPropertyOrOtherAssetIncludedInPensionSchemeWhichUsedByEntity" xbrl-period="CurrentPeriod">
              <data>reporting.queries.client.lookupaccountingperioddata(item, '*|*|Current Period')[0].Value</data>
            </inline>
          </para>
        </table-cell>
        <table-cell />
        <table-cell>
          <para para-alignment="Right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <inline para-alignment="Left" xbrl-concept="uk-gaap:FairValuePropertyOrOtherAssetIncludedInPensionSchemeUsedByEntity" xbrl-period="CurrentPeriod">
              <data base-style="Table Text">reporting.queries.client.lookupaccountingperioddata(item, '*|*|Current Period')[1].Value / reportHelper.StatutoryNoteScaling</data>
              <inline para-alignment="Left">
              </inline>
            </inline>
          </para>
        </table-cell>
        <table-cell />
        <table-cell />
        <table-cell>
          <para para-alignment="Right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <data base-style="Table Text">reporting.queries.client.lookupaccountingperioddata(item, '*|*|Prior Period')[0].Value / reportHelper.StatutoryNoteScaling</data>
          </para>
        </table-cell>
        <table-cell />
      </table-row>
    </table-row-iterator>
    <table-row>
      <table-cell />
      <table-cell />
      <table-cell bottom-border-style="Doubleline" bottom-border-size="2pt">
      </table-cell>
      <table-cell />
      <table-cell />
      <table-cell bottom-border-style="Doubleline" bottom-border-size="2pt">
      </table-cell>
      <table-cell />
    </table-row>
  </table>
</add-to-body></template>
									</report-template>
								</report-template>
								<report-template version="12" name="Basis" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme4AssetBasis" page-break-before="False" keep-with-next-strength="0" template-guid="498aa5a2-3f57-4afc-b62f-9fd9a840ebf3">
									<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|Basis|Current Period")[0].Value</data>
  </para>
</add-to-body></template>
								</report-template>
							</report-template>
							<report-template version="12" name="Liabilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme4Liabilities" page-break-before="False" keep-with-next-strength="1" template-guid="ce611c90-30f2-4bb2-bd34-d4a1c814d9d4">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Scheme liabilities</inline>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Changes in the present value of scheme liabilities are as follows:</para>
</add-to-body></template>
								<report-template version="12" name="Changes in present value" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme4ChangesInPresentValue" page-break-before="False" keep-with-next-strength="0" template-guid="e25c8db8-6351-4123-8c9c-59bba9a69d52">
									<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('Current')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('Prior')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('LiabilityMovement', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Present value at end of &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Present value at start of &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Liabilities|Movement|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:DefinedBenefitObligationPresentValue')" />
    <var name="section1subsection1XBRLDimensionsSet" pre="section1subsection1.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="section1subsection1XBRLHypercubeNameSet" pre="section1subsection1.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection1XBRLPeriodSet" pre="section1subsection1.SetPeriod('Start')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Liabilities|Movement|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:CurrentServiceCostDefinedBenefitScheme')" />
    <var name="section1subsection2XBRLDimensionsSet" pre="section1subsection2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="section1subsection2XBRLHypercubeNameSet" pre="section1subsection2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection2XBRLPeriodSet" pre="section1subsection2.SetPeriod('Duration')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Past service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Liabilities|Movement|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:PastServiceCostDefinedBenefitScheme')" />
    <var name="section1subsection3XBRLDimensionsSet" pre="section1subsection3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="section1subsection3XBRLHypercubeNameSet" pre="section1subsection3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection3XBRLPeriodSet" pre="section1subsection3.SetPeriod('Duration')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Actuarial gains and losses&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Liabilities|Movement|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:ActuarialGainLossOnLiabilitiesDefinedBenefitScheme')" />
    <var name="section1subsection4XBRLPeriodSet" pre="section1subsection4.SetPeriod('Duration')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Foreign exchange differences&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Liabilities|Movement|Rows|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:IncreaseDecreaseInLiabilitiesDefinedBenefitSchemeFromForeignExchangeDifferences')" />
    <var name="section1subsection5XBRLDimensionsSet" pre="section1subsection5.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="section1subsection5XBRLHypercubeNameSet" pre="section1subsection5.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection5XBRLPeriodSet" pre="section1subsection5.SetPeriod('Duration')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Interest cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Liabilities|Movement|Rows|*:item[5]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:ExpenseIncomeFromInterestCostDefinedBenefitScheme')" />
    <var name="section1subsection6XBRLDimensionsSet" pre="section1subsection6.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="section1subsection6XBRLHypercubeNameSet" pre="section1subsection6.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection6XBRLPeriodSet" pre="section1subsection6.SetPeriod('Duration')" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Benefits paid&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Liabilities|Movement|Rows|*:item[6]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:BenefitsPaidRelatedToDefinedBenefitScheme')" />
    <var name="section1subsection7XBRLDimensionsSet" pre="section1subsection7.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="section1subsection7XBRLHypercubeNameSet" pre="section1subsection7.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection7XBRLPeriodSet" pre="section1subsection7.SetPeriod('Duration')" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Contributions by scheme participants&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Liabilities|Movement|Rows|*:item[7]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
    <var name="section1subsection8XBRLConceptNameSet" pre="section1subsection8.SetConceptName('uk-gaap:ContributionsByDefinedBenefitSchemeParticipants')" />
    <var name="section1subsection8XBRLDimensionsSet" pre="section1subsection8.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="section1subsection8XBRLHypercubeNameSet" pre="section1subsection8.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection8XBRLPeriodSet" pre="section1subsection8.SetPeriod('Duration')" />
    <var name="section1subsection8XBRLReverseSignSet" pre="section1subsection8.SetReverseSign(true)" />
    <var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
    <var name="section1subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Liabilities assumed in business combinations&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Liabilities|Movement|Rows|*:item[8]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection9subsectionitem1add" pre="section1subsection9.AddItem(section1subsection9subsectionitem1)" />
    <var name="section1subsection9XBRLConceptNameSet" pre="section1subsection9.SetConceptName('uk-gaap:IncreaseDecreaseInLiabilitiesDefinedBenefitSchemeFromBusinessCombinations')" />
    <var name="section1subsection9XBRLDimensionsSet" pre="section1subsection9.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="section1subsection9XBRLHypercubeNameSet" pre="section1subsection9.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection9XBRLPeriodSet" pre="section1subsection9.SetPeriod('Duration')" />
    <var name="section1subsection9add" pre="section1.AddItem(section1subsection9)" />
    <var name="section1subsection10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Liabilities extinguished on settlements&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection10subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Liabilities|Movement|Rows|*:item[9]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection10subsectionitem1add" pre="section1subsection10.AddItem(section1subsection10subsectionitem1)" />
    <var name="section1subsection10XBRLConceptNameSet" pre="section1subsection10.SetConceptName('uk-gaap:IncreaseDecreaseInLiabilitiesDefinedBenefitSchemeFromSettlements')" />
    <var name="section1subsection10XBRLDimensionsSet" pre="section1subsection10.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="section1subsection10XBRLHypercubeNameSet" pre="section1subsection10.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection10XBRLPeriodSet" pre="section1subsection10.SetPeriod('Duration')" />
    <var name="section1subsection10add" pre="section1.AddItem(section1subsection10)" />
    <var name="section1subsection11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Effect of curtailments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection11subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Liabilities|Movement|Rows|*:item[10]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection11subsectionitem1add" pre="section1subsection11.AddItem(section1subsection11subsectionitem1)" />
    <var name="section1subsection11XBRLConceptNameSet" pre="section1subsection11.SetConceptName('uk-gaap:IncreaseDecreaseInLiabilitiesDefinedBenefitSchemeFromCurtailments')" />
    <var name="section1subsection11XBRLDimensionsSet" pre="section1subsection11.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="section1subsection11XBRLHypercubeNameSet" pre="section1subsection11.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection11XBRLPeriodSet" pre="section1subsection11.SetPeriod('Duration')" />
    <var name="section1subsection11add" pre="section1.AddItem(section1subsection11)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:DefinedBenefitObligationPresentValue')" />
    <var name="section1XBRLDimensionsSet" pre="section1.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="section1XBRLHypercubeNameSet" pre="section1.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1XBRLPeriodSet" pre="section1.SetPeriod('End')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('UnfundedFundedLiabilities', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Analysed as:&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Present value arising from unfunded schemes&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Liabilities|UnfundedPresentValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:DefinedBenefitObligationFromSchemesThatAreWhollyUnfundedPresentValue')" />
    <var name="section2subsection1XBRLDimensionsSet" pre="section2subsection1.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="section2subsection1XBRLHypercubeNameSet" pre="section2subsection1.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section2subsection1XBRLPeriodSet" pre="section2subsection1.SetPeriod('End')" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Present value arising from wholly or partly funded schemes&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Liabilities|FundedPresentValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2XBRLConceptNameSet" pre="section2subsection2.SetConceptName('uk-gaap:DefinedBenefitObligationFromSchemesThatAreWhollyOrPartlyFundedPresentValue')" />
    <var name="section2subsection2XBRLDimensionsSet" pre="section2subsection2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="section2subsection2XBRLHypercubeNameSet" pre="section2subsection2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section2subsection2XBRLPeriodSet" pre="section2subsection2.SetPeriod('End')" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2XBRLConceptNameSet" pre="section2.SetConceptName('uk-gaap:DefinedBenefitObligationPresentValue')" />
    <var name="section2XBRLPeriodSet" pre="section2.SetPeriod('End')" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
								</report-template>
							</report-template>
						</report-template>
						<report-template version="12" name="Principal actuarial assumptions" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme4Assumptions" page-break-before="False" keep-with-next-strength="1" template-guid="a702bc5d-9696-4286-a97f-f572c1f2d073">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Principal actuarial assumpions</inline>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The principal actuarial assumpions at the balance sheet date are as follows:</para>
</add-to-body></template>
							<report-template version="12" name="Principal actuarial assumptions" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme4AssumptionsValues" page-break-before="False" keep-with-next-strength="0" template-guid="276dafa5-0cc1-40a9-91f7-6ec81af5a071">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Table Text Percentage')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Table Text Percentage')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Table Text Percentage')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Table Text Percentage Final Value')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;%&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;%&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ActuarialAssumptions', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Discount rate&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assumptions|ActuarialAssumptions|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:RateUsedToDiscountSchemeLiabilities')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Future salary increases&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assumptions|ActuarialAssumptions|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:AssumedRateIncreasePensionableSalaries')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Future pension increases&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|PensionSchemes|*:item[3]|Assumptions|ActuarialAssumptions|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:AssumedRateIncreasePensionsInPaymentDeferredPensions')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Inflation&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assumptions|ActuarialAssumptions|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:AssumedRateInflation')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Proportion of employees opting for early retirement&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assumptions|ActuarialAssumptions|Rows|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
    <var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:AssumedProportionEmployeesOptingForEarlyRetirement')" />
    <var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
    <var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expected return on scheme assets - equity&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assumptions|ActuarialAssumptions|Rows|*:item[5]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
    <var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:EquitiesHeldInPensionSchemeExpectedRateReturn')" />
    <var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
    <var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expected return on scheme assets - cash&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assumptions|ActuarialAssumptions|Rows|*:item[6]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
    <var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:CashHeldInPensionSchemeExpectedRateReturn')" />
    <var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
    <var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expected return on scheme assets - property&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assumptions|ActuarialAssumptions|Rows|*:item[7]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
    <var name="section1subsection8XBRLConceptNameSet" pre="section1subsection8.SetConceptName('uk-gaap:PropertyHeldInPensionSchemeExpectedRateReturn')" />
    <var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
    <var name="section1subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expected return on scheme assets - other&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assumptions|ActuarialAssumptions|Rows|*:item[8]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection9subsectionitem1add" pre="section1subsection9.AddItem(section1subsection9subsectionitem1)" />
    <var name="section1subsection9XBRLConceptNameSet" pre="section1subsection9.SetConceptName('uk-gaap:ExpectedRateReturnOnTypeOtherAssetHeldInPensionScheme')" />
    <var name="section1subsection9add" pre="section1.AddItem(section1subsection9)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Mortality" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme4Mortality" page-break-before="False" keep-with-next-strength="0" template-guid="1188ccf5-e1f1-4794-a733-9456fdbe1aa3">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Post retirement mortality assumptions</inline>
  </para>
</add-to-body></template>
								<report-template version="12" name="Mortality" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme4MortalityValues" page-break-before="False" keep-with-next-strength="0" template-guid="3f9fd613-f91f-4e30-9319-42a05260a3e6">
									<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'MyFirstTable', 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Table Text Percentage')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Table Text Percentage')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Table Text Percentage')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Table Text Percentage')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Table Text Percentage Final Value')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;Years&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;Years&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Mortality', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current pensioners at retirement age - male&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assumptions|MortalityRates|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:LongevityInYearsRetirementForCurrentUKPensionersMen')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current pensioners at retirement age - female&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assumptions|MortalityRates|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:LongevityInYearsRetirementForCurrentUKPensionersWomen')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Future pensioners at retirement age - male&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assumptions|MortalityRates|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:LongevityInYearsRetirementForFutureUKPensionersMen')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Future pensioners at retirement age - female&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assumptions|MortalityRates|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:LongevityInYearsRetirementForFutureUKPensionersWomen')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
								</report-template>
							</report-template>
						</report-template>
						<report-template version="12" name="Amounts recognised in profit and loss" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme4ProfitAndLoss" page-break-before="False" keep-with-next-strength="1" template-guid="d1764614-780c-4aef-92c0-5aeaf1120fbd">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Amounts recognised in the profit and loss account</inline>
  </para>
</add-to-body></template>
							<report-template version="12" name="Amounts recognised in operating profit" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme4OperatingProfitValues" page-break-before="False" keep-with-next-strength="0" template-guid="997585bc-e872-4dbc-8427-f255e9270216">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('RecognisedInOperatingProfitLoss', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Amounts recognised in &lt;ws/&gt;&lt;data&gt;reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(1m,1m).ComparativesUnfiltered.AllCategoriesRoot,&amp;apos;OpProfit&amp;apos;).Description.ToLower()&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Recognised in arriving at operating &lt;ws/&gt;&lt;data&gt;reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(1m,1m).ComparativesUnfiltered.AllCategoriesRoot,&amp;apos;OpProfit&amp;apos;).Description.ToLower()&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:CurrentServiceCostDefinedBenefitScheme')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Past service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:PastServiceCostDefinedBenefitScheme')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Effect of FRS 17 paragraph 41&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:IncomeExpenseFromAmountsNotRecognisedAsAnAssetBecauseIAS58bLimit')" />
    <var name="section1subsection3XBRLDimensionsSet" pre="section1subsection3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="section1subsection3XBRLHypercubeNameSet" pre="section1subsection3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection3XBRLReverseSignSet" pre="section1subsection3.SetReverseSign(true)" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Losses (gains) on curtailments and settlements&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:ExpenseIncomeFromDefinedBenefitSchemeSettlementsCurtailments')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:ChargeCreditToOperatingProfitFromDefinedBenefitScheme')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('RecognisedInFinance', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Amounts recognised in other finance &lt;ws/&gt;&lt;inline condition=&quot;(reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[0].Value &amp;lt; 0&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[1].Value &amp;lt; 0)&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;(reportHelper.HasPriorPeriod=false and&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[0].Value &amp;lt; 0)&#xD;&#xA;&quot;&gt;income&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;(reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[0].Value &amp;gt;= 0&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[1].Value &amp;gt;= 0)&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;(reportHelper.HasPriorPeriod=false and&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[0].Value &amp;gt;= 0)&#xD;&#xA;&quot;&gt;&lt;ws/&gt; cost&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[0].Value &amp;lt; 0&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[1].Value &amp;gt;= 0&#xD;&#xA;&quot;&gt;&lt;ws/&gt; (income)/cost&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[0].Value &amp;gt;= 0&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode(&amp;apos;462&amp;apos;).Totals[1].Value &amp;lt; 0&#xD;&#xA;&quot;&gt;&lt;ws/&gt; cost/(income)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Recognised in other finance cost&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Interest&lt;inline condition=&quot;(reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Current Period&amp;quot;)[0].Value &amp;lt;0 and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Prior Period&amp;quot;)[0].Value &amp;lt;0)&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;(reportHelper.HasPriorPeriod=false and&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Current Period&amp;quot;)[0].Value &amp;lt; 0)&#xD;&#xA;&#xD;&#xA;&quot;&gt;&lt;ws/&gt; income&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;(reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Current Period&amp;quot;)[0].Value &amp;gt;=0 and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Prior Period&amp;quot;)[0].Value &amp;gt;=0)&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;(reportHelper.HasPriorPeriod=false and&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Current Period&amp;quot;)[0].Value &amp;gt;= 0)&#xD;&#xA;&#xD;&#xA;&quot;&gt;&lt;ws/&gt; cost&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Current Period&amp;quot;)[0].Value &amp;lt;0 and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Prior Period&amp;quot;)[0].Value &amp;gt;=0&#xD;&#xA;&#xD;&#xA;&quot;&gt;&lt;ws/&gt; (income)/cost&lt;/inline&gt;&#xD;&#xA;&lt;inline condition=&quot;reportHelper.HasPriorPeriod&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Current Period&amp;quot;)[0].Value &amp;gt;=0 and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&amp;quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]|Amount|Prior Period&amp;quot;)[0].Value &amp;lt;0&#xD;&#xA;&quot;&gt;&lt;ws/&gt; cost/(income)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:ExpenseIncomeFromInterestCostDefinedBenefitScheme')" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Expected return on scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|ProfitAndLoss|RecognisedInFinanceCosts|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2XBRLConceptNameSet" pre="section2subsection2.SetConceptName('uk-gaap:ExpenseIncomeFromExpectedReturnOnAssetsDefinedBenefitScheme')" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2XBRLConceptNameSet" pre="section2.SetConceptName('uk-gaap:ChargeCreditToFinanceChargesFromDefinedBenefitScheme')" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('RecognisedInProfitAndLoss', '&lt;para&gt;Total recognised in the profit and loss account&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.Always, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section3item1" pre="section3.AddTotalItem(section1)" />
    <var name="section3item2" pre="section3.AddTotalItem(section2)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:PensionCostsDefinedBenefitScheme')" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
						</report-template>
						<report-template version="12" name="Amounts recognised in the STRGL" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme4STRGL" page-break-before="False" keep-with-next-strength="1" template-guid="7547bccb-7bc6-47ab-b9bb-f199dae7dd9e">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">Amounts recognised in the statement of total recognised gains and losses</inline>
  </para>
</add-to-body></template>
							<report-template version="12" name="Amounts recognised in the STRGL" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme4STRGLValues" page-break-before="False" keep-with-next-strength="0" template-guid="faa7d1a2-ceac-4579-b72f-5fbfbf9276c2">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Section1', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Actuarial gains and losses recognised in the Statement of Total Recognised Gains and Losses&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Actual return less expected return on scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|STRGL|STRGLAmounts|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:ExperienceGainLossArisingOnAssetsDefinedBenefitScheme')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Effect of FRS 17 paragraph 41&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|STRGL|STRGLAmounts|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:GainLossFromImpactFRS17.41LimitRecognisedInStatementTotalRecognisedGainsLosses')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Changes in assumptions&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|STRGL|STRGLAmounts|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:GainLossFromChangesInAssumptionsUnderlyingPresentValueDefinedBenefitSchemeLiabilities')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other actuarial gains (losses)&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|STRGL|STRGLAmounts|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:ActuarialGainLossOnDefinedBenefitSchemeRecognisedInStatementTotalRecognisedGainsLosses')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Cumulative amount of actuarial gains and losses" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme4STRGLSumulativeAmount" page-break-before="False" keep-with-next-strength="0" template-guid="9d425464-3d2a-4c74-be1e-2d953e19e56e">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The cumulative amount of actuarial gains and losses recognised in the statement of total recognised gains and (losses) since 1 January 2002 is <ws /><inline xbrl-concept="uk-gaap:CumulativeActuarialGainLossOnDefinedBenefitSchemeRecognisedInStatementTotalRecognisedGainsLosses" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|STRGL|STRGL|Current Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|STRGL|STRGLAmounts|Columns|Amount|*:item[0]|Current Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|STRGL|STRGLAmounts|Columns|Amount|*:item[1]|Current Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|STRGL|STRGLAmounts|Columns|Amount|*:item[2]|Current Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|STRGL|STRGLAmounts|Columns|Amount|*:item[3]|Current Period")[0].Value+

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|STRGL|STRGLAmounts|Columns|Amount|*:item[0]|Prior Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|STRGL|STRGLAmounts|Columns|Amount|*:item[1]|Prior Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|STRGL|STRGLAmounts|Columns|Amount|*:item[2]|Prior Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|STRGL|STRGLAmounts|Columns|Amount|*:item[3]|Prior Period")[0].Value</data></inline><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.PriorPeriod.EndDate.Value.Year</data><ws /> - <ws /><inline xbrl-concept="uk-gaap:CumulativeActuarialGainLossOnDefinedBenefitSchemeRecognisedInStatementTotalRecognisedGainsLosses" xbrl-period="PriorPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|STRGL|STRGL|Current Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|STRGL|STRGLAmounts|Columns|Amount|*:item[0]|Prior Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|STRGL|STRGLAmounts|Columns|Amount|*:item[1]|Prior Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|STRGL|STRGLAmounts|Columns|Amount|*:item[2]|Prior Period")[0].Value +

reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|STRGL|STRGLAmounts|Columns|Amount|*:item[3]|Prior Period")[0].Value</data></inline>
)</inline>
.</para>
</add-to-body></template>
							</report-template>
						</report-template>
						<report-template version="12" name="History of experience adjustments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme4History" page-break-before="False" keep-with-next-strength="1" template-guid="5026a707-c1d9-4fcc-b4ea-097a09ceac45">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline base-style="Title" font-style="+italic">History of experience adjustments on scheme assets and liabilities</inline>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Amounts for the current<inline condition="((reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|FairValue|Columns|Amount|*:item[0]|*:filter[&gt;0]&quot; ,null, true).Count)-1)&lt;1"><ws /> period</inline><inline condition="((reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|FairValue|Columns|Amount|*:item[0]|*:filter[&gt;0]&quot; ,null, true).Count)-1)=1"><ws /> and previous period</inline><inline condition="((reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|FairValue|Columns|Amount|*:item[0]|*:filter[&gt;0]&quot; ,null, true).Count)-1)&gt;1"><ws /> and previous <ws /><data>(reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|FairValue|Columns|Amount|*:item[0]|*:filter[&gt;0]" ,null, true).Count)-1</data><ws /> periods</inline><ws /> are as follows:</para>
</add-to-body></template>
							<report-template version="12" name="History of experience adjustments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRS17PensionScheme4HistoryValues" page-break-before="False" keep-with-next-strength="0" template-guid="faea3aa1-34a0-4eaf-a4c1-5b58fec6eb60">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4filter1" pre="newComputation.GetDateFilter(-2, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod2', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column4filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <var name="column5filter1" pre="newComputation.GetDateFilter(-3, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod3', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column5filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column5add" pre="smartTable.AddColumn(column5)" />
    <var name="column6filter1" pre="newComputation.GetDateFilter(-4, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod4', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column6filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column6add" pre="smartTable.AddColumn(column6)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('HistoryOfExperience', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;quot;surplus/(deficit)&amp;quot;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; in scheme&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Fair value of scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Assets|FairValue|Rows|*', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:FairValueAssetsDefinedBenefitScheme')" />
    <var name="section1subsection1XBRLDimensionsSet" pre="section1subsection1.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="section1subsection1XBRLHypercubeNameSet" pre="section1subsection1.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Present value of scheme liabilities&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|Liabilities|PresentValue|Rows|*', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:DefinedBenefitObligationPresentValue')" />
    <var name="section1subsection2XBRLDimensionsSet" pre="section1subsection2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="section1subsection2XBRLHypercubeNameSet" pre="section1subsection2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="section1subsection2XBRLReverseSignSet" pre="section1subsection2.SetReverseSign(true)" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
    <var name="section1XBRLReverseSignSet" pre="section1.SetReverseSign(true)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Experience values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRS17PensionScheme4ExperienceValues" page-break-before="False" keep-with-next-strength="0" template-guid="3c2894f3-fc74-4040-bf86-b729e231e834">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Experience adjustments:</para>
</add-to-body></template>
								<report-template version="12" name="Experience expressed as an amount" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|ExperienceAdjustments|DisclosedBy|Current Period&quot;)[0].Value = 'Amount'" enabled="Conditional" section-name="FRS17PensionScheme4Experience£" page-break-before="False" keep-with-next-strength="0" template-guid="4d0b28a5-2778-475d-a128-b6dd0589f162">
									<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Grand Total')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Grand Total')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Grand Total')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Grand Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Grand Total')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Grand Total')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Grand Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Grand Total')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Grand Total')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4filter1" pre="newComputation.GetDateFilter(-2, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod2', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column4filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <var name="column5filter1" pre="newComputation.GetDateFilter(-3, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod3', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column5filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column5add" pre="smartTable.AddColumn(column5)" />
    <var name="column6filter1" pre="newComputation.GetDateFilter(-4, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod4', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column6filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column6add" pre="smartTable.AddColumn(column6)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ExperienceAmount', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Experience adjustments arising on scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|ExperienceAdjustments|ExperienceAdjustments|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:ExperienceGainLossArisingOnAssetsDefinedBenefitScheme')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Experience adjustments arising on scheme liabilities&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|ExperienceAdjustments|ExperienceAdjustments|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:ExperienceGainLossArisingOnLiabilitiesDefinedBenefitScheme')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
								</report-template>
								<report-template version="12" name="Experience expressed as a percentage" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|ExperienceAdjustments|DisclosedBy|Current Period&quot;)[0].Value = '%'" enabled="Conditional" section-name="FRS17PensionScheme4Experience%" page-break-before="False" keep-with-next-strength="0" template-guid="dad57d5b-170e-46da-8ec9-0478d1c601bf">
									<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'MyFirstTable', 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, 1.0, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.Specified, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Grand Total')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Grand Total')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Grand Total')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Grand Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Grand Total')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Grand Total')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Grand Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Grand Total')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Grand Total')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;%&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;%&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <var name="column4filter1" pre="newComputation.GetDateFilter(-2, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod2', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column4filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;%&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column4XBRLDimensionsSet" pre="column4.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column4XBRLHypercubeNameSet" pre="column4.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column4add" pre="smartTable.AddColumn(column4)" />
    <var name="column5filter1" pre="newComputation.GetDateFilter(-3, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod3', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column5filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;%&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column5add" pre="smartTable.AddColumn(column5)" />
    <var name="column6filter1" pre="newComputation.GetDateFilter(-4, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod4', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column6filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;%&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column6XBRLDimensionsSet" pre="column6.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column6XBRLHypercubeNameSet" pre="column6.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column6add" pre="smartTable.AddColumn(column6)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ExperiencePercent', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Experience adjustments arising on scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|ExperienceAdjustments|ExperienceAdjustments|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:ExperienceGainLossArisingOnAssetsDefinedBenefitSchemeAsPercentageSchemeAssets')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Experience adjustments arising on scheme liabilities&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|ExperienceAdjustments|ExperienceAdjustments|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:ExperienceGainLossArisingOnLiabilitiesDefinedBenefitSchemeAsPercentageSchemeLiabilities')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
								</report-template>
							</report-template>
						</report-template>
						<report-template version="12" name="Restatement of comparatives" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRS17Pensions|Pensionschemes|*:item[3]|ExperienceAdjustments|ComparativesRestated|Current Period&quot;)[0].Value =true" enabled="Conditional" section-name="FRS17PensionScheme4RestatedComparatives" page-break-before="False" keep-with-next-strength="0" template-guid="db538e1d-3540-41f5-8b10-729aff7a8c2b">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:StatementThatEntityHasChosenNotToRestateValuesForPastYearsInAccordanceWithFRS17.95C" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4" xbrl-invert-sign="True">Comparative figures have not been restated as permitted by FRS 17.</para>
</add-to-body></template>
						</report-template>
					</report-template>
					<report-template version="12" name="FRSSE Pension scheme 4" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCode('908').HasTransactions and FRSSE = true" enabled="Conditional" section-name="FRSSEPensionScheme4" page-break-before="False" keep-with-next-strength="0" template-guid="ee636e14-c9dd-4011-a6b0-5d6c570a1a34">
						<template><add-to-body>
</add-to-body></template>
						<report-template version="12" name="Details of scheme" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRSSEPensionScheme4Details" page-break-before="False" keep-with-next-strength="1" template-guid="60f6d903-d0c6-49f1-8bec-72133048447e">
							<template><add-to-body>
  <para para-alignment="Full" base-style="Title" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:NameDefinedBenefitScheme" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SchemeDetails|Name|Current Period")[0].Value</data>
  </para>
</add-to-body></template>
							<report-template version="12" name="Description and valuation" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRSSEPensionScheme4DescriptionAnd Valuation" page-break-before="False" keep-with-next-strength="0" template-guid="df34bf10-04da-4c27-a8e2-750bfa34871a">
								<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:DescriptionDefinedBenefitScheme" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SchemeDetails|Description|Current Period")[0].Value</data>
  </para>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The most recent valuation was at <ws /><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SchemeDetails|Date|Current Period")[0].Value</data><ws /> which has been updated to reflect conditions at the balance sheet date. <ws /><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SchemeDetails|Details|Current Period")[0].Value</data><ws /><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SchemeDetails|ActuaryEmployee|Current Period&quot;)[0].Value =true or &#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SchemeDetails|ActuaryOfficer|Current Period&quot;)[0].Value =true">The actuary is an <ws /><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SchemeDetails|ActuaryEmployee|Current Period&quot;)[0].Value =true">employee <ws /></inline><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SchemeDetails|ActuaryEmployee|Current Period&quot;)[0].Value =true and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SchemeDetails|ActuaryOfficer|Current Period&quot;)[0].Value =true"><ws /> and <ws /></inline><inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SchemeDetails|ActuaryOfficer|Current Period&quot;)[0].Value =true">officer <ws /></inline>
of the company.</inline><ws /></para>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Contributions expressed as an amount" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SchemeDetails|DisclosedBy|Current Period&quot;)[0].Value = 'Amount'" enabled="Conditional" section-name="FRSSEPensionScheme4Contributions£" page-break-before="False" keep-with-next-strength="0" template-guid="6564f5af-b4be-4aed-bf6f-4c91a259cb7d">
								<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
                      The contributions of the company were <ws /><inline xbrl-concept="uk-gaap:ContributionsToDefinedBenefitSchemeByEmployer" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4" xbrl-scaling="0"><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SchemeDetails|ContributionRates|Rows|*:item[0]|Current|Current Period")[0].Value</data></inline>
                      . <ws /><inline xbrl-concept="uk-gaap:StatementOnExpectedFutureContributionsToDefinedBenefitSchemeByEmployerDuringFollowingYear" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4">
                        Future contributions in the next year are expected to be <ws /><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SchemeDetails|ContributionRates|Rows|*:item[0]|Future|Current Period")[0].Value</data>
                        .
                      </inline></para>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Contributions expressed as a percentage" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SchemeDetails|DisclosedBy|Current Period&quot;)[0].Value = '%'" enabled="Conditional" section-name="FRSSEPensionScheme4Contributions%" page-break-before="False" keep-with-next-strength="0" template-guid="f56204b0-122d-4d51-b5f1-f31fd0bb408b">
								<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
                      The contributions of the company were <ws /><inline xbrl-concept="uk-gaap:NetContributionRateForLatestPeriodAsPercentagePensionableEarnings" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4"><data base-style="Percentage">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SchemeDetails|ContributionRates|Rows|*:item[0]|Current|Current Period")[0].Value</data></inline><ws /> of pensionable earnings. <ws /><inline xbrl-concept="uk-gaap:StatementOnExpectedFutureContributionsToDefinedBenefitSchemeByEmployerDuringFollowingYear" xbrl-period="CurrentPeriod" xbrl-hypercube="uk-gaap:PensionSchemesHypercube" xbrl-dimensions="uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4">
                        Future contributions in the next year are expected to be <ws /><data base-style="Percentage">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SchemeDetails|ContributionRates|Rows|*:item[0]|Future|Current Period")[0].Value</data><inline base-style="Percentage"><ws /> of pensionable earnings
                        </inline></inline>
                      .
                    </para>
</add-to-body></template>
							</report-template>
							<report-template version="12" name="Service costs expected to increase" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Conditional" section-name="FRSSEPensionScheme4CostIncrease" page-break-before="False" keep-with-next-strength="0" template-guid="c8f25f38-6381-4cd2-8215-cc7699725d7f">
								<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SchemeDetails|SchemeClosed|Current Period&quot;)[0].Value = true&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SchemeDetails|AgeProfileRising|Current Period&quot;)[0].Value = false">The defined benefit scheme is now closed to new members so under the projected unit method the current service cost would be expected to increase over time as members of the scheme approach retirement.</inline>
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SchemeDetails|AgeProfileRising|Current Period&quot;)[0].Value = true&#xD;&#xA;&#xD;&#xA;and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SchemeDetails|SchemeClosed|Current Period&quot;)[0].Value = false">The age profile of active members is rising significantly so under the projected unit method the current service cost would be expected to increase over time as new members of the scheme approach retirement.</inline>
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SchemeDetails|SchemeClosed|Current Period&quot;)[0].Value = true and&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SchemeDetails|AgeProfileRising|Current Period&quot;)[0].Value = true">The defined benefit scheme is now closed to new members and the age profile of active members is rising significantly so under the projected unit method the current service cost would be expected to increase over time as new members of the scheme approach retirement.</inline>
  </para>
</add-to-body></template>
							</report-template>
						</report-template>
						<report-template version="12" name="Scheme assets and liabilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRSSEPensionScheme4AssetsAndLiabilities" page-break-before="False" keep-with-next-strength="1" template-guid="d4d07f2e-33c0-4fcf-8807-3bfc46d456ee">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">The amounts recognised in the balance sheet are as follows:</para>
</add-to-body></template>
							<report-template version="12" name="Scheme assets and liabilities" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Conditional" section-name="FRSSEPensionScheme4AssetsLiabilitiesValues" page-break-before="False" keep-with-next-strength="0" template-guid="ec73c4ab-4f15-4a93-9cbd-e3feb3a15f6f">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;/para&gt;', '&lt;para&gt;&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ActuariaFairlValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Fair value of scheme assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|AssetsAndLiabilities|Calculation|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:FairValueAssetsDefinedBenefitScheme')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ActuariaPresentlValue', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Present value of scheme liabilities&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|AssetsAndLiabilities|Calculation|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:DefinedBenefitObligationPresentValue')" />
    <var name="section2subsection1XBRLReverseSignSet" pre="section2subsection1.SetReverseSign(true)" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('ActuarialValue', '&lt;para&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section3item1" pre="section3.AddTotalItem(section1)" />
    <var name="section3item2" pre="section3.AddTotalItem(section2)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
    <var name="section3XBRLReverseSignSet" pre="section3.SetReverseSign(true)" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <var name="section4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ReconcilingItems', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section4subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Unrecognised past service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|AssetsAndLiabilities|Reconciliation|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection1subsectionitem1add" pre="section4subsection1.AddItem(section4subsection1subsectionitem1)" />
    <var name="section4subsection1XBRLConceptNameSet" pre="section4subsection1.SetConceptName('uk-gaap:PastServiceCostNotRecognisedInBalanceSheet')" />
    <var name="section4subsection1add" pre="section4.AddItem(section4subsection1)" />
    <var name="section4subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Amounts not recognised as an asset under FRS 17 paragraph 41&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|AssetsAndLiabilities|Reconciliation|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection2subsectionitem1add" pre="section4subsection2.AddItem(section4subsection2subsectionitem1)" />
    <var name="section4subsection2XBRLConceptNameSet" pre="section4subsection2.SetConceptName('uk-gaap:AmountNotRecognisedAsAnAssetBecauseIAS58bLimit')" />
    <var name="section4subsection2XBRLReverseSignSet" pre="section4subsection2.SetReverseSign(true)" />
    <var name="section4subsection2add" pre="section4.AddItem(section4subsection2)" />
    <var name="section4subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other amounts recognised in the balance sheet&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|AssetsAndLiabilities|Reconciliation|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection3subsectionitem1add" pre="section4subsection3.AddItem(section4subsection3subsectionitem1)" />
    <var name="section4subsection3XBRLConceptNameSet" pre="section4subsection3.SetConceptName('uk-gaap:OtherAssetsLiabilitiesRelatedToDefinedBenefitSchemeRecognisedInBalanceSheet')" />
    <var name="section4subsection3add" pre="section4.AddItem(section4subsection3)" />
    <var name="section4subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other amounts not recognised in the balance sheet&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|AssetsAndLiabilities|Reconciliation|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection4subsectionitem1add" pre="section4subsection4.AddItem(section4subsection4subsectionitem1)" />
    <var name="section4subsection4add" pre="section4.AddItem(section4subsection4)" />
    <var name="section4add" pre="smartTable.AddTableBlock(section4)" />
    <var name="section5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('SurplusDeficit', '&lt;para&gt;Defined benefit pension scheme &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;surplus/(deficit)&amp;quot;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section5item1" pre="section5.AddTotalItem(section3)" />
    <var name="section5item2" pre="section5.AddTotalItem(section4)" />
    <var name="section5XBRLConceptNameSet" pre="section5.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
    <var name="section5XBRLReverseSignSet" pre="section5.SetReverseSign(true)" />
    <var name="section5add" pre="smartTable.AddTableBlock(section5)" />
    <var name="section6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('RelatedDeferredTax', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Related deferred tax &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;asset/(liability)&amp;quot;)&lt;/data&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section6subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Deferred tax on pension &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;asset/(liability)&amp;quot;)&lt;/data&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section6subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('905.80', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem1add" pre="section6subsection1.AddItem(section6subsection1subsectionitem1)" />
    <var name="section6subsection1add" pre="section6.AddItem(section6subsection1)" />
    <var name="section6XBRLConceptNameSet" pre="section6.SetConceptName('uk-gaap:DeferredTaxLiabilityAssetRelatedToDefinedBenefitScheme')" />
    <var name="section6XBRLReverseSignSet" pre="section6.SetReverseSign(true)" />
    <var name="section6add" pre="smartTable.AddTableBlock(section6)" />
    <var name="section7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('NetAssetLiability', '&lt;para&gt;Net &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;asset/(liability)&amp;quot;)&lt;/data&gt;&lt;ws/&gt; in the balance sheet&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '')" />
    <var name="section7item1" pre="section7.AddTotalItem(section5)" />
    <var name="section7item2" pre="section7.AddTotalItem(section6)" />
    <var name="section7XBRLConceptNameSet" pre="section7.SetConceptName('uk-gaap:RetirementBenefitObligationsSurplus')" />
    <var name="section7XBRLReverseSignSet" pre="section7.SetReverseSign(true)" />
    <var name="section7add" pre="smartTable.AddTableBlock(section7)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
						</report-template>
						<report-template version="12" name="Surplus (deficit)" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRSSEPensionScheme4SurplusDeficit" page-break-before="False" keep-with-next-strength="1" template-guid="01b49571-abce-463b-8f41-671f5df50728">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">Changes in the pension scheme surplus (deficit) are as follows:</para>
</add-to-body></template>
							<report-template version="12" name="Surplus (deficit)" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRSSEPensionScheme4SurplusDeficitValues" page-break-before="False" keep-with-next-strength="0" template-guid="4e71f319-ed83-43d2-a42b-85acd9d485d7">
								<template><add-to-body>
	<section width="100%">
		<!-- Setup the Computation and SmartTable -->
		<var name="currentPeriod" pre="reporting.CurrentPeriod" />
		<var name="newComputation" pre="reporting.NewComputation" />
		<var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
		<var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
		<var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
		<var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
		<var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
		<var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
		<var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
		<var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
		<var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
		<var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
		<var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
		<!-- Add the columns -->
		<var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
		<var name="column1add" pre="smartTable.AddColumn(column1)" />
		<var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
		<var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
		<var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
		<var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
		<var name="column2XBRLPeriodSet" pre="column2.SetPeriod('Current')" />
		<var name="column2add" pre="smartTable.AddColumn(column2)" />
		<var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
		<var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
		<var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
		<var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
		<var name="column3XBRLPeriodSet" pre="column3.SetPeriod('Prior')" />
		<var name="column3add" pre="smartTable.AddColumn(column3)" />
		<!-- Add the sections and rows -->
		<var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('SurplusDeficit', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Pension scheme &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;surplus (deficit)&amp;quot;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; at end of &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
		<var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Pension scheme &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;quot;surplus (deficit)&amp;quot;)&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; at start of &lt;ws/&gt;&lt;data&gt;reportHelper.CurrentPeriod.YearPeriod&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SurplusDeficit|Movement|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
		<var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
		<var name="section1subsection1XBRLDimensionsSet" pre="section1subsection1.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
		<var name="section1subsection1XBRLHypercubeNameSet" pre="section1subsection1.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
		<var name="section1subsection1XBRLPeriodSet" pre="section1subsection1.SetPeriod('Start')" />
		<var name="section1subsection1XBRLReverseSignSet" pre="section1subsection1.SetReverseSign(true)" />
		<var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
		<var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current service costs&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SurplusDeficit|Movement|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
		<var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:CurrentServiceCostDefinedBenefitScheme')" />
		<var name="section1subsection2XBRLPeriodSet" pre="section1subsection2.SetPeriod('Duration')" />
		<var name="section1subsection2XBRLReverseSignSet" pre="section1subsection2.SetReverseSign(true)" />
		<var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
		<var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Past service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SurplusDeficit|Movement|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
		<var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:PastServiceCostDefinedBenefitScheme')" />
		<var name="section1subsection3XBRLPeriodSet" pre="section1subsection3.SetPeriod('Duration')" />
		<var name="section1subsection3XBRLReverseSignSet" pre="section1subsection3.SetReverseSign(true)" />
		<var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
		<var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Actuarial gains and losses&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SurplusDeficit|Movement|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
		<var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:ActuarialGainLossOnLiabilitiesDefinedBenefitScheme')" />
		<var name="section1subsection4XBRLPeriodSet" pre="section1subsection4.SetPeriod('Duration')" />
		<var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
		<var name="section1subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Foreign exchange differences&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SurplusDeficit|Movement|Rows|*:item[4]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection5subsectionitem1add" pre="section1subsection5.AddItem(section1subsection5subsectionitem1)" />
		<var name="section1subsection5XBRLConceptNameSet" pre="section1subsection5.SetConceptName('uk-gaap:IncreaseDecreaseInLiabilitiesDefinedBenefitSchemeFromForeignExchangeDifferences')" />
		<var name="section1subsection5XBRLPeriodSet" pre="section1subsection5.SetPeriod('Duration')" />
		<var name="section1subsection5add" pre="section1.AddItem(section1subsection5)" />
		<var name="section1subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Finance &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;income/(cost)&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SurplusDeficit|Movement|Rows|*:item[5]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection6subsectionitem1add" pre="section1subsection6.AddItem(section1subsection6subsectionitem1)" />
		<var name="section1subsection6XBRLConceptNameSet" pre="section1subsection6.SetConceptName('uk-gaap:ExpenseIncomeFromInterestCostDefinedBenefitScheme')" />
		<var name="section1subsection6XBRLPeriodSet" pre="section1subsection6.SetPeriod('Duration')" />
		<var name="section1subsection6XBRLReverseSignSet" pre="section1subsection6.SetReverseSign(true)" />
		<var name="section1subsection6add" pre="section1.AddItem(section1subsection6)" />
		<var name="section1subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cash contribution&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SurplusDeficit|Movement|Rows|*:item[6]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection7subsectionitem1add" pre="section1subsection7.AddItem(section1subsection7subsectionitem1)" />
		<var name="section1subsection7XBRLConceptNameSet" pre="section1subsection7.SetConceptName('uk-gaap:ContributionsToPensionScheme')" />
		<var name="section1subsection7XBRLPeriodSet" pre="section1subsection7.SetPeriod('Duration')" />
		<var name="section1subsection7add" pre="section1.AddItem(section1subsection7)" />
		<var name="section1subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;increase/(decrease)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; in assets from business combinations and disposals&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SurplusDeficit|Movement|Rows|*:item[7]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection8subsectionitem1add" pre="section1subsection8.AddItem(section1subsection8subsectionitem1)" />
		<var name="section1subsection8XBRLConceptNameSet" pre="section1subsection8.SetConceptName('uk-gaap:IncreaseDecreaseInAssetsDefinedBenefitSchemeFromBusinessCombinationsDisposals')" />
		<var name="section1subsection8XBRLPeriodSet" pre="section1subsection8.SetPeriod('Duration')" />
		<var name="section1subsection8add" pre="section1.AddItem(section1subsection8)" />
		<var name="section1subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;(increase)/decrease&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; in liabilities from business combinations and disposals&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SurplusDeficit|Movement|Rows|*:item[8]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection9subsectionitem1add" pre="section1subsection9.AddItem(section1subsection9subsectionitem1)" />
		<var name="section1subsection9XBRLConceptNameSet" pre="section1subsection9.SetConceptName('uk-gaap:IncreaseDecreaseInLiabilitiesDefinedBenefitSchemeFromBusinessCombinationsDisposals')" />
		<var name="section1subsection9XBRLPeriodSet" pre="section1subsection9.SetPeriod('Duration')" />
		<var name="section1subsection9XBRLReverseSignSet" pre="section1subsection9.SetReverseSign(true)" />
		<var name="section1subsection9add" pre="section1.AddItem(section1subsection9)" />
		<var name="section1subsection10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Effects of curtailments and settlements&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection10subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SurplusDeficit|Movement|Rows|*:item[9]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection10subsectionitem1add" pre="section1subsection10.AddItem(section1subsection10subsectionitem1)" />
		<var name="section1subsection10XBRLConceptNameSet" pre="section1subsection10.SetConceptName('uk-gaap:GainLossFromSettlementsCurtailmentsIncludedInSeparateItemAfterOperatingProfit')" />
		<var name="section1subsection10XBRLPeriodSet" pre="section1subsection10.SetPeriod('Duration')" />
		<var name="section1subsection10add" pre="section1.AddItem(section1subsection10)" />
		<var name="section1subsection11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
		<var name="section1subsection11subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|SurplusDeficit|Movement|Rows|*:item[10]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
		<var name="section1subsection11subsectionitem1add" pre="section1subsection11.AddItem(section1subsection11subsectionitem1)" />
		<var name="section1subsection11XBRLPeriodSet" pre="section1subsection11.SetPeriod('Duration')" />
		<var name="section1subsection11add" pre="section1.AddItem(section1subsection11)" />
		<var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:DeficitSurplusOnPensionScheme')" />
		<var name="section1XBRLPeriodSet" pre="section1.SetPeriod('End')" />
		<var name="section1XBRLReverseSignSet" pre="section1.SetReverseSign(true)" />
		<var name="section1add" pre="smartTable.AddTableBlock(section1)" />
		<!-- Print the table -->
		<var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
		<var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
		<table base-style="Table Text">
			<column-details column-number="1" char-align=")" align="bottom-right" />
			<column-details column-number="2" char-align=")" align="bottom-right" />
			<column-details column-number="3" char-align=")" align="bottom-right" />
			<table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
				<section runtime-smart-tag="section.SmartTag">
					<table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
						<table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
							<!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
							<table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
								<table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
									<para runtime-font-color="cell.Color">
										<data condition="cell.HasStringContent">cell.ContentString</data>
										<data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
										<data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
									</para>
								</table-cell>
							</table-row>
							<!-- Cell which has a fixed width and has padding cells either side of the main cell -->
							<table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
								<table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
								<table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
									<para runtime-font-color="cell.Color">
										<data condition="cell.HasStringContent">cell.ContentString</data>
										<data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
										<data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
									</para>
								</table-cell>
								<table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
							</table-row>
							<!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
							<table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
								<table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
									<para runtime-font-color="cell.Color">
										<data condition="cell.HasStringContent">cell.ContentString</data>
										<data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
										<data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
									</para>
								</table-cell>
							</table-row>
							<!-- Cell which uses available free-space and has padding cells either side of the main cell -->
							<table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
								<table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
								<table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
									<para runtime-font-color="cell.Color">
										<data condition="cell.HasStringContent">cell.ContentString</data>
										<data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
										<data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
									</para>
								</table-cell>
								<table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
							</table-row>
						</table-column-iterator>
					</table-row-iterator>
				</section>
			</table-row-iterator>
		</table>
	</section>
</add-to-body>
</template>
							</report-template>
						</report-template>
						<report-template version="12" name="Amounts charged (credited) to operating profit" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="FRSSEPensionScheme4OperatingProfit" page-break-before="False" keep-with-next-strength="1" template-guid="028ecda0-9478-4d57-bafc-ee2992a61fb5">
							<template><add-to-body>
  <para para-alignment="Full" outer-top-border-clearance="5mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
                    The amounts that have been charged/(credited) to <ws /><data>reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(1m,1m).ComparativesUnfiltered.AllCategoriesRoot,'OpProfit').Description.ToLower()</data><ws /> in the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> are:
                  </para>
</add-to-body></template>
							<report-template version="12" name="Amounts charged (credited) to operating profit" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="FRSSEPensionScheme4OperatingProfitValues" page-break-before="False" keep-with-next-strength="0" template-guid="39d06f65-d8d3-4ab1-9df3-cc88fcd51e24">
								<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'SmartTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'centre-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLDimensionsSet" pre="column2.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4')" />
    <var name="column2XBRLHypercubeNameSet" pre="column2.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;&#xD;&#xA;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.PrimaryStatementScalingHeader&lt;/data&gt;&#xD;&#xA;&#xA;&lt;br/&gt;&lt;inline condition=&quot;column.IsRestated()&quot;&gt;(As restated)&lt;/inline&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', 'null', 'null')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:PensionSchemesDimension=uk-gaap:PensionScheme4,uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:PensionSchemesHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('RecognisedInProfitLoss', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;quot;charge/(credit)&amp;quot;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; to &lt;ws/&gt;&lt;data&gt;reporting.Queries.Chart.FindArbitraryNominalCategoryByCode(reporting.GetComputations(1m,1m).ComparativesUnfiltered.AllCategoriesRoot,&amp;apos;OpProfit&amp;apos;).Description.ToLower()&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Current service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:CurrentServiceCostDefinedBenefitScheme')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Past service cost&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:PastServiceCostDefinedBenefitScheme')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Effect of FRS 17 paragraph 41&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:IncomeExpenseFromAmountsNotRecognisedAsAnAssetBecauseIAS58bLimit')" />
    <var name="section1subsection3XBRLReverseSignSet" pre="section1subsection3.SetReverseSign(true)" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Effects of curtailments and settlements&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|FRSSEPensions|PensionschemesFRSSE|*:item[3]|ProfitAndLoss|RecognisedInOperatingProfit|Rows|*:item[3]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection4subsectionitem1add" pre="section1subsection4.AddItem(section1subsection4subsectionitem1)" />
    <var name="section1subsection4XBRLConceptNameSet" pre="section1subsection4.SetConceptName('uk-gaap:ExpenseIncomeFromDefinedBenefitSchemeSettlementsCurtailments')" />
    <var name="section1subsection4add" pre="section1.AddItem(section1subsection4)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:ChargeCreditToOperatingProfitFromDefinedBenefitScheme')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
							</report-template>
						</report-template>
					</report-template>
				</report-template>
				<report-template version="12" name="Contingent assets" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|Contingencies|ContingentAssets|ContingentAssets|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="ContingentAssets" page-break-before="False" keep-with-next-strength="0" template-guid="e50eda9b-161c-42c2-b2a8-ffb097d972e0">
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Contingent assets text" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="ContingentAssetsText" page-break-before="False" keep-with-next-strength="0" template-guid="2ca54479-1cbc-4270-ae53-2210e49288f5">
						<template><add-to-body>
  <para para-alignment="Full" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|FinancialStatements|Contingencies')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:DescriptionProbableContingentAssets" xbrl-period="CurrentPeriod">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|Contingencies|ContingentAssets|ContingentAssets|Current Period")[0].Value</data>
  </para>
</add-to-body></template>
					</report-template>
				</report-template>
				<report-template version="12" name="Contingent liabilities" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="(reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Contingencies|ContingentLiabilities|SpecificGuarantees|*|SpecificGuarantee|ContingentLiabilities|Description|Current Period')[0].HasValue) or (reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|Contingencies|ContingentLiabilities|OtherContingentLiabilities|Current Period&quot;)[0].HasValue)" enabled="Conditional" section-name="ContingentLiaibilities" page-break-before="False" keep-with-next-strength="0" template-guid="d24b210c-0e12-43fd-9c9d-becd9e25858a">
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Contingent liabilities text" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="ContingentLiabilitiesText" page-break-before="False" keep-with-next-strength="0" template-guid="91d39865-1fce-4a4e-9c6e-8e06c32da3e5">
						<template><add-to-body>
  <section tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|FinancialStatements|Contingencies')" condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Contingencies|ContingentLiabilities|SpecificGuarantees|*|SpecificGuarantee|ContingentLiabilities|Description|Current Period')[0].HasValue">
    <iterator iterate-over="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Contingencies|ContingentLiabilities|SpecificGuarantees|*')" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
      <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:SpecificGuaranteesContingentLiabilitiesGrouping">
        <inline xbrl-concept="uk-gaap:DescriptionGuarantee" xbrl-period="CurrentPeriod">
          <data>reporting.queries.client.lookupaccountingperioddata(item, '*|SpecificGuarantee|ContingentLiabilities|Description|Current Period')[0].Value</data>
        </inline>
        <ws /> The amount guaranteed is <ws /><inline xbrl-concept="uk-gaap:AmountGuaranteed" xbrl-period="EndCurrentPeriod" xbrl-scaling="0"><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata(item, '*|SpecificGuarantee|ContingentLiabilities|Amount|Current Period')[0].Value</data></inline><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.PriorPeriod.EndDate.Value.Year</data><ws /> - <ws /><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata(item, '*|SpecificGuarantee|ContingentLiabilities|Amount|Prior Period')[0].Value</data>
)</inline>
. <ws /><inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|SpecificGuarantee|ContingentLiabilities|Security|Current Period')[0].HasValue"><inline xbrl-concept="uk-gaap:DescriptionSecurityForGuaranteeIfRequired" xbrl-period="CurrentPeriod" xbrl-scaling="0"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|SpecificGuarantee|ContingentLiabilities|Security|Current Period')[0].Value</data></inline></inline></para>
    </iterator>
  </section>
  <para outer-top-border-clearance="5mm" para-alignment="Full" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|FinancialStatements|Contingencies')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|Contingencies|ContingentLiabilities|OtherContingentLiabilities|Current Period")[0].Value</data>
  </para>
</add-to-body></template>
					</report-template>
				</report-template>
				<report-template version="12" name="Commitments" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="HasCapitalCommitments or HasOperatingLeases or HasPensionCommitments or HasCOA or HasOFC or HasInflows or HasPTA or HasRightsObligations" enabled="Conditional" section-name="Commitments" page-break-before="False" keep-with-next-strength="0" template-guid="d7142748-9a24-4d95-bf91-619a12bd00d6">
					<variables>
						<variable name="HasRightsObligations">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|Commitments|OtherCommitments|RightsObligationsGuaranteesAndCommitments|Rows|*:filter['Description'|'Current Period'&gt;0]",null, true).Count &gt; 0</variable>
						<variable name="HasPTA">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|Commitments|OtherCommitments|PartiallyTransferredAssets|Rows|*:filter['Description'|'Current Period'&gt;0]",null, true).Count &gt; 0</variable>
						<variable name="HasInflows">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|Commitments|OtherCommitments|Inflows|Rows|*:filter['Description'|'Current Period'&gt;0]",null, true).Count &gt; 0</variable>
						<variable name="HasOFC">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|Commitments|OtherCommitments|OtherFinancialCommitments|Rows|*:filter['Description'|'Current Period'&gt;0]",null, true).Count &gt; 0</variable>
						<variable name="HasCOA">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|Commitments|OtherCommitments|ChargesOnAssets|Rows|*:filter['Description'|'Current Period'&gt;0]",null, true).Count &gt; 0</variable>
						<variable name="HasCapitalCommitments">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|Commitments|CapitalCommitments|CapitalCommitment|Current Period")[0].HasValue</variable>
						<variable name="HasOperatingLeases">reportHelper.Computation(reportHelper.StatutoryNoteRounding, reportHelper.StatutoryNoteScaling).GetPrimaryCategory('OPLeases').HasTransactions</variable>
						<variable name="HasPensionCommitments">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|Commitments|PensionCommitments|PensionCommitments|*|PensionCommitments|PensionCommitments|Description|Current Period")[0].HasValue</variable>
					</variables>
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Capital commitments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="HasCapitalCommitments" enabled="Conditional" section-name="CapitalCommitments" page-break-before="False" keep-with-next-strength="0" template-guid="4b57247a-5c92-486b-84d9-d3ea12af3568">
						<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
						<report-template version="12" name="Capital commitments text" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="HasCapitalCommitments" enabled="Always" section-name="CapitalCommitmentsText" page-break-before="False" keep-with-next-strength="0" template-guid="e26b4054-362f-4e0e-9683-a81a27b1e1a3">
							<template><add-to-body>
  <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%" xbrl-concept="uk-gaap:CapitalCommitmentGrouping">Amounts contracted for but not provided in the financial statements amounted to <ws /><inline xbrl-concept="uk-gaap:CapitalCommitmentsTotalContractedButNotProvidedFor" xbrl-period="EndCurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|Commitments|CapitalCommitments|CapitalCommitment|Current Period")[0].Value</data></inline><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.PriorPeriod.EndDate.Value.Year</data><ws /> - <ws /><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|Commitments|CapitalCommitments|CapitalCommitment|Prior Period")[0].Value</data>
)</inline>
.</para>
</add-to-body></template>
						</report-template>
					</report-template>
					<report-template version="12" name="Operating lease commitments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="HasOperatingLeases" enabled="Conditional" section-name="OperatingLeaseCommitments" page-break-before="False" keep-with-next-strength="1" template-guid="a4a12f9a-9c67-4235-b485-cdad36421c4f">
						<template><add-to-body>
  <table>
    <table-row>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
    <table-row>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">As at <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data><ws /> the company had annual commitments under non-cancellable operating leases as follows:</para>
      </table-cell>
    </table-row>
    <table-row>
      <table-cell>
        <para smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          Operating leases which expire:
					</para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
						<report-template version="12" name="Operating lease commitments values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="OperatingLeaseCommitmentsValues" page-break-before="False" keep-with-next-strength="0" template-guid="08d206e5-722f-44e4-887a-4e83fdd793b4">
							<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'MyFirstTable', reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.StatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.StatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('EndCurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if reportHelper.IsAnnual then dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;) else dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&#xD;&#xA;&lt;br/&gt;&lt;data&gt;reportHelper.StatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;null&lt;/para&gt;', '&lt;para&gt;null&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('EndPriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('LandAndBuildings', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Land and buildings&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Within one year&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|Commitments|OperatingLeases|OperatingLeases|Columns|LandAndBuildings|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1XBRLConceptNameSet" pre="section1subsection1.SetConceptName('uk-gaap:LandBuildingsOperatingLeasesExpiringWithinOneYear')" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Within two and five years&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|Commitments|OperatingLeases|OperatingLeases|Columns|LandAndBuildings|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection2subsectionitem1add" pre="section1subsection2.AddItem(section1subsection2subsectionitem1)" />
    <var name="section1subsection2XBRLConceptNameSet" pre="section1subsection2.SetConceptName('uk-gaap:LandBuildingsOperatingLeasesExpiringBetweenTwoFiveYears')" />
    <var name="section1subsection2add" pre="section1.AddItem(section1subsection2)" />
    <var name="section1subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Over five years&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|Commitments|OperatingLeases|OperatingLeases|Columns|LandAndBuildings|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection3subsectionitem1add" pre="section1subsection3.AddItem(section1subsection3subsectionitem1)" />
    <var name="section1subsection3XBRLConceptNameSet" pre="section1subsection3.SetConceptName('uk-gaap:LandBuildingsOperatingLeasesExpiringAfterFiveYears')" />
    <var name="section1subsection3add" pre="section1.AddItem(section1subsection3)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:CommitmentsUnderNon-cancellableOperatingLeasesLandBuildings')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('NewSection', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Other&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Within one year&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|Commitments|OperatingLeases|OperatingLeases|Columns|Other|*:item[0]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1XBRLConceptNameSet" pre="section2subsection1.SetConceptName('uk-gaap:OtherOperatingLeasesExpiringWithinOneYear')" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Within two and five years&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|Commitments|OperatingLeases|OperatingLeases|Columns|Other|*:item[1]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection2subsectionitem1add" pre="section2subsection2.AddItem(section2subsection2subsectionitem1)" />
    <var name="section2subsection2XBRLConceptNameSet" pre="section2subsection2.SetConceptName('uk-gaap:OtherOperatingLeasesExpiringBetweenTwoFiveYears')" />
    <var name="section2subsection2add" pre="section2.AddItem(section2subsection2)" />
    <var name="section2subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Over five years&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('Disclosure|FinancialStatements|Commitments|OperatingLeases|OperatingLeases|Columns|Other|*:item[2]', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection3subsectionitem1add" pre="section2subsection3.AddItem(section2subsection3subsectionitem1)" />
    <var name="section2subsection3XBRLConceptNameSet" pre="section2subsection3.SetConceptName('uk-gaap:OtherOperatingLeasesExpiringAfterFiveYears')" />
    <var name="section2subsection3add" pre="section2.AddItem(section2subsection3)" />
    <var name="section2XBRLConceptNameSet" pre="section2.SetConceptName('uk-gaap:CommitmentsUnderNon-cancellableOperatingLeasesOtherItems')" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
						</report-template>
					</report-template>
					<report-template version="12" name="Pension commitments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="HasPensionCommitments " enabled="Conditional" section-name="SpecificPensionCommitments" page-break-before="False" keep-with-next-strength="0" template-guid="814729e6-e421-4d0f-9462-6f678a815171">
						<template><add-to-body>
  <table>
    <table-row>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
  <section condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Commitments|PensionCommitments|PensionCommitments|*')[0].HasValue">
    <iterator iterate-over="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Commitments|PensionCommitments|PensionCommitments|*')" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
      <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:PensionCommitmentsGrouping">
        <inline xbrl-concept="uk-gaap:DescriptionCommitmentsToMakeAdditionalPensionPaymentsOverNumberYears" xbrl-period="CurrentPeriod">
          <data>reporting.queries.client.lookupaccountingperioddata(item, '*|PensionCommitments|PensionCommitments|Description|Current Period')[0].Value</data>
        </inline>
. Commitments provided for in the accounts amounted to <ws /><inline xbrl-concept="uk-gaap:PensionCommitmentsProvidedForInAccounts" xbrl-period="EndCurrentPeriod"><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata(item, '*|PensionCommitments|PensionCommitments|Provided|Current Period')[0].Value</data></inline><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.PriorPeriod.EndDate.Value.Year</data><ws /> - <ws /><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata(item, '*|PensionCommitments|PensionCommitments|Provided|Prior Period')[0].Value</data>
)</inline>
.Commitments not provided for in the accounts amounted to <ws /><inline xbrl-concept="uk-gaap:PensionCommitmentsNotProvidedForInAccounts" xbrl-period="EndCurrentPeriod"><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata(item, '*|PensionCommitments|PensionCommitments|NotProvided|Current Period')[0].Value</data></inline><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.PriorPeriod.EndDate.Value.Year</data><ws /> -<data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata(item, '*|PensionCommitments|PensionCommitments|NotProvided|Prior Period')[0].Value</data>
)</inline>
. <ws /><inline xbrl-concept="uk-gaap:PensionCommitmentsRelatedToPensionsPayableToPastDirectors" xbrl-period="EndCurrentPeriod"><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata(item, '*|PensionCommitments|PensionCommitments|PastDirectors|Current Period')[0].Value</data></inline><ws /> relates to pension commitments related to pensions payable to past directors<inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.PriorPeriod.EndDate.Value.Year</data><ws /> - <ws /><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata(item, '*|PensionCommitments|PensionCommitments|PastDirectors|Prior Period')[0].Value</data>
)</inline>
.</para>
    </iterator>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="Other commitments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="HasCOA or HasOFC or HasInflows or HasPTA or HasRightsObligations" enabled="Conditional" section-name="OtherCommitments" page-break-before="False" keep-with-next-strength="0" template-guid="5b7207ca-1d10-4689-80e5-62c5b895f256">
						<template><add-to-body>
  <table>
    <table-row>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
						<report-template version="12" name="Charges on assets" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="HasCOA" enabled="Conditional" section-name="ChargesOnAssets" page-break-before="False" keep-with-next-strength="0" template-guid="ee2eb7e4-5fc2-465c-9909-fb786a76b51e">
							<template><add-to-body>
  <section condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Commitments|OtherCommitments|ChargesOnAssets|Rows|*')[0].HasValue">
    <iterator iterate-over="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Commitments|OtherCommitments|ChargesOnAssets|Rows|*')" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
      <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:ChargesOnAssetsEntityInOrderToSecureThirdPartyLiabilitiesGrouping">
        <inline xbrl-concept="uk-gaap:DescriptionChargesOnAssetsEntityInOrderToSecureThirdPartyLiabilities" xbrl-period="CurrentPeriod">
          <data>reporting.queries.client.lookupaccountingperioddata(item, '*|Description|Current Period')[0].Value</data>
        </inline>
. The charge on the assets amounted to <ws /><inline xbrl-concept="uk-gaap:AmountChargeOnAssetsEntityInOrderToSecureThirdPartyLiabilities" xbrl-period="EndCurrentPeriod"><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata(item, '*|Amount|Current Period')[0].Value</data></inline><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.PriorPeriod.EndDate.Value.Year</data><ws /> -<data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata(item, '*|Amount|Prior Period')[0].Value</data>
).
<br /></inline></para>
    </iterator>
  </section>
</add-to-body></template>
						</report-template>
						<report-template version="12" name="Other financial commitments" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="HasOFC" enabled="Conditional" section-name="OtherFinancialCommitments" page-break-before="False" keep-with-next-strength="0" template-guid="e4ed0146-c765-4a95-9369-ec74503230f3">
							<template><add-to-body>
  <section condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Commitments|OtherCommitments|OtherFinancialCommitments|Rows|*')[0].HasValue">
    <iterator iterate-over="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Commitments|OtherCommitments|OtherFinancialCommitments|Rows|*')" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
      <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:OtherFinancialCommitmentsNotProvidedForInAccountsGrouping">
        <inline xbrl-concept="uk-gaap:DescriptionOtherFinancialCommitmentsNotProvidedForInAccounts" xbrl-period="CurrentPeriod">
          <data>reporting.queries.client.lookupaccountingperioddata(item, '*|Description|Current Period')[0].Value</data>
        </inline>
        <br />
      </para>
    </iterator>
  </section>
</add-to-body></template>
						</report-template>
						<report-template version="12" name="Inflows" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="HasInflows" enabled="Conditional" section-name="Inflows" page-break-before="False" keep-with-next-strength="0" template-guid="b511952b-982d-41c0-905e-2efb1a1ac897">
							<template><add-to-body>
  <section condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Commitments|OtherCommitments|Inflows|Rows|*')[0].HasValue">
    <iterator iterate-over="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Commitments|OtherCommitments|Inflows|Rows|*')" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
      <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:PossibleInflowsEconomicBenefitsGrouping">
        <inline xbrl-concept="uk-gaap:DescriptionNatureParticularInflowAssetsConcernedPossibleFinancialEffect" xbrl-period="CurrentPeriod">
          <data>reporting.queries.client.lookupaccountingperioddata(item, '*|Description|Current Period')[0].Value</data>
        </inline>
        <br />
      </para>
    </iterator>
  </section>
</add-to-body></template>
						</report-template>
						<report-template version="12" name="Partially transferred assets" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="HasPTA" enabled="Conditional" section-name="PartiallyTransferredAssets" page-break-before="False" keep-with-next-strength="0" template-guid="4863df0f-abb3-4ae8-8cc6-4caee2075cab">
							<template><add-to-body>
  <section condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Commitments|OtherCommitments|PartiallyTransferredAssets|Rows|*')[0].HasValue">
    <iterator iterate-over="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Commitments|OtherCommitments|PartiallyTransferredAssets|Rows|*')" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
      <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:PartiallyTransferredAssetsGrouping">
        <inline xbrl-concept="uk-gaap:DescriptionPartiallyTransferredAssetUncertaintyOverGainLoss" xbrl-period="CurrentPeriod">
          <data>reporting.queries.client.lookupaccountingperioddata(item, '*|Description|Current Period')[0].Value</data>
        </inline>
        <br />
      </para>
    </iterator>
  </section>
</add-to-body></template>
						</report-template>
						<report-template version="12" name="Rights obligations guarantees and commitments not recognised" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="HasRightsObligations" enabled="Conditional" section-name="RightsObligationsGuaranteesAndCommitments" page-break-before="False" keep-with-next-strength="0" template-guid="ae529794-87fd-4644-a6a6-057fc518b5ad">
							<template><add-to-body>
  <section condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Commitments|OtherCommitments|RightsObligationsGuaranteesAndCommitments|Rows|*')[0].HasValue">
    <iterator iterate-over="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|Commitments|OtherCommitments|RightsObligationsGuaranteesAndCommitments|Rows|*')" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
      <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:RightsObligationsGuaranteesCommitmentsNotRecognisedAsAssetsOrLiabilitiesGrouping">
        <inline xbrl-concept="uk-gaap:DescriptionRightObligationGuaranteeOrCommitmentNotRecognisedAsAssetOrLiability" xbrl-period="CurrentPeriod">
          <data>reporting.queries.client.lookupaccountingperioddata(item, '*|Description|Current Period')[0].Value</data>
        </inline>
        <br />
      </para>
    </iterator>
  </section>
</add-to-body></template>
						</report-template>
					</report-template>
				</report-template>
				<report-template version="12" name="Analysis of net debt" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|BasisofPreparation|Exemptions|CashFlowGroupExemption|Current Period&quot;)[0].Value = false and reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AccountingPolicies|BasisofPreparation|Exemptions|CashFlowSizeExemption|Current Period&quot;)[0].Value =false) and CompanySize != 'Small'" enabled="Conditional" section-name="AnalysisOfNetDebt" page-break-before="False" keep-with-next-strength="0" template-guid="5e1cb667-5d65-4db8-b62a-6593a307327b">
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Analysis of net debt values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="AnalysisOfNetDebtValues" page-break-before="False" keep-with-next-strength="0" template-guid="34b21908-c105-48f2-b144-9f0e5cf694d0">
						<template><add-to-body>
  <table base-style="Table Text">
    <var name="CashAtBankDescription" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|BankCash|Rows|*:item[0]|Description|Current Period')[0].Value " />
    <var name="CashAtBankStart" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|BankCash|Rows|*:item[0]|Start|Current Period')[0].Value / reportHelper.StatutoryNoteScaling" />
    <var name="CashAtBankCashFlow" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|BankCash|Rows|*:item[0]|CashFlow|Current Period')[0].Value / reportHelper.StatutoryNoteScaling" />
    <var name="CashAtBankExchange" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|BankCash|Rows|*:item[0]|Exchange|Current Period')[0].Value / reportHelper.StatutoryNoteScaling " />
    <var name="CashAtBankOther" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|BankCash|Rows|*:item[0]|Other|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling " />
    <var name="CashAtBankEnd" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|BankCash|Rows|*:item[0]|End|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling" />
    <var name="OverdraftDescription" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|BankCash|Rows|*:item[1]|Description|Current Period')[0].Value " />
    <var name="OverdraftStart" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|BankCash|Rows|*:item[1]|Start|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling " />
    <var name="OverdraftCashFlow" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|BankCash|Rows|*:item[1]|CashFlow|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling " />
    <var name="OverdraftExchange" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|BankCash|Rows|*:item[1]|Exchange|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling " />
    <var name="OverdraftOther" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|BankCash|Rows|*:item[1]|Other|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling " />
    <var name="OverdraftEnd" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|BankCash|Rows|*:item[1]|End|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling" />
    <var name="DebtUnder1YrDescription" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|DebtFLHP|Rows|*:item[0]|Description|Current Period')[0].Value " />
    <var name="DebtUnder1YrStart" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|DebtFLHP|Rows|*:item[0]|Start|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling " />
    <var name="DebtUnder1YrCashFlow" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|DebtFLHP|Rows|*:item[0]|CashFlow|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling " />
    <var name="DebtUnder1YrExchange" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|DebtFLHP|Rows|*:item[0]|Exchange|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling " />
    <var name="DebtUnder1YrOther" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|DebtFLHP|Rows|*:item[0]|Other|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling " />
    <var name="DebtUnder1YrEnd" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|DebtFLHP|Rows|*:item[0]|End|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling " />
    <var name="DebtOver1YrDescription" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|DebtFLHP|Rows|*:item[1]|Description|Current Period')[0].Value " />
    <var name="DebtOver1YrStart" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|DebtFLHP|Rows|*:item[1]|Start|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling " />
    <var name="DebtOver1YrCashFlow" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|DebtFLHP|Rows|*:item[1]|CashFlow|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling " />
    <var name="DebtOver1YrExchange" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|DebtFLHP|Rows|*:item[1]|Exchange|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling " />
    <var name="DebtOver1YrOther" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|DebtFLHP|Rows|*:item[1]|Other|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling " />
    <var name="DebtOver1YrEnd" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|DebtFLHP|Rows|*:item[1]|End|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling " />
    <var name="FLHPDescription" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|DebtFLHP|Rows|*:item[2]|Description|Current Period')[0].Value " />
    <var name="FLHPStart" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|DebtFLHP|Rows|*:item[2]|Start|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling " />
    <var name="FLHPCashFlow" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|DebtFLHP|Rows|*:item[2]|CashFlow|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling " />
    <var name="FLHPExchange" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|DebtFLHP|Rows|*:item[2]|Exchange|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling " />
    <var name="FLHPOther" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|DebtFLHP|Rows|*:item[2]|Other|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling " />
    <var name="FLHPEnd" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|DebtFLHP|Rows|*:item[2]|End|Current Period')[0].Value / reportHelper.StatutoryNoteScaling" />
    <var name="CAIDescription" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|LiquidResources|Rows|*:item[0]|Description|Current Period')[0].Value " />
    <var name="CAIStart" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|LiquidResources|Rows|*:item[0]|Start|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling " />
    <var name="CAICashFlow" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|LiquidResources|Rows|*:item[0]|CashFlow|Current Period')[0].Value / reportHelper.StatutoryNoteScaling" />
    <var name="CAIExchange" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|LiquidResources|Rows|*:item[0]|Exchange|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling " />
    <var name="CAIOther" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|LiquidResources|Rows|*:item[0]|Other|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling " />
    <var name="CAIEnd" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|LiquidResources|Rows|*:item[0]|End|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling " />
    <var name="NetDebtDescription" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|NetDebtFunds|Rows|*:item[0]|Description|Current Period')[0].Value " />
    <var name="NetDebtStart" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|NetDebtFunds|Rows|*:item[0]|Start|Current Period')[0].Value / reportHelper.StatutoryNoteScaling" />
    <var name="NetDebtCashFlow" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|NetDebtFunds|Rows|*:item[0]|CashFlow|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling " />
    <var name="NetDebtExchange" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|NetDebtFunds|Rows|*:item[0]|Exchange|Current Period')[0].Value / reportHelper.StatutoryNoteScaling" />
    <var name="NetDebtOther" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|NetDebtFunds|Rows|*:item[0]|Other|Current Period')[0].Value / reportHelper.StatutoryNoteScaling" />
    <var name="NetDebtEnd" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|CashFlow|NetDebt|NetDebtFunds|Rows|*:item[0]|End|Current Period')[0].Value/ reportHelper.StatutoryNoteScaling " />
    <var name="HasCashAtBank" init="(CashAtBankStart = 0 and CashAtBankCashFlow = 0 and CashAtBankExchange = 0 and CashAtBankOther = 0 and CashAtBankEnd = 0)=false" />
    <var name="HasOverdraft" init="(OverdraftStart = 0 and OverdraftCashFlow = 0 and OverdraftExchange = 0 and OverdraftOther = 0 and OverdraftEnd = 0) = false" />
    <var name="HasDebtUnder1Yr" init="(DebtUnder1YrStart = 0 and DebtUnder1YrCashFlow = 0 and DebtUnder1YrExchange = 0 and DebtUnder1YrOther = 0 and DebtUnder1YrEnd = 0) = false" />
    <var name="HasDebtOver1Yr" init="(DebtOver1YrStart = 0 and DebtOver1YrCashFlow = 0 and DebtOver1YrExchange = 0 and DebtOver1YrOther = 0 and DebtOver1YrEnd = 0) = false" />
    <var name="HasFLHP" init="(FLHPStart = 0 and FLHPCashFlow = 0 and FLHPExchange = 0 and FLHPOther = 0 and FLHPEnd = 0) = false" />
    <var name="HasCAI" init="(CAIStart = 0 and CAICashFlow = 0 and CAIExchange = 0 and CAIOther = 0 and CAIEnd = 0) = false" />
    <column-details column-number="1" free-space="1" align="bottom-left" />
    <column-details column-number="2" width="26mm" char-align=")" align="bottom-right" />
    <column-details column-number="3" width="26mm" char-align=")" align="bottom-right" />
    <column-details column-number="4" width="26mm" char-align=")" align="bottom-right" condition="(CashAtBankExchange =0 and OverdraftExchange = 0 and DebtUnder1YrExchange = 0 and DebtOver1YrExchange = 0 and FLHPExchange = 0 and CAIExchange = 0 and NetDebtExchange = 0) = false or report.RenderContext.InDesignMode" />
    <column-details column-number="5" width="26mm" char-align=")" align="bottom-right" condition="(CashAtBankOther =0 and OverdraftOther = 0 and DebtUnder1YrOther = 0 and DebtOver1YrOther = 0 and FLHPOther = 0 and CAIOther = 0 and NetDebtOther = 0) = false or report.RenderContext.InDesignMode" />
    <column-details column-number="6" width="26mm" char-align=")" align="bottom-right" />
    <!-- Column Headers-->
    <table-row base-style="Table Column Heading" outer-bottom-border-clearance="5mm">
      <table-cell>
      </table-cell>
      <table-cell align="centre-bottom">
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <inline para-alignment="Centre">At <ws /></inline>
          <data para-alignment="Centre">reportHelper.CurrentPeriod.StartDate.Value.ToString('d MMMM yyyy')</data>
          <inline para-alignment="Centre">
          </inline>
          <br />
          <data para-alignment="Centre">reportHelper.StatutoryNoteScalingHeader</data>
          <inline para-alignment="Centre">
          </inline>
        </para>
      </table-cell>
      <table-cell align="centre-bottom">
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <inline para-alignment="Centre">Cash flow</inline>
          <br />
          <data para-alignment="Centre">reportHelper.StatutoryNoteScalingHeader</data>
          <inline para-alignment="Centre">
          </inline>
        </para>
      </table-cell>
      <table-cell align="centre-bottom">
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <inline para-alignment="Centre">Exchange movement</inline>
          <br />
          <data para-alignment="Centre">reportHelper.StatutoryNoteScalingHeader</data>
          <inline para-alignment="Centre">
          </inline>
        </para>
      </table-cell>
      <table-cell align="centre-bottom">
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <inline para-alignment="Centre">Other non-cash changes</inline>
          <br />
          <data para-alignment="Centre">reportHelper.StatutoryNoteScalingHeader

</data>
          <inline para-alignment="Centre">
          </inline>
        </para>
      </table-cell>
      <table-cell align="centre-bottom">
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <inline para-alignment="Centre">At <ws /></inline>
          <data para-alignment="Centre">reportHelper.CurrentPeriod.EndDate.Value.ToString('d MMMM yyyy')</data>
          <inline para-alignment="Centre">
          </inline>
          <br />
          <data para-alignment="Centre">reportHelper.StatutoryNoteScalingHeader</data>
          <inline para-alignment="Centre">
          </inline>
        </para>
      </table-cell>
    </table-row>
    <!-- Bank and cash rows -->
    <!-- Cash at bank and in hand -->
    <table-row condition="HasCashAtBank or report.RenderContext.InDesignMode">
      <table-cell>
        <para para-alignment="Left" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data>CashAtBankDescription</data>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:CashBankInHand" xbrl-period="StartCurrentPeriod">
          <data para-alignment="Right">CashAtBankStart</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:IncreaseDecreaseInCashBankInHandExcludingExchangeAdjustments" xbrl-period="CurrentPeriod">
          <data para-alignment="Right">CashAtBankCashFlow</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:IncreaseDecreaseInCashBankInHandFromExchangeAdjustments" xbrl-period="CurrentPeriod">
          <data para-alignment="Right">CashAtBankExchange</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:IncreaseDecreaseInCashBankInHandFromOtherNon-cashChanges" xbrl-period="CurrentPeriod">
          <data para-alignment="Right">CashAtBankOther</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:CashBankInHand" xbrl-period="EndCurrentPeriod">
          <data para-alignment="Right">CashAtBankEnd</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
    </table-row>
    <!-- Overdrafts -->
    <table-row condition="HasOverdraft or report.RenderContext.InDesignMode">
      <table-cell>
        <para para-alignment="Left" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data>OverdraftDescription</data>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:BankOverdrafts" xbrl-invert-sign="True" xbrl-period="StartCurrentPeriod">
          <data para-alignment="Right">OverdraftStart</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:IncreaseDecreaseInBankOverdraftsExcludingExchangeAdjustments" xbrl-period="CurrentPeriod" xbrl-invert-sign="True">
          <data para-alignment="Right">OverdraftCashFlow</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:IncreaseDecreaseInBankOverdraftsFromExchangeAdjustments" xbrl-period="CurrentPeriod" xbrl-invert-sign="True">
          <data para-alignment="Right">OverdraftExchange</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:IncreaseDecreaseInBankOverdraftsFromOtherNon-cashChanges" xbrl-period="CurrentPeriod" xbrl-invert-sign="True">
          <data para-alignment="Right">OverdraftOther</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:BankOverdrafts" xbrl-period="EndCurrentPeriod" xbrl-invert-sign="True">
          <data para-alignment="Right">OverdraftEnd</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
    </table-row>
    <!-- Bank Cash Total -->
    <table-row condition="(HasCashAtBank and HasOverdraft) or report.RenderContext.InDesignMode">
      <table-cell>
        <para para-alignment="Left" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
        </para>
      </table-cell>
      <table-cell>
        <para top-border-color="Black" para-alignment="Full" left-border-size="0mm" right-border-size="0mm" bottom-border-color="Black" top-border-size="0.5pt" left-border-style="None" right-border-style="None" top-border-style="Solid" outer-top-border-clearance="2mm" bottom-border-style="None" bottom-border-size="0mm" outer-left-border-clearance="2mm" outer-bottom-border-clearance="0mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data para-alignment="Right">CashAtBankStart + OverdraftStart</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para top-border-color="Black" para-alignment="Full" left-border-size="0mm" right-border-size="0mm" bottom-border-color="Black" top-border-size="0.5pt" left-border-style="None" right-border-style="None" top-border-style="Solid" outer-top-border-clearance="2mm" bottom-border-style="None" bottom-border-size="0mm" outer-left-border-clearance="2mm" outer-bottom-border-clearance="0mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data para-alignment="Right">CashAtBankCashFlow + OverdraftCashFlow</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para top-border-color="Black" para-alignment="Full" left-border-size="0mm" right-border-size="0mm" bottom-border-color="Black" top-border-size="0.5pt" left-border-style="None" right-border-style="None" top-border-style="Solid" outer-top-border-clearance="2mm" bottom-border-style="None" bottom-border-size="0mm" outer-left-border-clearance="2mm" outer-bottom-border-clearance="0mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data para-alignment="Right">CashAtBankExchange + OverdraftExchange</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para top-border-color="Black" para-alignment="Full" left-border-size="0mm" right-border-size="0mm" bottom-border-color="Black" top-border-size="0.5pt" left-border-style="None" right-border-style="None" top-border-style="Solid" outer-top-border-clearance="2mm" bottom-border-style="None" bottom-border-size="0mm" outer-left-border-clearance="2mm" outer-bottom-border-clearance="0mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data para-alignment="Right">CashAtBankOther + OverdraftOther</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para top-border-color="Black" para-alignment="Full" left-border-size="0mm" right-border-size="0mm" bottom-border-color="Black" top-border-size="0.5pt" left-border-style="None" right-border-style="None" top-border-style="Solid" outer-top-border-clearance="2mm" bottom-border-style="None" bottom-border-size="0mm" outer-left-border-clearance="2mm" outer-bottom-border-clearance="0mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data para-alignment="Right">CashAtBankEnd + OverdraftEnd</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
    </table-row>
    <!-- Debt due within one year -->
    <table-row condition="HasDebtUnder1Yr or report.RenderContext.InDesignMode">
      <table-cell>
        <para para-alignment="Left" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data>DebtUnder1YrDescription</data>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:DebtDueWithinOneYear" xbrl-period="StartCurrentPeriod" xbrl-invert-sign="True">
          <data para-alignment="Right">DebtUnder1YrStart</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:IncreaseDecreaseInDebtDueWithinOneYearReflectedInCashOutflowInflow" xbrl-period="CurrentPeriod" xbrl-invert-sign="True">
          <data para-alignment="Right">DebtUnder1YrCashFlow</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:IncreaseDecreaseInDebtDueWithinOneYearFromExchangeAdjustments" xbrl-period="CurrentPeriod" xbrl-invert-sign="True">
          <data para-alignment="Right">DebtUnder1YrExchange</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:IncreaseDecreaseInDebtDueWithinOneYearFromOtherNon-cashChanges" xbrl-period="CurrentPeriod" xbrl-invert-sign="True">
          <data para-alignment="Right">DebtUnder1YrOther</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:DebtDueWithinOneYear" xbrl-period="EndCurrentPeriod" xbrl-invert-sign="True">
          <data para-alignment="Right">DebtUnder1YrEnd</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
    </table-row>
    <!-- Debt due over one year -->
    <table-row condition="HasDebtOver1Yr or report.RenderContext.InDesignMode">
      <table-cell>
        <para para-alignment="Left" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data>DebtOver1YrDescription</data>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:DebtDueAfterOneYear" xbrl-period="StartCurrentPeriod" xbrl-invert-sign="True">
          <data para-alignment="Right">DebtOver1YrStart</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:IncreaseDecreaseInDebtDueAfterOneYearReflectedInCashOutflowInflow" xbrl-period="CurrentPeriod" xbrl-invert-sign="True">
          <data para-alignment="Right">DebtOver1YrCashFlow</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:IncreaseDecreaseInDebtDueAfterOneYearFromExchangeAdjustments" xbrl-period="CurrentPeriod" xbrl-invert-sign="True">
          <data para-alignment="Right">DebtOver1YrExchange</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:IncreaseDecreaseInDebtDueAfterOneYearFromOtherNon-cashChanges" xbrl-period="CurrentPeriod" xbrl-invert-sign="True">
          <data para-alignment="Right">DebtOver1YrOther</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:DebtDueAfterOneYear" xbrl-period="EndCurrentPeriod" xbrl-invert-sign="True">
          <data para-alignment="Right">DebtOver1YrEnd</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
    </table-row>
    <!-- FLHP -->
    <table-row condition="HasFLHP or report.RenderContext.InDesignMode">
      <table-cell>
        <para para-alignment="Left" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data>FLHPDescription</data>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:ObligationsUnderFinanceLeaseHirePurchaseContracts" xbrl-period="StartCurrentPeriod" xbrl-invert-sign="True">
          <data para-alignment="Right">FLHPStart</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:CapitalElementFinanceLeaseRentalPayments" xbrl-period="CurrentPeriod">
          <data para-alignment="Right">FLHPCashFlow</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:IncreaseDecreaseInTotalFinanceLeasesHirePurchaseContractsFromExchangeAdjustments" xbrl-period="CurrentPeriod" xbrl-invert-sign="True">
          <data para-alignment="Right">FLHPExchange</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:NewFinanceLeases" xbrl-period="CurrentPeriod" xbrl-invert-sign="True">
          <data para-alignment="Right">FLHPOther</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:ObligationsUnderFinanceLeaseHirePurchaseContracts" xbrl-period="EndCurrentPeriod" xbrl-invert-sign="True">
          <data para-alignment="Right">FLHPEnd</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
    </table-row>
    <!-- Current asset investments row -->
    <table-row condition="HasCAI or report.RenderContext.InDesignMode">
      <table-cell>
        <para para-alignment="Left" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
          <data>CAIDescription</data>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:CurrentAssetInvestments" xbrl-period="StartCurrentPeriod">
          <data para-alignment="Right">CAIStart</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:CashFlowOutflowFromManagementLiquidResources" xbrl-period="CurrentPeriod">
          <data para-alignment="Right">CAICashFlow</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:IncreaseDecreaseInCurrentAssetInvestmentsFromExchangeAdjustments" xbrl-period="CurrentPeriod">
          <data para-alignment="Right">CAIExchange</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:IncreaseDecreaseInCurrentAssetInvestmentsFromOtherNon-cashChanges" xbrl-period="CurrentPeriod">
          <data para-alignment="Right">CAIOther</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:CurrentAssetInvestments" xbrl-period="EndCurrentPeriod">
          <data para-alignment="Right">CAIEnd</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
    </table-row>
    <!-- Net debt total -->
    <table-row>
      <table-cell>
        <para para-alignment="Left" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">Net <ws /><inline condition="NetDebtEnd &lt;=0">debt</inline><inline condition="NetDebtEnd&gt;0">funds</inline></para>
      </table-cell>
      <table-cell>
        <para top-border-color="Black" para-alignment="Full" bottom-border-color="Black" top-border-size="0.5pt" left-border-style="None" right-border-style="None" top-border-style="Solid" outer-top-border-clearance="2mm" bottom-border-style="DoubleLine" bottom-border-size="2pt" outer-left-border-clearance="2mm" outer-bottom-border-clearance="-0.7mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:NetDebtFunds" xbrl-period="StartCurrentPeriod" xbrl-invert-sign="True">
          <data para-alignment="Right">CashAtBankStart + OverdraftStart + DebtUnder1YrStart + DebtOver1YrStart + FLHPStart + CAIStart</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para top-border-color="Black" para-alignment="Full" bottom-border-color="Black" top-border-size="0.5pt" left-border-style="None" right-border-style="None" top-border-style="Solid" outer-top-border-clearance="2mm" bottom-border-style="DoubleLine" bottom-border-size="2pt" outer-left-border-clearance="2mm" outer-bottom-border-clearance="-0.7mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:DecreaseIncreaseInNetDebtResultingFromCashFlows" xbrl-period="CurrentPeriod">
          <data para-alignment="Right">CashAtBankCashFlow + OverdraftCashFlow + DebtUnder1YrCashFlow + DebtOver1YrCashFlow + FLHPCashFlow + CAICashFlow</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para top-border-color="Black" para-alignment="Full" bottom-border-color="Black" top-border-size="0.5pt" left-border-style="None" right-border-style="None" top-border-style="Solid" outer-top-border-clearance="2mm" bottom-border-style="DoubleLine" bottom-border-size="2pt" outer-left-border-clearance="2mm" outer-bottom-border-clearance="-0.7mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:DecreaseIncreaseInNetDebtFromExchangeAdjustments" xbrl-period="CurrentPeriod">
          <data para-alignment="Right">CashAtBankExchange + OverdraftExchange + DebtUnder1YrExchange + DebtOver1YrExchange + FLHPExchange + CAIExchange</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para top-border-color="Black" para-alignment="Full" bottom-border-color="Black" top-border-size="0.5pt" left-border-style="None" right-border-style="None" top-border-style="Solid" outer-top-border-clearance="2mm" bottom-border-style="DoubleLine" bottom-border-size="2pt" outer-left-border-clearance="2mm" outer-bottom-border-clearance="-0.7mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:OtherNon-cashMovementsServingToDecreaseIncreaseNetDebt" xbrl-period="CurrentPeriod">
          <data para-alignment="Right">CashAtBankOther + OverdraftOther + DebtUnder1YrOther + DebtOver1YrOther + FLHPOther + CAIOther</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
      <table-cell>
        <para top-border-color="Black" para-alignment="Full" bottom-border-color="Black" top-border-size="0.5pt" left-border-style="None" right-border-style="None" top-border-style="Solid" outer-top-border-clearance="2mm" bottom-border-style="DoubleLine" bottom-border-size="2pt" outer-left-border-clearance="2mm" outer-bottom-border-clearance="-0.7mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:NetDebtFunds" xbrl-period="EndCurrentPeriod" xbrl-invert-sign="True">
          <data para-alignment="Right">CashAtBankEnd + OverdraftEnd + DebtUnder1YrEnd + DebtOver1YrEnd + FLHPEnd + CAIEnd</data>
          <inline para-alignment="Right">
          </inline>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					</report-template>
				</report-template>
				<report-template version="12" name="Post balance sheet events" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|General|PostBalanceSheetEvents|Postbalancesheetevents|Postbalancesheetevents|*&quot;)[0].HasValue" enabled="Conditional" section-name="PostBalanceSheetEvents" page-break-before="False" keep-with-next-strength="0" template-guid="99388fcc-5d09-4461-9521-cb18df8f6590">
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Post balance sheet events text" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Conditional" section-name="PostBalanceSheetEventsText" page-break-before="False" keep-with-next-strength="0" template-guid="1240d618-1b38-42bc-8ac7-d0d3e969d5ad">
						<template><add-to-body>
  <section tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|General|PostBalanceSheetEvents')">
    <var name="PBSE" init="reporting.queries.client.lookupaccountingperioddata('Disclosure|General|PostBalanceSheetEvents|Postbalancesheetevents|Postbalancesheetevents|*')" />
    <iterator condition="PBSE[0].HasValue" iterate-over="PBSE" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.ListControlItem">
      <para para-alignment="Full" xbrl-concept="uk-gaap:PostBalanceSheetEventGrouping">
        <inline xbrl-concept="uk-gaap:DescriptionPostBalanceSheetEventEstimateItsFinancialEffect" xbrl-period="EndCurrentPeriod">
          <data>
						reporting.queries.client.lookupaccountingperioddata(item, '*|Postbalancesheetevent|Postbalancesheetevent|Description|Current Period')[0].Value
					</data>
        </inline>
      </para>
    </iterator>
  </section>
</add-to-body></template>
					</report-template>
				</report-template>
				<report-template version="12" name="Related party transactions" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|RelatedParties|Directors|AdvancesCredits|*|DirectorAdvanceCredit|DirectorAdvanceCredit|AdvancesCreditsDirector|Current Period&quot;)[0].HasValue) or (reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|RelatedParties|Directors|Guarantees|*|Guarantee|Guarantee|GuaranteeDirector|Current Period&quot;)[0].HasValue) or (reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|RelatedParties|OtherRelatedPartyTransactions|Transaction|*|Transaction|Transaction|Name|Current Period&quot;)[0].HasValue) or(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|RelatedParties|OtherRelatedPartyTransactions|FRS8Exemption|Current Period&quot;)[0].Value = true)" enabled="Conditional" section-name="RelatedPartyTransactions" page-break-before="False" keep-with-next-strength="0" template-guid="7ddb89dc-aae9-4cea-9825-06536108b4a3">
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Directors advances, credit and guarantees" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="True" condition="(reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|RelatedParties|Directors|AdvancesCredits|*|DirectorAdvanceCredit|DirectorAdvanceCredit|AdvancesCreditsDirector|Current Period&quot;)[0].HasValue) or (reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|RelatedParties|Directors|Guarantees|*|Guarantee|Guarantee|GuaranteeDirector|Current Period&quot;)[0].HasValue)" enabled="Conditional" section-name="DirectorsAdvancesCreditsAndGuarantees" page-break-before="False" keep-with-next-strength="0" template-guid="28b7db2f-e2d8-439c-ba41-4f6f5ad78db6">
						<template><add-to-body>
</add-to-body></template>
						<report-template version="12" name="Directors advances and credits" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|RelatedParties|Directors|AdvancesCredits|*|DirectorAdvanceCredit|DirectorAdvanceCredit|AdvancesCreditsDirector|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="DirectorsAdvancesCreditsValues" page-break-before="False" keep-with-next-strength="0" template-guid="ea08362a-e7de-467e-b838-aeccf25e2094" contents-name-expression="if  DirectorsDuringPeriod.Count  =  1  then  &amp;quot;Director's advances and credits&amp;quot;  else  &amp;quot;Directors' advances and credits&amp;quot;">
							<template><add-to-body>
  <table>
    <table-row>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
  <section tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|FinancialStatements|RelatedParties')">
    <table base-style="Table Text">
      <column-details column-number="1" free-space="1" />
      <column-details column-number="2" width="22" align="bottom-right" />
      <column-details column-number="3" width="22" align="bottom-right" />
      <column-details column-number="4" width="22" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
      <column-details column-number="5" width="22" align="bottom-right" condition="reportHelper.HasPriorPeriod" />
      <table-row base-style="Table Column Heading">
        <table-cell>
        </table-cell>
        <table-cell>
          <para para-alignment="Centre" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
            <data>if 

reportHelper.IsAnnual

then

reportHelper.CurrentPeriod.EndDate.Value.ToString('yyyy')

else

if

reportHelper.CurrentPeriod.IsYear

then

'Year ended '+reportHelper.CurrentPeriod.EndDate.Value.ToString('d MMMM yyyy')

else

reportHelper.CurrentPeriod.StartDate.Value.ToString('d MMMM yyyy')+ ' to ' + reportHelper.CurrentPeriod.EndDate.Value.ToString('d MMMM yyyy')
</data>
            <ws />
            <br />Advance/ Credit
<br /><data>reportHelper.StatutoryNoteScalingHeader</data></para>
        </table-cell>
        <table-cell>
          <para para-alignment="Centre" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
            <data>if 

reportHelper.IsAnnual

then

reportHelper.CurrentPeriod.EndDate.Value.ToString('yyyy')

else

if

reportHelper.CurrentPeriod.IsYear

then

'Year ended '+reportHelper.CurrentPeriod.EndDate.Value.ToString('d MMMM yyyy')

else

reportHelper.CurrentPeriod.StartDate.Value.ToString('d MMMM yyyy')+ ' to ' + reportHelper.CurrentPeriod.EndDate.Value.ToString('d MMMM yyyy')
</data>
            <ws />
            <br />Repaid
<br /><data>reportHelper.StatutoryNoteScalingHeader</data></para>
        </table-cell>
        <table-cell>
          <para para-alignment="Centre" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <data>if 

reportHelper.IsAnnual

then

reportHelper.ComparativePeriod(1).EndDate.Value.ToString('yyyy')

else

if

reportHelper.ComparativePeriod(1).IsYear

then

'Year ended '+reportHelper.ComparativePeriod(1).EndDate.Value.ToString('d MMMM yyyy')

else

reportHelper.ComparativePeriod(1).StartDate.Value.ToString('d MMMM yyyy')+ ' to ' + reportHelper.ComparativePeriod(1).EndDate.Value.ToString('d MMMM yyyy')
</data>
            <ws />
            <br />Advance/ Credit
<br /><data>reportHelper.StatutoryNoteScalingHeader</data></para>
        </table-cell>
        <table-cell>
          <para para-alignment="Centre" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            <data>if 

reportHelper.IsAnnual

then

reportHelper.ComparativePeriod(1).EndDate.Value.ToString('yyyy')

else

if

reportHelper.ComparativePeriod(1).IsYear

then

'Year ended '+reportHelper.ComparativePeriod(1).EndDate.Value.ToString('d MMMM yyyy')

else

reportHelper.ComparativePeriod(1).StartDate.Value.ToString('d MMMM yyyy')+ ' to ' + reportHelper.ComparativePeriod(1).EndDate.Value.ToString('d MMMM yyyy')
</data>
            <ws />
            <br />Repaid
<br /><data>reportHelper.StatutoryNoteScalingHeader</data></para>
        </table-cell>
      </table-row>
      <table-row-iterator condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|RelatedParties|Directors|AdvancesCredits|*')[0].HasValue" iterate-over="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|RelatedParties|Directors|AdvancesCredits|*')" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
        <var name="AdvanceCredit" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|DirectorAdvanceCredit|DirectorAdvanceCredit|DirectorsAdvancesCredits|Rows|*')" />
        <var name="OfficerRoot" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|DirectorAdvanceCredit|DirectorAdvanceCredit|AdvancesCreditsDirector|Current Period|New/EditOfficer')[0]" />
        <var name="OfficerType" pre="reporting.queries.client.lookupaccountingperioddata(OfficerRoot ,'*|General|Type|Current Period')[0]" />
        <var name="XBRLOfficerType" pre="if OfficerType.Value = 'Chairman' then 'uk-bus:Chairman' else&#xD;&#xA;if OfficerType.Value = 'Chief executive' then 'uk-bus:ChiefExecutive' else&#xD;&#xA;if OfficerType.Value = 'Chairman and chief executive' then 'uk-bus:ChairmanChiefExecutive' else&#xD;&#xA;if OfficerType.Value = 'Company secretary' then 'uk-bus:CompanySecretary' else&#xD;&#xA;if OfficerType.Value = 'Company secretary and director' then 'uk-bus:CompanySecretaryDirector' else&#xD;&#xA;if OfficerType.Value = 'Director' then 'uk-bus:Director'+(OfficersList.IndexOf(reporting.queries.client.lookupaccountingperioddata(OfficerRoot, '*')[0])+1)&#xD;&#xA;else 'uk-bus:AllEntityOfficers'" />
        <section>
          <table-row>
            <table-cell>
              <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
                <data base-style="Note Heading">
                                                                                                                                                reporting.queries.client.lookupaccountingperioddata(item, '*|DirectorAdvanceCredit|DirectorAdvanceCredit|AdvancesCreditsDirector|Current Period')[0].Value
                                                                        </data>
              </para>
            </table-cell>
          </table-row>
          <table-row-iterator iterate-over="AdvanceCredit" instance-name="item2" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
            <var name="currentItem" init="0" pre="currentItem + 1" />
            <var name="amount" init="0m" pre="Convert.ToDecimal(reporting.queries.client.lookupaccountingperioddata(item2, '*|Amount|Current Period')[0].Value) + amount" />
            <var name="repaid" init="0m" pre="Convert.ToDecimal(reporting.queries.client.lookupaccountingperioddata(item2, '*|Repaid|Current Period')[0].Value) + repaid" />
            <var name="amountPrior" init="0m" pre="Convert.ToDecimal(reporting.queries.client.lookupaccountingperioddata(item2, '*|Amount|Prior Period')[0].Value) + amountPrior" />
            <var name="repaidPrior" init="0m" pre="Convert.ToDecimal(reporting.queries.client.lookupaccountingperioddata(item2, '*|Repaid|Prior Period')[0].Value) + repaidPrior" />
            <table-row xbrl-concept="uk-direp:SpecificAdvanceOrCreditDirectorsGrouping" xbrl-hypercube="uk-bus:EntityOfficersHypercube" xbrl-dimensions="uk-bus:EntityOfficersDimension=XBRLOfficerType">
              <table-cell>
                <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-direp:DescriptionSpecificAdvanceOrCreditItsConditionsDirectors" xbrl-period="CurrentPeriod">
                  <data>reporting.queries.client.lookupaccountingperioddata(item2, '*|RateAndConditions|Current Period')[0].Value</data>
                </para>
              </table-cell>
              <table-cell>
                <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-direp:AmountSpecificAdvanceOrCreditMadeInPeriodDirectors" xbrl-period="CurrentPeriod">
                  <data para-alignment="Right">reporting.queries.client.lookupaccountingperioddata(item2, '*|Amount|Current Period')[0].Value / reportHelper.StatutoryNoteScaling</data>
                  <inline para-alignment="Right">
                  </inline>
                </para>
              </table-cell>
              <table-cell>
                <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-direp:AmountSpecificAdvanceOrCreditRepaidInPeriodDirectors" xbrl-period="CurrentPeriod">
                  <data para-alignment="Right">reporting.queries.client.lookupaccountingperioddata(item2, '*|Repaid|Current Period')[0].Value / reportHelper.StatutoryNoteScaling</data>
                  <inline para-alignment="Right">
                  </inline>
                </para>
              </table-cell>
              <table-cell>
                <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
                  <data para-alignment="Right">reporting.queries.client.lookupaccountingperioddata(item2, '*|Amount|Prior Period')[0].Value / reportHelper.StatutoryNoteScaling</data>
                  <inline para-alignment="Right">
                  </inline>
                </para>
              </table-cell>
              <table-cell>
                <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
                  <data para-alignment="Right">reporting.queries.client.lookupaccountingperioddata(item2, '*|Repaid|Prior Period')[0].Value / reportHelper.StatutoryNoteScaling</data>
                  <inline para-alignment="Right">
                  </inline>
                </para>
              </table-cell>
            </table-row>
            <table-row condition="currentItem = AdvanceCredit.Count and AdvanceCredit.Count &gt; 1">
              <table-cell />
              <table-cell>
                <para para-alignment="Full" top-border-size="0.5pt" top-border-style="Solid" bottom-border-style="DoubleLine" bottom-border-size="2pt" outer-left-border-clearance="2mm" outer-bottom-border-clearance="-0.7mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
                  <data para-alignment="Right">
                                                                                                amount / reportHelper.StatutoryNoteScaling
                                                                                    </data>
                  <inline para-alignment="Right">
                  </inline>
                </para>
              </table-cell>
              <table-cell>
                <para para-alignment="Full" top-border-size="0.5pt" top-border-style="Solid" bottom-border-style="DoubleLine" bottom-border-size="2pt" outer-left-border-clearance="2mm" outer-bottom-border-clearance="-0.7mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
                  <data para-alignment="Right">
                                                                                                repaid / reportHelper.StatutoryNoteScaling
                                                                                    </data>
                  <inline para-alignment="Right">
                  </inline>
                </para>
              </table-cell>
              <table-cell>
                <para para-alignment="Full" top-border-size="0.5pt" top-border-style="Solid" bottom-border-style="DoubleLine" bottom-border-size="2pt" outer-left-border-clearance="2mm" outer-bottom-border-clearance="-0.7mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
                  <data para-alignment="Right">
                                                                                                amountPrior / reportHelper.StatutoryNoteScaling
                                                                                    </data>
                  <inline para-alignment="Right">
                  </inline>
                </para>
              </table-cell>
              <table-cell>
                <para para-alignment="Full" top-border-size="0.5pt" top-border-style="Solid" bottom-border-style="DoubleLine" bottom-border-size="2pt" outer-left-border-clearance="2mm" outer-bottom-border-clearance="-0.7mm" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
                  <data para-alignment="Right">
                                                                                                repaidPrior / reportHelper.StatutoryNoteScaling
                                                                                    </data>
                  <inline para-alignment="Right">
                  </inline>
                </para>
              </table-cell>
            </table-row>
            <table-row condition="currentItem = AdvanceCredit.Count and AdvanceCredit.Count = 1">
              <table-cell>
              </table-cell>
              <table-cell>
                <para outer-left-border-clearance="2mm" bottom-border-style="doubleline" bottom-border-size="2pt" para-alignment="right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
                </para>
              </table-cell>
              <table-cell>
                <para outer-left-border-clearance="2mm" bottom-border-style="doubleline" bottom-border-size="2pt" currency-format="#,#" para-alignment="right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
                </para>
              </table-cell>
              <table-cell>
                <para outer-left-border-clearance="2mm" bottom-border-style="doubleline" bottom-border-size="2pt" currency-format="#,#" para-alignment="right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
                </para>
              </table-cell>
              <table-cell>
                <para outer-left-border-clearance="2mm" bottom-border-style="doubleline" bottom-border-size="2pt" currency-format="#,#" para-alignment="right" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
                </para>
              </table-cell>
            </table-row>
          </table-row-iterator>
        </section>
        <table-row>
          <table-cell />
          <table-cell>
          </table-cell>
          <table-cell>
          </table-cell>
          <table-cell>
          </table-cell>
          <table-cell>
          </table-cell>
        </table-row>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
						</report-template>
						<report-template version="12" name="Directors guarantees" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|RelatedParties|Directors|Guarantees|*|Guarantee|Guarantee|GuaranteeDirector|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="DirectorsGuaranatees" page-break-before="False" keep-with-next-strength="0" template-guid="d049df95-1d63-4b13-aae5-fa602d335f8c" contents-name-expression="if (Guarantees.Count = 1)  then  &amp;quot;Director's guarantee&amp;quot;  else  if (DirectorsActiveAtFinalisationCount  =  1 and Guarantees.Count != 1) then &amp;quot;Director's guarantees&amp;quot; else &amp;quot;Directors' guarantees&amp;quot;">
							<variables>
								<variable name="Guarantees">reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|RelatedParties|Directors|Guarantees|*',null,true)</variable>
							</variables>
							<template><add-to-body>
  <table>
    <table-row>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
  <section tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|FinancialStatements|RelatedParties')">
    <table base-style="Table Text">
      <table-row>
        <table-cell>
          <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">During the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> the company entered into the following guarantee<inline condition="Guarantees.Count != 1">s</inline><ws /> on behalf of the director<inline condition="DirectorsActiveAtFinalisationCount  &gt;  1 ">s</inline>
:</para>
        </table-cell>
      </table-row>
      <table-row-iterator iterate-over="Guarantees" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
        <var name="OfficerRoot" pre="reporting.queries.client.lookupaccountingperioddata(item, '*|Guarantee|Guarantee|GuaranteeDirector|Current Period|New/EditOfficer')[0]" />
        <var name="OfficerType" pre="reporting.queries.client.lookupaccountingperioddata(OfficerRoot ,'*|General|Type|Current Period')[0]" />
        <var name="XBRLOfficerType" pre="if OfficerType.Value = 'Chairman' then 'uk-bus:Chairman' else&#xD;&#xA;if OfficerType.Value = 'Chief executive' then 'uk-bus:ChiefExecutive' else&#xD;&#xA;if OfficerType.Value = 'Chairman and chief executive' then 'uk-bus:ChairmanChiefExecutive' else&#xD;&#xA;if OfficerType.Value = 'Company secretary' then 'uk-bus:CompanySecretary' else&#xD;&#xA;if OfficerType.Value = 'Company secretary and director' then 'uk-bus:CompanySecretaryDirector' else&#xD;&#xA;if OfficerType.Value = 'Director' then 'uk-bus:Director'+(OfficersList.IndexOf(reporting.queries.client.lookupaccountingperioddata(OfficerRoot, '*')[0])+1)&#xD;&#xA;else 'uk-bus:AllEntityOfficers'" />
        <table-row xbrl-concept="uk-direp:SpecificGuaranteeDirectorsGrouping">
          <table-cell>
            <para xbrl-hypercube="uk-bus:EntityOfficersHypercube" xbrl-dimensions="uk-bus:EntityOfficersDimension=XBRLOfficerType" para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
              <inline xbrl-concept="uk-direp:DescriptionSpecificGuaranteeItsTermsDirectors" xbrl-period="CurrentPeriod">
                <data>reporting.queries.client.lookupaccountingperioddata(item, '*|Guarantee|Guarantee|GuaranteeAndTerms|Current Period')[0].Value</data>
              </inline>
              <ws /> on behalf of <ws /><data>reporting.queries.client.lookupaccountingperioddata(item, '*|Guarantee|Guarantee|GuaranteeDirector|Current Period')[0].Value</data>
. The maximum liability that may be incurred by the company is <ws /><inline xbrl-concept="uk-direp:MaximumLiabilityUnderSpecificGuaranteeDirectors" xbrl-period="EndCurrentPeriod" xbrl-scaling="0"><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata(item, '*|Guarantee|Guarantee|MaximumLiability|Current Period')[0].Value</data></inline><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.PriorPeriod.EndDate.Value.Year</data><ws /> - <ws /><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata(item, '*|Guarantee|Guarantee|MaximumLiability|Prior Period')[0].Value</data>
)</inline>
.<inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|Guarantee|Guarantee|AmountAndLiability|Current Period')[0].HasValue&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;&#xD;&#xA;(reportHelper.HasPriorPeriod and reporting.queries.client.lookupaccountingperioddata(item, '*|Guarantee|Guarantee|AmountAndLiability|Prior Period')[0].HasValue)"><ws /> In fulfilling the guarantee the amount paid and liability incurred amounted to <ws /><inline xbrl-concept="uk-direp:AmountPaidLiabilityIncurredInFulfillingSpecificGuaranteeDirectors" xbrl-period="CurrentPeriod"><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata(item, '*|Guarantee|Guarantee|AmountAndLiability|Current Period')[0].Value</data></inline><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.PriorPeriod.EndDate.Value.Year</data><ws /> - <ws /><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata(item, '*|Guarantee|Guarantee|AmountAndLiability|Prior Period')[0].Value</data>
)</inline>
.</inline><inline condition="reporting.queries.client.lookupaccountingperioddata(item, '*|Guarantee|Guarantee|Repaid|Current Period')[0].HasValue&#xD;&#xA;&#xD;&#xA;or &#xD;&#xA;&#xD;&#xA;(reportHelper.HasPriorPeriod and reporting.queries.client.lookupaccountingperioddata(item, '*|Guarantee|Guarantee|Repaid|Prior Period')[0].HasValue)"><ws /><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata(item, '*|Guarantee|Guarantee|Repaid|Current Period')[0].Value</data><ws /> was repaid during the year<inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.PriorPeriod.EndDate.Value.Year</data><ws /> - <ws /><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata(item, '*|Guarantee|Guarantee|Repaid|Prior Period')[0].Value</data>
)</inline>
.</inline></para>
          </table-cell>
        </table-row>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
						</report-template>
					</report-template>
					<report-template version="12" name="Other related party transactions" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|RelatedParties|OtherRelatedPartyTransactions|Transaction|*|Transaction|Transaction|Name|Current Period&quot;)[0].HasValue" enabled="Conditional" section-name="OtherRelatedPartyTransactions" page-break-before="False" keep-with-next-strength="0" template-guid="4b1b2448-7774-4074-b854-42070d3b61ef">
						<template><add-to-body>
  <table>
    <table-row>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
            report.Sections.ActiveSection.Description
          </data>
        </para>
      </table-cell>
    </table-row>
  </table>
  <section tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|FinancialStatements|RelatedParties')">
    <table>
      <table-row>
        <table-cell>
          <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
            During the <ws /><data>reportHelper.CurrentPeriod.YearPeriod</data><ws /> the company made the following related party transactions:
          </para>
        </table-cell>
      </table-row>
      <table-row-iterator condition="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|RelatedParties|OtherRelatedPartyTransactions|Transaction|*')[0].HasValue" iterate-over="reporting.queries.client.lookupaccountingperioddata('Disclosure|FinancialStatements|RelatedParties|OtherRelatedPartyTransactions|Transaction|*')" instance-name="item" as="Digita.AccountsPro.BO.Client.DataStructure.VisitableItemHolder">
        <table-row>
          <table-cell>
            <para para-alignment="Full" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:RelatedPartyTransactionsGrouping">
              <inline xbrl-concept="uk-gaap:NamesRelatedPartiesInvolvedInTransaction" xbrl-period="CurrentPeriod">
                <data>reporting.queries.client.lookupaccountingperioddata(item, '*|Transaction|Transaction|Name|Current Period')[0].Value</data>
              </inline>
              <ws /> (<inline xbrl-concept="uk-gaap:DescriptionRelationshipBetweenParties" xbrl-period="CurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|Transaction|Transaction|Relationship|Current Period')[0].Value</data></inline>
              ). <ws /><inline xbrl-concept="uk-gaap:DescriptionTransactionGeneralAmountsInvolved" xbrl-period="CurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata(item, '*|Transaction|Transaction|Transaction|Current Period')[0].Value</data></inline>
              . At the balance sheet date the amount due
              <inline condition="(reportHelper.HasPriorPeriod and (reporting.queries.client.lookupaccountingperioddata(item, '*|Transaction|Transaction|Amount|Current Period')[0].Value &lt;=0 and reporting.queries.client.lookupaccountingperioddata(item, '*|Transaction|Transaction|Amount|Prior Period')[0].Value &lt;=0) )or(reportHelper.HasPriorPeriod=false and (reporting.queries.client.lookupaccountingperioddata(item, '*|Transaction|Transaction|Amount|Current Period')[0].Value &lt;=0))"><ws /> to</inline><inline condition="(reportHelper.HasPriorPeriod and(reporting.queries.client.lookupaccountingperioddata(item, '*|Transaction|Transaction|Amount|Current Period')[0].Value &gt;0 and reporting.queries.client.lookupaccountingperioddata(item, '*|Transaction|Transaction|Amount|Prior Period')[0].Value &gt;0) )or(reportHelper.HasPriorPeriod=false and (reporting.queries.client.lookupaccountingperioddata(item, '*|Transaction|Transaction|Amount|Current Period')[0].Value &gt;0))"><ws /> from</inline><inline condition="(reportHelper.HasPriorPeriod and(reporting.queries.client.lookupaccountingperioddata(item, '*|Transaction|Transaction|Amount|Current Period')[0].Value &lt;=0 and reporting.queries.client.lookupaccountingperioddata(item, '*|Transaction|Transaction|Amount|Prior Period')[0].Value &gt;0) )"><ws /> (to)/from </inline><inline condition="(reportHelper.HasPriorPeriod and(reporting.queries.client.lookupaccountingperioddata(item, '*|Transaction|Transaction|Amount|Current Period')[0].Value &gt;0 and reporting.queries.client.lookupaccountingperioddata(item, '*|Transaction|Transaction|Amount|Prior Period')[0].Value &lt;=0) )"><ws /> from/(to) </inline><ws /><data>reporting.queries.client.lookupaccountingperioddata(item, '*|Transaction|Transaction|Name|Current Period')[0].Value</data><ws /> was <ws /><inline xbrl-concept="uk-gaap:AmountDueFromToRelatedParty" xbrl-period="EndCurrentPeriod"><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata(item, '*|Transaction|Transaction|Amount|Current Period')[0].Value</data></inline><inline condition="reportHelper.HasPriorPeriod"><ws /> (<data>reportHelper.PriorPeriod.EndDate.Value.Year</data><ws /> - <ws /><data base-style="Inline Currency">reporting.queries.client.lookupaccountingperioddata(item, '*|Transaction|Transaction|Amount|Prior Period')[0].Value</data>
                )
              </inline>
              .
            </para>
          </table-cell>
        </table-row>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
					</report-template>
					<report-template version="12" name="FRS 8 exemption" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|RelatedParties|OtherRelatedPartyTransactions|FRS8Exemption|Current Period&quot;)[0].Value = true" enabled="Conditional" section-name="FRS8Exemption" page-break-before="False" keep-with-next-strength="0" template-guid="521992a5-24b6-439a-a2f4-82acc8203cba">
						<template><add-to-body>
  <para smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" xbrl-concept="uk-gaap:RelatedPartyTransactionExemptionBeingClaimed" xbrl-period="CurrentPeriod">
	The company has taken advantage of the exemption in FRS8 "Related Party Disclosures" from disclosing transactions with other members of the group.
						
</para>
</add-to-body></template>
					</report-template>
				</report-template>
				<report-template version="12" name="Control" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="true" enabled="Always" section-name="Control" page-break-before="False" keep-with-next-strength="0" template-guid="730a6e37-7dbc-49f4-bd43-d2969616dde8">
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Control" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="ControllingParty" page-break-before="False" keep-with-next-strength="0" template-guid="2841b6f6-9b09-49d6-b11b-e320f0733abd">
						<template><add-to-body>
  <para para-alignment="Full" tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|FinancialStatements|Control')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
    <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|Control|Control|Control|Current Period&quot;)[0].Value ='The company is controlled by the director(s)'">The company is controlled by the director<inline condition="DirectorsActiveAtFinalisationCount  &gt;  1">s</inline><ws /> who own<inline condition="DirectorsActiveAtFinalisationCount  &lt;=  1">s</inline><ws /><data base-style="Percentage">reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|Control|Control|%|Current Period")[0].Value</data><inline base-style="Percentage"><ws /> of the called up share capital</inline>
.</inline>
    <inline xbrl-concept="uk-gaap:UltimateParentEntityOrControllingPartyGrouping">
      <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|Control|Control|Control|Current Period&quot;)[0].Value ='The company is not controlled by the director(s)'">The company is controlled by <ws /><inline xbrl-concept="uk-gaap:NameControllingParty" xbrl-period="CurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|Control|Control|ControllingParty|Current Period")[0].Value</data></inline><ws /><inline xbrl-concept="uk-gaap:InformationOnControllingPartyIncludingDescriptionRelationship" xbrl-period="CurrentPeriod"><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|Control|Control|Relationship|Current Period")[0].Value</data></inline>
.</inline>
      <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|Control|Control|UltimateControl|Current Period&quot;)[0].Value = 'Not the same as the controlling party'">
        <ws /> The ultimate controlling party is <ws /><data>reporting.queries.client.lookupaccountingperioddata("Disclosure|FinancialStatements|Control|Control|UltimateControllingParty|Current Period")[0].Value</data>
.</inline>
    </inline>
    <inline xbrl-concept="uk-gaap:StatementThatUltimateControllingPartyNotKnown" xbrl-period="CurrentPeriod">
      <inline condition="reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|FinancialStatements|Control|Control|UltimateControl|Current Period&quot;)[0].Value ='Not known'">
        <ws /> The ultimate controlling party is not known.</inline>
    </inline>
  </para>
</add-to-body></template>
					</report-template>
				</report-template>
				<report-template version="12" name="APB Ethical Standards relevant circumstances" include-in-numbering="True" include-in-contents="False" include-in-report-map="True" isdir="True" condition="(FRSSE = true) and (reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|CompanyStatus|CompanyStatus|CompanyStatus|Audited|Current Period&quot;)[0].Value = true) and (reporting.queries.client.lookupaccountingperioddata(&quot;Disclosure|AuditorsReport|RelevantCircumstances|RelevantCircumstances|RelevantCircumstances|Current Period&quot;)[0].HasValue)" enabled="Conditional" section-name="APBEthicalStandardsRelevantCircumstances" page-break-before="False" keep-with-next-strength="1" template-guid="671a618b-dee7-4be7-a5da-6e2a2e131a76">
					<template><add-to-body>
  <table>
    <table-row>
      <table-cell base-style="Note Number Indent">
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}">
          <data condition="report.Sections.ActiveSection.NoteNumber != null">report.Sections.ActiveSection.NoteNumber</data>
        </para>
      </table-cell>
      <table-cell>
        <para base-style="Note Heading" smart-tag="new ISmartTag[] {uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph}" width="100%">
          <data>
report.Sections.ActiveSection.Description
</data>
        </para>
      </table-cell>
    </table-row>
  </table>
</add-to-body></template>
					<report-template version="12" name="Relevant circumstances note" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="APBPASERelevanceCircustancesNote" page-break-before="False" keep-with-next-strength="0" template-guid="f595d30c-38cd-460c-a940-d51111af2ef6">
						<template><add-to-body>
  <para tag-value="uiHooks.TagFactory.Commands.LaunchDynamicDataDialog('Disclosure|AuditorsReport|RelevantCircumstances')" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }">
    <data para-alignment="Left">reporting.queries.client.lookupaccountingperioddata("Disclosure|AuditorsReport|RelevantCircumstances|RelevantCircumstances|RelevantCircumstances|Current Period")[0].Value</data>
  </para>
</add-to-body></template>
					</report-template>
				</report-template>
			</report-template>
		</report-template>
		<report-template version="12" name="Non-statutory pages" include-in-numbering="False" include-in-contents="True" include-in-report-map="False" isdir="True" condition="true" enabled="Always" section-name="NonStatutoryPages" page-break-before="False" keep-with-next-strength="0" template-guid="3b495011-c85e-4472-93ec-3f2d42c40546">
			<template><page-layout>
</page-layout></template>
			<report-template version="12" name="Non-statutory page footer" include-in-numbering="True" include-in-contents="True" include-in-report-map="True" isdir="False" condition="true" enabled="Always" section-name="NonStatutoryPageFooter" page-break-before="False" keep-with-next-strength="0" template-guid="4f10ce83-ea38-408f-acae-96798d022e63">
				<template><add-to-body>
  <page-footer>
    <para base-style="Page Footer" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
      This page does not form part of the statutory financial statements
<br />Page<ws /><data>footer.CurrentPage</data></para>
  </page-footer>
</add-to-body></template>
			</report-template>
			<report-template version="12" name="Detailed Profit and Loss Account" include-in-numbering="False" include-in-contents="True" include-in-report-map="True" isdir="True" condition="true" enabled="Always" section-name="DetailedProfitAndLoss" page-break-before="False" keep-with-next-strength="0" template-guid="73018477-bf3c-41cc-b1f6-e02ebf8f2465">
				<template><add-to-body>
</add-to-body></template>
				<report-template version="12" name="Detailed P&amp;L header" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="DetailedP&amp;LHeader" page-break-before="False" keep-with-next-strength="0" template-guid="6698d482-94e6-4a8f-8586-ef910dab975b">
					<template><add-to-body>
  <page-header>
    <para base-style="Page Header" smart-tag="new ISmartTag[] { uiHooks.SmartTagFactory.EditParagraph, uiHooks.SmartTagFactory.DeleteParagraph }" width="100%">
      <data>reportHelper.Business.Name</data>
      <inline condition="reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].HasValue and&#xD;&#xA;&#xD;&#xA;reportHelper.Business.Name !=&#xD;&#xA;&#xD;&#xA;reporting.queries.client.lookupaccountingperioddata('ClientSummaryTab|ClientDetails|General|General|TradingName|Current Period')[0].Value">
        <br />
        trading as <ws /><data>reporting.queries.client.lookupaccountingperioddata("ClientSummaryTab|ClientDetails|General|General|Tradingname|Current Period")[0]</data><inline><ws /></inline></inline>
      <br />
      <data condition="report.GetSection('DetailedProfitAndLoss') != null">report.GetSection('DetailedProfitAndLoss').Description</data>
      <ws /> for the <ws /><inline condition="reportHelper.CurrentPeriod.IsYear">
        Year Ended <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data></inline><inline condition="reportHelper.CurrentPeriod.IsYear=false">
       Period from <ws /><data>reportHelper.CurrentPeriod.StartDate.Value</data><ws /> to <ws /><data>reportHelper.CurrentPeriod.EndDate.Value</data></inline><inline para-alignment="left" condition="header.IsContinued" font-style="+Italic"><br />......... continued</inline></para>
  </page-header>
</add-to-body></template>
				</report-template>
				<report-template version="12" name="Detailed profit and loss account values" include-in-numbering="False" include-in-contents="False" include-in-report-map="False" isdir="False" condition="true" enabled="Always" section-name="DetailedProfitLossValues" page-break-before="False" keep-with-next-strength="0" template-guid="d229b1b1-93d5-4ee7-ab3b-bb8a0031e391">
					<template><add-to-body>
  <section width="100%">
    <!-- Setup the Computation and SmartTable -->
    <var name="currentPeriod" pre="reporting.CurrentPeriod" />
    <var name="newComputation" pre="reporting.NewComputation" />
    <var name="smartTable" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.SmartTable.Create(currentPeriod, 'ProfitAndLossAccount', reporting.CurrentPeriod.ClientDetails.ReportOptions.NonStatutoryNoteRounding, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.NonStatutoryNote, 1 / reporting.CurrentPeriod.ClientDetails.ReportOptions.NonStatutoryNoteScaling, Digita.AccountsPro.Reporting.Reporting.TableEditor.RoundingScalingLocation.NonStatutoryNote, -1, report.RenderContext.InDesignMode, this.ReferenceResolver, report)" />
    <var name="smartTableSectionBreakdownContinuousStyle" pre="smartTable.SetSectionBreakdownContinuousStyle('Table Text')" />
    <var name="smartTableSectionBreakdownNonContinuousStyle" pre="smartTable.SetSectionBreakdownNonContinuousStyle('Table Value Underline')" />
    <var name="smartTableSectionBreakdownFinalStyle" pre="smartTable.SetSectionBreakdownFinalStyle('Table Value Underline')" />
    <var name="smartTableSectionTotalContinuousStyle" pre="smartTable.SetSectionTotalContinuousStyle('Total')" />
    <var name="smartTableSectionTotalNonContinuousStyle" pre="smartTable.SetSectionTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableSectionTotalFinalStyle" pre="smartTable.SetSectionTotalFinalStyle('Total Underline')" />
    <var name="smartTableTotalContinuousStyle" pre="smartTable.SetTotalContinuousStyle('Total')" />
    <var name="smartTableTotalNonContinuousStyle" pre="smartTable.SetTotalNonContinuousStyle('Total Underline')" />
    <var name="smartTableTotalFinalStyle" pre="smartTable.SetTotalFinalStyle('Total Underline')" />
    <var name="smartTableGrandTotalStyle" pre="smartTable.SetGrandTotalStyle('Grand Total')" />
    <!-- Add the columns -->
    <var name="column1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableDescriptionColumn.Create('Description', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, false, '0', '40', true, '&lt;para&gt;&lt;/para&gt;', 'centre-bottom', 'bottom-left')" />
    <var name="column1add" pre="smartTable.AddColumn(column1)" />
    <var name="column2filter1" pre="newComputation.GetDateFilter(0, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('CurrentPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column2filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;data&gt;reportHelper.NonStatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '&lt;para&gt;&lt;data&gt;reportHelper.NonStatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;')" />
    <var name="column2XBRLPeriodSet" pre="column2.SetPeriod('CurrentPeriod')" />
    <var name="column2add" pre="smartTable.AddColumn(column2)" />
    <var name="column3filter1" pre="newComputation.GetDateFilter(-1, Digita.AccountsPro.BO.NewComputation.Filters.DateFilter.DateFilterType.EntirePeriod, 0)" />
    <var name="column3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableValueColumn.Create('PriorPeriod', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, '2', '22', new Digita.AccountsPro.BO.NewComputation.Filters.Filter[] { column3filter1 }, false, '&lt;para&gt;&lt;data&gt;if &#xD;&#xA;reportHelper.IsAnnual&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;dateFilter.End.ToString(&amp;apos;yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;if&#xD;&#xA;&#xD;&#xA;dateFilter.End.Subtract(dateFilter.Start.AddYears(1).AddDays(System.Double.Parse(&amp;apos;-1&amp;apos;))).Days = 0&#xD;&#xA;&#xD;&#xA;then&#xD;&#xA;&#xD;&#xA;&amp;apos;Year ended &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;&#xD;&#xA;dateFilter.Start.ToString(&amp;apos;d MMMM yyyy&amp;apos;)+&amp;apos; to &amp;apos;+dateFilter.End.ToString(&amp;apos;d MMMM yyyy&amp;apos;)&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', 'centre-bottom', 'bottom-right', '&lt;para&gt;&lt;data&gt;reportHelper.NonStatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;', '&lt;para&gt;&lt;data&gt;reportHelper.NonStatutoryNoteScalingHeader&lt;/data&gt;&#xD;&#xA;&lt;/para&gt;')" />
    <var name="column3XBRLDimensionsSet" pre="column3.SetDimensions('uk-gaap:RestatementsDimension=if (cell.IsRestated) then ''uk-gaap:RestatedAmount'' else ''uk-gaap:OriginalAmountDefault''')" />
    <var name="column3XBRLHypercubeNameSet" pre="column3.SetHypercubeName('uk-gaap:BasicHypercube')" />
    <var name="column3XBRLPeriodSet" pre="column3.SetPeriod('PriorPeriod')" />
    <var name="column3add" pre="smartTable.AddColumn(column3)" />
    <!-- Add the sections and rows -->
    <var name="section1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('Turnover', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Turnover&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', 'Turnover', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section1subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Sales&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section1subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('001-049', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section1subsection1subsectionitem1add" pre="section1subsection1.AddItem(section1subsection1subsectionitem1)" />
    <var name="section1subsection1add" pre="section1.AddItem(section1subsection1)" />
    <var name="section1XBRLConceptNameSet" pre="section1.SetConceptName('uk-gaap:TurnoverGrossOperatingRevenue')" />
    <var name="section1add" pre="smartTable.AddTableBlock(section1)" />
    <var name="section2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('CostOfSales', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Cost of sales&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section2subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Cost of sales&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section2subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('050-159', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section2subsection1subsectionitem1add" pre="section2subsection1.AddItem(section2subsection1subsectionitem1)" />
    <var name="section2subsection1add" pre="section2.AddItem(section2subsection1)" />
    <var name="section2XBRLConceptNameSet" pre="section2.SetConceptName('uk-gaap:CostSales')" />
    <var name="section2XBRLReverseSignSet" pre="section2.SetReverseSign(true)" />
    <var name="section2add" pre="smartTable.AddTableBlock(section2)" />
    <var name="section3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('GrossProfitLoss', '&lt;para&gt;Gross &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;)&lt;/data&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section3item1" pre="section3.AddTotalItem(section1)" />
    <var name="section3item2" pre="section3.AddTotalItem(section2)" />
    <var name="section3XBRLConceptNameSet" pre="section3.SetConceptName('uk-gaap:GrossProfitLoss')" />
    <var name="section3add" pre="smartTable.AddTableBlock(section3)" />
    <var name="section4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('DistributionCosts', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Distribution costs&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section4subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Distribution&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section4subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('160-229', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section4subsection1subsectionitem1add" pre="section4subsection1.AddItem(section4subsection1subsectionitem1)" />
    <var name="section4subsection1add" pre="section4.AddItem(section4subsection1)" />
    <var name="section4XBRLConceptNameSet" pre="section4.SetConceptName('uk-gaap:DistributionCosts')" />
    <var name="section4XBRLReverseSignSet" pre="section4.SetReverseSign(true)" />
    <var name="section4add" pre="smartTable.AddTableBlock(section4)" />
    <var name="section5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('AdministrativeExpenses', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Always, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Administrative expenses&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section5subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Administration&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section5subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('230-399', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section5subsection1subsectionitem1add" pre="section5subsection1.AddItem(section5subsection1subsectionitem1)" />
    <var name="section5subsection1add" pre="section5.AddItem(section5subsection1)" />
    <var name="section5XBRLConceptNameSet" pre="section5.SetConceptName('uk-gaap:AdministrativeExpenses')" />
    <var name="section5XBRLReverseSignSet" pre="section5.SetReverseSign(true)" />
    <var name="section5add" pre="smartTable.AddTableBlock(section5)" />
    <var name="section6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('OtherOperatingIncome', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Other operating income&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section6subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other operating income&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section6subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('400-409', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section6subsection1subsectionitem1add" pre="section6subsection1.AddItem(section6subsection1subsectionitem1)" />
    <var name="section6subsection1add" pre="section6.AddItem(section6subsection1)" />
    <var name="section6XBRLConceptNameSet" pre="section6.SetConceptName('uk-gaap:OtherOperatingIncome')" />
    <var name="section6add" pre="smartTable.AddTableBlock(section6)" />
    <var name="section7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('OperatingProfitLoss', '&lt;para&gt;Operating &lt;ws/&gt;&lt;data&gt;calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;)&lt;/data&gt;&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.Always, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, 'OperatingProfitLoss')" />
    <var name="section7item1" pre="section7.AddTotalItem(section3)" />
    <var name="section7item2" pre="section7.AddTotalItem(section4)" />
    <var name="section7item3" pre="section7.AddTotalItem(section5)" />
    <var name="section7item4" pre="section7.AddTotalItem(section6)" />
    <var name="section7XBRLConceptNameSet" pre="section7.SetConceptName('uk-gaap:OperatingProfitLoss')" />
    <var name="section7add" pre="smartTable.AddTableBlock(section7)" />
    <var name="section8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ExceptionaItems', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Non-operating exceptional items&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section8subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; on disposal of fixed assets&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section8subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('410-410', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section8subsection1subsectionitem1add" pre="section8subsection1.AddItem(section8subsection1subsectionitem1)" />
    <var name="section8subsection1XBRLConceptNameSet" pre="section8subsection1.SetConceptName('uk-gaap:GainLossFromDisposalFixedAssets')" />
    <var name="section8subsection1add" pre="section8.AddItem(section8subsection1)" />
    <var name="section8subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; on sale or termination of operations&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section8subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('411-411', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section8subsection2subsectionitem1add" pre="section8subsection2.AddItem(section8subsection2subsectionitem1)" />
    <var name="section8subsection2XBRLConceptNameSet" pre="section8subsection2.SetConceptName('uk-gaap:GainLossOnSaleOrTerminationOperations')" />
    <var name="section8subsection2add" pre="section8.AddItem(section8subsection2)" />
    <var name="section8subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Costs of reorganisation and restructuring&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section8subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('412-412', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section8subsection3subsectionitem1add" pre="section8subsection3.AddItem(section8subsection3subsectionitem1)" />
    <var name="section8subsection3XBRLConceptNameSet" pre="section8subsection3.SetConceptName('uk-gaap:CostsGainsFromFundamentalRestructuringOrReorganisation')" />
    <var name="section8subsection3XBRLReverseSignSet" pre="section8subsection3.SetReverseSign(true)" />
    <var name="section8subsection3add" pre="section8.AddItem(section8subsection3)" />
    <var name="section8subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other exceptional items&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section8subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('413-419', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section8subsection4subsectionitem1add" pre="section8subsection4.AddItem(section8subsection4subsectionitem1)" />
    <var name="section8subsection4XBRLConceptNameSet" pre="section8subsection4.SetConceptName('uk-gaap:OtherExceptionalGainLossReportedAfterOperatingProfitLoss')" />
    <var name="section8subsection4add" pre="section8.AddItem(section8subsection4)" />
    <var name="section8XBRLConceptNameSet" pre="section8.SetConceptName('uk-gaap:ExceptionalGainLossReportedAfterOperatingProfitLossSubtotal')" />
    <var name="section8add" pre="smartTable.AddTableBlock(section8)" />
    <var name="section9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('ProfitLossOnOrdinaryActivitiesBeforeInvestmentIncomeAndInterest', '&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;))&lt;/data&gt;&#xD;&#xA;&lt;ws/&gt; on ordinary activities before investment income and interest&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.AsRequired, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section9item1" pre="section9.AddTotalItem(section7)" />
    <var name="section9item2" pre="section9.AddTotalItem(section8)" />
    <var name="section9XBRLConceptNameSet" pre="section9.SetConceptName('uk-gaap:ProfitLossOnOrdinaryActivitiesBeforeFinanceChargesInterest')" />
    <var name="section9add" pre="smartTable.AddTableBlock(section9)" />
    <var name="section10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('IncomeFromSharesInGroupUndertakings', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Income from shares in group undertakings&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section10subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Income from group companies&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section10subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('420-421', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section10subsection1subsectionitem1add" pre="section10subsection1.AddItem(section10subsection1subsectionitem1)" />
    <var name="section10subsection1add" pre="section10.AddItem(section10subsection1)" />
    <var name="section10XBRLConceptNameSet" pre="section10.SetConceptName('uk-gaap:IncomeFromSharesInSubsidiariesGroupUndertakings')" />
    <var name="section10add" pre="smartTable.AddTableBlock(section10)" />
    <var name="section11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('IncomeFromParticipatingInterests', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Income from participating interests&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section11subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Income from participating interests&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section11subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('422-423', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section11subsection1subsectionitem1add" pre="section11subsection1.AddItem(section11subsection1subsectionitem1)" />
    <var name="section11subsection1add" pre="section11.AddItem(section11subsection1)" />
    <var name="section11XBRLConceptNameSet" pre="section11.SetConceptName('uk-gaap:IncomeFromOtherParticipatingInterests')" />
    <var name="section11add" pre="smartTable.AddTableBlock(section11)" />
    <var name="section12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('IncomeFromOtherFixedAssetInvestments', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Income from other fixed asset investments&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section12subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Income from other investments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section12subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('424-429', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section12subsection1subsectionitem1add" pre="section12subsection1.AddItem(section12subsection1subsectionitem1)" />
    <var name="section12subsection1add" pre="section12.AddItem(section12subsection1)" />
    <var name="section12XBRLConceptNameSet" pre="section12.SetConceptName('uk-gaap:IncomeFromOtherFixedAssetInvestments')" />
    <var name="section12add" pre="smartTable.AddTableBlock(section12)" />
    <var name="section13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('OtherInterestReceivableAndSimilarIncome', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Other interest receivable and similar income&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section13subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Interest receivable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section13subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('430-439', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section13subsection1subsectionitem1add" pre="section13subsection1.AddItem(section13subsection1subsectionitem1)" />
    <var name="section13subsection1add" pre="section13.AddItem(section13subsection1)" />
    <var name="section13subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Pension scheme finance income/costs&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section13subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('462', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.CreditOnly, false, false)" />
    <var name="section13subsection2subsectionitem1add" pre="section13subsection2.AddItem(section13subsection2subsectionitem1)" />
    <var name="section13subsection2add" pre="section13.AddItem(section13subsection2)" />
    <var name="section13XBRLConceptNameSet" pre="section13.SetConceptName('uk-gaap:OtherInterestReceivableSimilarIncome')" />
    <var name="section13add" pre="smartTable.AddTableBlock(section13)" />
    <var name="section14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('AmountsWrittenOffInvestments', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Amounts written off investments&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section14subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Written off investments&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section14subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('440-441', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section14subsection1subsectionitem1add" pre="section14subsection1.AddItem(section14subsection1subsectionitem1)" />
    <var name="section14subsection1add" pre="section14.AddItem(section14subsection1)" />
    <var name="section14XBRLConceptNameSet" pre="section14.SetConceptName('uk-gaap:AmountsWrittenOffBackInvestments')" />
    <var name="section14XBRLReverseSignSet" pre="section14.SetReverseSign(true)" />
    <var name="section14add" pre="smartTable.AddTableBlock(section14)" />
    <var name="section15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('InterestPayableAndSimilarCharges', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.NonZero, true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Debit, '&lt;para&gt;Interest payable and similar charges&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;&lt;/para&gt;', 'InterestPayableAndSimilarCharges', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section15subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Bank interest payable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('444', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection1subsectionitem1add" pre="section15subsection1.AddItem(section15subsection1subsectionitem1)" />
    <var name="section15subsection1add" pre="section15.AddItem(section15subsection1)" />
    <var name="section15subsection2" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Bank loan interest payable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection2subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('445', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection2subsectionitem1add" pre="section15subsection2.AddItem(section15subsection2subsectionitem1)" />
    <var name="section15subsection2add" pre="section15.AddItem(section15subsection2)" />
    <var name="section15subsection3" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Preference share dividends&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection3subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('447', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection3subsectionitem1add" pre="section15subsection3.AddItem(section15subsection3subsectionitem1)" />
    <var name="section15subsection3add" pre="section15.AddItem(section15subsection3)" />
    <var name="section15subsection4" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Loan interest&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection4subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('448', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection4subsectionitem1add" pre="section15subsection4.AddItem(section15subsection4subsectionitem1)" />
    <var name="section15subsection4add" pre="section15.AddItem(section15subsection4)" />
    <var name="section15subsection5" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Operating lease interest&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection5subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('449', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection5subsectionitem1add" pre="section15subsection5.AddItem(section15subsection5subsectionitem1)" />
    <var name="section15subsection5add" pre="section15.AddItem(section15subsection5)" />
    <var name="section15subsection6" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Factoring interest&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection6subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('450', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection6subsectionitem1add" pre="section15subsection6.AddItem(section15subsection6subsectionitem1)" />
    <var name="section15subsection6add" pre="section15.AddItem(section15subsection6)" />
    <var name="section15subsection7" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other interest payable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection7subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('451', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection7subsectionitem1add" pre="section15subsection7.AddItem(section15subsection7subsectionitem1)" />
    <var name="section15subsection7add" pre="section15.AddItem(section15subsection7)" />
    <var name="section15subsection8" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other interest payable on loans under 1 year&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection8subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('452', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection8subsectionitem1add" pre="section15subsection8.AddItem(section15subsection8subsectionitem1)" />
    <var name="section15subsection8add" pre="section15.AddItem(section15subsection8)" />
    <var name="section15subsection9" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other interest payable on loans 2-5 years&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection9subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('454', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection9subsectionitem1add" pre="section15subsection9.AddItem(section15subsection9subsectionitem1)" />
    <var name="section15subsection9add" pre="section15.AddItem(section15subsection9)" />
    <var name="section15subsection10" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Other interest payable on loans over 5 years&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection10subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('455', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection10subsectionitem1add" pre="section15subsection10.AddItem(section15subsection10subsectionitem1)" />
    <var name="section15subsection10add" pre="section15.AddItem(section15subsection10)" />
    <var name="section15subsection11" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Premium on repayment of loans&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection11subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('458', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection11subsectionitem1add" pre="section15subsection11.AddItem(section15subsection11subsectionitem1)" />
    <var name="section15subsection11add" pre="section15.AddItem(section15subsection11)" />
    <var name="section15subsection12" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;(Gains)/losses on early repurchase of debt&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection12subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('461', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection12subsectionitem1add" pre="section15subsection12.AddItem(section15subsection12subsectionitem1)" />
    <var name="section15subsection12add" pre="section15.AddItem(section15subsection12)" />
    <var name="section15subsection13" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Pension scheme finance income/costs&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection13subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('462', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.DebitOnly, false, false)" />
    <var name="section15subsection13subsectionitem1add" pre="section15subsection13.AddItem(section15subsection13subsectionitem1)" />
    <var name="section15subsection13add" pre="section15.AddItem(section15subsection13)" />
    <var name="section15subsection14" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Group interest payable&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection14subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('463-464', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection14subsectionitem1add" pre="section15subsection14.AddItem(section15subsection14subsectionitem1)" />
    <var name="section15subsection14add" pre="section15.AddItem(section15subsection14)" />
    <var name="section15subsection15" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;HP and finance lease interest&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.SubCode, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section15subsection15subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('465-469', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section15subsection15subsectionitem1add" pre="section15subsection15.AddItem(section15subsection15subsectionitem1)" />
    <var name="section15subsection15add" pre="section15.AddItem(section15subsection15)" />
    <var name="section15XBRLConceptNameSet" pre="section15.SetConceptName('uk-gaap:InterestPayableSimilarCharges')" />
    <var name="section15XBRLReverseSignSet" pre="section15.SetReverseSign(true)" />
    <var name="section15add" pre="smartTable.AddTableBlock(section15)" />
    <var name="section16" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableTotal.Create('ProfitLossOnOrdinaryActivitiesBeforeTaxation', '&lt;para&gt;&lt;data&gt;reportHelper.Text.StartSentence(calculatedRow.PositiveNegativeText(&amp;apos;profit/(loss)&amp;apos;))&lt;/data&gt;&lt;ws/&gt; on ordinary activities before taxation&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.DisplayTotal.Always, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '')" />
    <var name="section16item1" pre="section16.AddTotalItem(section10)" />
    <var name="section16item2" pre="section16.AddTotalItem(section11)" />
    <var name="section16item3" pre="section16.AddTotalItem(section12)" />
    <var name="section16item4" pre="section16.AddTotalItem(section13)" />
    <var name="section16item5" pre="section16.AddTotalItem(section14)" />
    <var name="section16item6" pre="section16.AddTotalItem(section15)" />
    <var name="section16item7" pre="section16.AddTotalItem(section9)" />
    <var name="section16XBRLConceptNameSet" pre="section16.SetConceptName('uk-gaap:ProfitLossOnOrdinaryActivitiesBeforeTax')" />
    <var name="section16add" pre="smartTable.AddTableBlock(section16)" />
    <var name="section17" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSection.Create('ProfitAndLossAccountSuspense', Digita.AccountsPro.Reporting.Reporting.TableEditor.Display.Never, false, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Profit and loss account suspense&lt;/para&gt;', true, Digita.AccountsPro.Reporting.Reporting.TableEditor.PositiveTotal.Credit, '&lt;para&gt;Profit and loss account suspense&lt;/para&gt;', '', Digita.AccountsPro.Reporting.Reporting.TableEditor.NoteNumberPosition.Total)" />
    <var name="section17subsection1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsection.Create('&lt;para&gt;Suspense P&amp;L&lt;/para&gt;', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.ChartBreakdown.None, Digita.AccountsPro.Reporting.Reporting.TableEditor.AccountingPeriodDataBreakdown.None, '')" />
    <var name="section17subsection1subsectionitem1" pre="Digita.AccountsPro.Reporting.Reporting.TableEditor.Model.TableSubsectionItem.Create('499-499', Digita.AccountsPro.Reporting.Reporting.TableEditor.Condition.None, false, false)" />
    <var name="section17subsection1subsectionitem1add" pre="section17subsection1.AddItem(section17subsection1subsectionitem1)" />
    <var name="section17subsection1add" pre="section17.AddItem(section17subsection1)" />
    <var name="section17add" pre="smartTable.AddTableBlock(section17)" />
    <!-- Print the table -->
    <var name="noteNumberGenerator" pre="Reporting.Reporting.TableEditor.Renderers.NoteNumberGenerator.Create(report)" />
    <var name="renderer" pre="Reporting.Reporting.TableEditor.Renderers.SmartTableRenderer.GetDefaultRendererInstance()" />
    <table base-style="Table Text">
      <column-details column-number="1" char-align=")" align="bottom-right" />
      <column-details column-number="2" char-align=")" align="bottom-right" />
      <column-details column-number="3" char-align=")" align="bottom-right" />
      <table-row-iterator iterate-over="renderer.Render(smartTable)" instance-name="section" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.ICalculatedSection">
        <section runtime-smart-tag="section.SmartTag">
          <table-row-iterator iterate-over="section.Rows" instance-name="row" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.Interfaces.IRowItem">
            <table-column-iterator iterate-over="row.Cells" instance-name="cell" as="Digita.AccountsPro.Reporting.Reporting.TableEditor.CalculatedCell">
              <!-- Cell which has a fixed width and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which has a fixed width and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace = false and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" runtime-width="cell.Width" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
              <!-- Cell which uses available free-space and doesn't need padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells = false">
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
              </table-row>
              <!-- Cell which uses available free-space and has padding cells either side of the main cell -->
              <table-row condition="cell.UseFreeSpace and cell.HasPaddingCells">
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
                <table-cell base-runtime-style="cell.Style" free-space="100" runtime-smart-tag="cell.SmartTag" runtime-align="cell.Alignment" runtime-number-columns-spanned="cell.ColumnsSpanned" runtime-number-rows-spanned="cell.RowsSpanned" xbrl-element="cell.XBRLElementReference">
                  <para runtime-font-color="cell.Color">
                    <data condition="cell.HasStringContent">cell.ContentString</data>
                    <data condition="cell.HasDecimalContent">cell.ContentDecimal</data>
                    <data condition="cell.HasNoteContent">noteNumberGenerator.GenerateNoteNumberFor(cell.NoteContent)</data>
                  </para>
                </table-cell>
                <table-cell runtime-width="cell.PaddingWidth" runtime-number-rows-spanned="cell.RowsSpanned" />
              </table-row>
            </table-column-iterator>
          </table-row-iterator>
        </section>
      </table-row-iterator>
    </table>
  </section>
</add-to-body></template>
				</report-template>
			</report-template>
		</report-template>
	</report-template>
</report>